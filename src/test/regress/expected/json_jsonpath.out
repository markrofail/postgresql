select json '{"a": 12}' @? '$';
 ?column? 
----------
 t
(1 row)

select json '{"a": 12}' @? '1';
 ?column? 
----------
 t
(1 row)

select json '{"a": 12}' @? '$.a.b';
 ?column? 
----------
 f
(1 row)

select json '{"a": 12}' @? '$.b';
 ?column? 
----------
 f
(1 row)

select json '{"a": 12}' @? '$.a + 2';
 ?column? 
----------
 t
(1 row)

select json '{"a": 12}' @? '$.b + 2';
 ?column? 
----------
 
(1 row)

select json '{"a": {"a": 12}}' @? '$.a.a';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"a": 12}}' @? '$.*.a';
 ?column? 
----------
 t
(1 row)

select json '{"b": {"a": 12}}' @? '$.*.a';
 ?column? 
----------
 t
(1 row)

select json '{"b": {"a": 12}}' @? '$.*.b';
 ?column? 
----------
 f
(1 row)

select json '{"b": {"a": 12}}' @? 'strict $.*.b';
 ?column? 
----------
 
(1 row)

select json '{}' @? '$.*';
 ?column? 
----------
 f
(1 row)

select json '{"a": 1}' @? '$.*';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? 'lax $.**{1}';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? 'lax $.**{2}';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? 'lax $.**{3}';
 ?column? 
----------
 f
(1 row)

select json '[]' @? '$[*]';
 ?column? 
----------
 f
(1 row)

select json '[1]' @? '$[*]';
 ?column? 
----------
 t
(1 row)

select json '[1]' @? '$[1]';
 ?column? 
----------
 f
(1 row)

select json '[1]' @? 'strict $[1]';
 ?column? 
----------
 
(1 row)

select json_path_query('[1]', 'strict $[1]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is out of bounds
select json '[1]' @? 'lax $[10000000000000000]';
 ?column? 
----------
 
(1 row)

select json '[1]' @? 'strict $[10000000000000000]';
 ?column? 
----------
 
(1 row)

select json_path_query('[1]', 'lax $[10000000000000000]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is out of integer range
select json_path_query('[1]', 'strict $[10000000000000000]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is out of integer range
select json '[1]' @? '$[0]';
 ?column? 
----------
 t
(1 row)

select json '[1]' @? '$[0.3]';
 ?column? 
----------
 t
(1 row)

select json '[1]' @? '$[0.5]';
 ?column? 
----------
 t
(1 row)

select json '[1]' @? '$[0.9]';
 ?column? 
----------
 t
(1 row)

select json '[1]' @? '$[1.2]';
 ?column? 
----------
 f
(1 row)

select json '[1]' @? 'strict $[1.2]';
 ?column? 
----------
 
(1 row)

select json_path_query('[1]', 'strict $[1.2]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is out of bounds
select json_path_query('{}', 'strict $[0.3]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  object subscript must be a string or number
select json '{}' @? 'lax $[0.3]';
 ?column? 
----------
 t
(1 row)

select json_path_query('{}', 'strict $[1.2]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  object subscript must be a string or number
select json '{}' @? 'lax $[1.2]';
 ?column? 
----------
 f
(1 row)

select json_path_query('{}', 'strict $[-2 to 3]');
ERROR:  SQL/JSON array not found
DETAIL:  jsonpath array accessor can only be applied to an array
select json '{}' @? 'lax $[-2 to 3]';
 ?column? 
----------
 t
(1 row)

select json '{"a": [1,2,3], "b": [3,4,5]}' @? '$ ? (@.a[*] >  @.b[*])';
 ?column? 
----------
 f
(1 row)

select json '{"a": [1,2,3], "b": [3,4,5]}' @? '$ ? (@.a[*] >= @.b[*])';
 ?column? 
----------
 t
(1 row)

select json '{"a": [1,2,3], "b": [3,4,"5"]}' @? '$ ? (@.a[*] >= @.b[*])';
 ?column? 
----------
 t
(1 row)

select json '{"a": [1,2,3], "b": [3,4,"5"]}' @? 'strict $ ? (@.a[*] >= @.b[*])';
 ?column? 
----------
 f
(1 row)

select json '{"a": [1,2,3], "b": [3,4,null]}' @? '$ ? (@.a[*] >= @.b[*])';
 ?column? 
----------
 t
(1 row)

select json '1' @? '$ ? ((@ == "1") is unknown)';
 ?column? 
----------
 t
(1 row)

select json '1' @? '$ ? ((@ == 1) is unknown)';
 ?column? 
----------
 f
(1 row)

select json '[{"a": 1}, {"a": 2}]' @? '$[0 to 1] ? (@.a > 1)';
 ?column? 
----------
 t
(1 row)

select json_path_query('1', 'lax $.a');
 json_path_query 
-----------------
(0 rows)

select json_path_query('1', 'strict $.a');
ERROR:  SQL/JSON member not found
DETAIL:  jsonpath member accessor can only be applied to an object
select json_path_query('1', 'strict $.*');
ERROR:  SQL/JSON object not found
DETAIL:  jsonpath wildcard member accessor can only be applied to an object
select json_path_query('[]', 'lax $.a');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[]', 'strict $.a');
ERROR:  SQL/JSON member not found
DETAIL:  jsonpath member accessor can only be applied to an object
select json_path_query('{}', 'lax $.a');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{}', 'strict $.a');
ERROR:  SQL/JSON member not found
DETAIL:  JSON object does not contain key "a"
select json_path_query('1', 'strict $[1]');
ERROR:  SQL/JSON array not found
DETAIL:  jsonpath array accessor can only be applied to an array or object
select json_path_query('1', 'strict $[*]');
ERROR:  SQL/JSON array not found
DETAIL:  jsonpath wildcard array accessor can only be applied to an array
select json_path_query('[]', 'strict $[1]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is out of bounds
select json_path_query('[]', 'strict $["a"]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is not a singleton numeric value
select json_path_query('{"a": 12, "b": {"a": 13}}', '$.a');
 json_path_query 
-----------------
 12
(1 row)

select json_path_query('{"a": 12, "b": {"a": 13}}', '$.b');
 json_path_query 
-----------------
 {"a": 13}
(1 row)

select json_path_query('{"a": 12, "b": {"a": 13}}', '$.*');
 json_path_query 
-----------------
 12
 {"a": 13}
(2 rows)

select json_path_query('{"a": 12, "b": {"a": 13}}', 'lax $.*.a');
 json_path_query 
-----------------
 13
(1 row)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[*].a');
 json_path_query 
-----------------
 13
(1 row)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[*].*');
 json_path_query 
-----------------
 13
 14
(2 rows)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[0].a');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[1].a');
 json_path_query 
-----------------
 13
(1 row)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[2].a');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[0,1].a');
 json_path_query 
-----------------
 13
(1 row)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[0 to 10].a');
 json_path_query 
-----------------
 13
(1 row)

select json_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[0 to 10 / 0].a');
ERROR:  division by zero
select json_path_query('[12, {"a": 13}, {"b": 14}, "ccc", true]', '$[2.5 - 1 to $.size() - 2]');
 json_path_query 
-----------------
 {"a": 13}
 {"b": 14}
 "ccc"
(3 rows)

select json_path_query('1', 'lax $[0]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('1', 'lax $[*]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{}', 'lax $[0]');
 json_path_query 
-----------------
 {}
(1 row)

select json_path_query('[1]', 'lax $[0]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('[1]', 'lax $[*]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('[1,2,3]', 'lax $[*]');
 json_path_query 
-----------------
 1
 2
 3
(3 rows)

select json_path_query('[1,2,3]', 'strict $[*].a');
ERROR:  SQL/JSON member not found
DETAIL:  jsonpath member accessor can only be applied to an object
select json_path_query('[]', '$[last]');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[]', '$[last ? (exists(last))]');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[]', 'strict $[last]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is out of bounds
select json_path_query('[1]', '$[last]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{}', '$[last]');
 json_path_query 
-----------------
 {}
(1 row)

select json_path_query('[1,2,3]', '$[last]');
 json_path_query 
-----------------
 3
(1 row)

select json_path_query('[1,2,3]', '$[last - 1]');
 json_path_query 
-----------------
 2
(1 row)

select json_path_query('[1,2,3]', '$[last ? (@.type() == "number")]');
 json_path_query 
-----------------
 3
(1 row)

select json_path_query('[1,2,3]', '$[last ? (@.type() == "string")]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is not a singleton numeric value
select * from json_path_query('{"a": 10}', '$');
 json_path_query 
-----------------
 {"a": 10}
(1 row)

select * from json_path_query('{"a": 10}', '$ ? (@.a < $value)');
ERROR:  cannot find jsonpath variable 'value'
select * from json_path_query('{"a": 10}', '$ ? (@.a < $value)', '1');
ERROR:  json containing jsonpath variables is not an object
select * from json_path_query('{"a": 10}', '$ ? (@.a < $value)', '[{"value" : 13}]');
ERROR:  json containing jsonpath variables is not an object
select * from json_path_query('{"a": 10}', '$ ? (@.a < $value)', '{"value" : 13}');
 json_path_query 
-----------------
 {"a": 10}
(1 row)

select * from json_path_query('{"a": 10}', '$ ? (@.a < $value)', '{"value" : 8}');
 json_path_query 
-----------------
(0 rows)

select * from json_path_query('{"a": 10}', '$.a ? (@ < $value)', '{"value" : 13}');
 json_path_query 
-----------------
 10
(1 row)

select * from json_path_query('[10,11,12,13,14,15]', '$[*] ? (@ < $value)', '{"value" : 13}');
 json_path_query 
-----------------
 10
 11
 12
(3 rows)

select * from json_path_query('[10,11,12,13,14,15]', '$[0,1] ? (@ < $x.value)', '{"x": {"value" : 13}}');
 json_path_query 
-----------------
 10
 11
(2 rows)

select * from json_path_query('[10,11,12,13,14,15]', '$[0 to 2] ? (@ < $value)', '{"value" : 15}');
 json_path_query 
-----------------
 10
 11
 12
(3 rows)

select * from json_path_query('[1,"1",2,"2",null]', '$[*] ? (@ == "1")');
 json_path_query 
-----------------
 "1"
(1 row)

select * from json_path_query('[1,"1",2,"2",null]', '$[*] ? (@ == $value)', '{"value" : "1"}');
 json_path_query 
-----------------
 "1"
(1 row)

select * from json_path_query('[1,"1",2,"2",null]', '$[*] ? (@ == $value)', '{"value" : null}');
 json_path_query 
-----------------
 null
(1 row)

select * from json_path_query('[1, "2", null]', '$[*] ? (@ != null)');
 json_path_query 
-----------------
 1
 "2"
(2 rows)

select * from json_path_query('[1, "2", null]', '$[*] ? (@ == null)');
 json_path_query 
-----------------
 null
(1 row)

select * from json_path_query('{}', '$ ? (@ == @)');
 json_path_query 
-----------------
(0 rows)

select * from json_path_query('[]', 'strict $ ? (@ == @)');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": {"b": 1}}', 'lax $.**');
 json_path_query 
-----------------
 {"a": {"b": 1}}
 {"b": 1}
 1
(3 rows)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{0}');
 json_path_query 
-----------------
 {"a": {"b": 1}}
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{0 to last}');
 json_path_query 
-----------------
 {"a": {"b": 1}}
 {"b": 1}
 1
(3 rows)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{1}');
 json_path_query 
-----------------
 {"b": 1}
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{1 to last}');
 json_path_query 
-----------------
 {"b": 1}
 1
(2 rows)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{2}');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{2 to last}');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{3 to last}');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{last}');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{0}.b ? (@ > 0)');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{1}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{0 to last}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{1 to last}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"b": 1}}', 'lax $.**{1 to 2}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**{0}.b ? (@ > 0)');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**{1}.b ? (@ > 0)');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**{0 to last}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**{1 to last}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**{1 to 2}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": {"c": {"b": 1}}}', 'lax $.**{2 to 3}.b ? (@ > 0)');
 json_path_query 
-----------------
 1
(1 row)

select json '{"a": {"b": 1}}' @? '$.**.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? '$.**{0}.b ? ( @ > 0)';
 ?column? 
----------
 f
(1 row)

select json '{"a": {"b": 1}}' @? '$.**{1}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? '$.**{0 to last}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? '$.**{1 to last}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"b": 1}}' @? '$.**{1 to 2}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**{0}.b ? ( @ > 0)';
 ?column? 
----------
 f
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**{1}.b ? ( @ > 0)';
 ?column? 
----------
 f
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**{0 to last}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**{1 to last}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**{1 to 2}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json '{"a": {"c": {"b": 1}}}' @? '$.**{2 to 3}.b ? ( @ > 0)';
 ?column? 
----------
 t
(1 row)

select json_path_query('{"g": {"x": 2}}', '$.g ? (exists (@.x))');
 json_path_query 
-----------------
 {"x": 2}
(1 row)

select json_path_query('{"g": {"x": 2}}', '$.g ? (exists (@.y))');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"g": {"x": 2}}', '$.g ? (exists (@.x ? (@ >= 2) ))');
 json_path_query 
-----------------
 {"x": 2}
(1 row)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'lax $.g ? (exists (@.x))');
 json_path_query 
-----------------
 {"x": 2}
(1 row)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'lax $.g ? (exists (@.x + "3"))');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'lax $.g ? ((exists (@.x + "3")) is unknown)');
 json_path_query 
-----------------
 {"x": 2}
 {"y": 3}
(2 rows)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'strict $.g[*] ? (exists (@.x))');
 json_path_query 
-----------------
 {"x": 2}
(1 row)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'strict $.g[*] ? ((exists (@.x)) is unknown)');
 json_path_query 
-----------------
 {"y": 3}
(1 row)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'strict $.g ? (exists (@[*].x))');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"g": [{"x": 2}, {"y": 3}]}', 'strict $.g ? ((exists (@[*].x)) is unknown)');
   json_path_query    
----------------------
 [{"x": 2}, {"y": 3}]
(1 row)

--test ternary logic
select
	x, y,
	json_path_query(
		'[true, false, null]',
		'$[*] ? (@ == true  &&  ($x == true && $y == true) ||
				 @ == false && !($x == true && $y == true) ||
				 @ == null  &&  ($x == true && $y == true) is unknown)',
		json_build_object('x', x, 'y', y)
	) as "x && y"
from
	(values (json 'true'), ('false'), ('"null"')) x(x),
	(values (json 'true'), ('false'), ('"null"')) y(y);
   x    |   y    | x && y 
--------+--------+--------
 true   | true   | true
 true   | false  | false
 true   | "null" | null
 false  | true   | false
 false  | false  | false
 false  | "null" | false
 "null" | true   | null
 "null" | false  | false
 "null" | "null" | null
(9 rows)

select
	x, y,
	json_path_query(
		'[true, false, null]',
		'$[*] ? (@ == true  &&  ($x == true || $y == true) ||
				 @ == false && !($x == true || $y == true) ||
				 @ == null  &&  ($x == true || $y == true) is unknown)',
		json_build_object('x', x, 'y', y)
	) as "x || y"
from
	(values (json 'true'), ('false'), ('"null"')) x(x),
	(values (json 'true'), ('false'), ('"null"')) y(y);
   x    |   y    | x || y 
--------+--------+--------
 true   | true   | true
 true   | false  | true
 true   | "null" | true
 false  | true   | true
 false  | false  | false
 false  | "null" | null
 "null" | true   | true
 "null" | false  | null
 "null" | "null" | null
(9 rows)

select json '{"a": 1, "b":1}' @? '$ ? (@.a == @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 1, "b":1}}' @? '$ ? (@.a == @.b)';
 ?column? 
----------
 f
(1 row)

select json '{"c": {"a": 1, "b":1}}' @? '$.c ? (@.a == @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 1, "b":1}}' @? '$.c ? ($.c.a == @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 1, "b":1}}' @? '$.* ? (@.a == @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"a": 1, "b":1}' @? '$.** ? (@.a == @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 1, "b":1}}' @? '$.** ? (@.a == @.b)';
 ?column? 
----------
 t
(1 row)

select json_path_query('{"c": {"a": 2, "b":1}}', '$.** ? (@.a == 1 + 1)');
 json_path_query 
-----------------
 {"a": 2, "b":1}
(1 row)

select json_path_query('{"c": {"a": 2, "b":1}}', '$.** ? (@.a == (1 + 1))');
 json_path_query 
-----------------
 {"a": 2, "b":1}
(1 row)

select json_path_query('{"c": {"a": 2, "b":1}}', '$.** ? (@.a == @.b + 1)');
 json_path_query 
-----------------
 {"a": 2, "b":1}
(1 row)

select json_path_query('{"c": {"a": 2, "b":1}}', '$.** ? (@.a == (@.b + 1))');
 json_path_query 
-----------------
 {"a": 2, "b":1}
(1 row)

select json '{"c": {"a": -1, "b":1}}' @? '$.** ? (@.a == - 1)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": -1, "b":1}}' @? '$.** ? (@.a == -1)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": -1, "b":1}}' @? '$.** ? (@.a == -@.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": -1, "b":1}}' @? '$.** ? (@.a == - @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 0, "b":1}}' @? '$.** ? (@.a == 1 - @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 2, "b":1}}' @? '$.** ? (@.a == 1 - - @.b)';
 ?column? 
----------
 t
(1 row)

select json '{"c": {"a": 0, "b":1}}' @? '$.** ? (@.a == 1 - +@.b)';
 ?column? 
----------
 t
(1 row)

select json '[1,2,3]' @? '$ ? (+@[*] > +2)';
 ?column? 
----------
 t
(1 row)

select json '[1,2,3]' @? '$ ? (+@[*] > +3)';
 ?column? 
----------
 f
(1 row)

select json '[1,2,3]' @? '$ ? (-@[*] < -2)';
 ?column? 
----------
 t
(1 row)

select json '[1,2,3]' @? '$ ? (-@[*] < -3)';
 ?column? 
----------
 f
(1 row)

select json '1' @? '$ ? ($ > 0)';
 ?column? 
----------
 t
(1 row)

-- arithmetic errors
select json_path_query('[1,2,0,3]', '$[*] ? (2 / @ > 0)');
 json_path_query 
-----------------
 1
 2
 3
(3 rows)

select json_path_query('[1,2,0,3]', '$[*] ? ((2 / @ > 0) is unknown)');
 json_path_query 
-----------------
 0
(1 row)

select json_path_query('0', '1 / $');
ERROR:  division by zero
select json_path_query('0', '1 / $ + 2');
ERROR:  division by zero
select json_path_query('0', '-(3 + 1 % $)');
ERROR:  division by zero
select json_path_query('1', '$ + "2"');
ERROR:  singleton SQL/JSON item required
DETAIL:  right operand of binary jsonpath operator + is not a singleton numeric value
select json_path_query('[1, 2]', '3 * $');
ERROR:  singleton SQL/JSON item required
DETAIL:  right operand of binary jsonpath operator * is not a singleton numeric value
select json_path_query('"a"', '-$');
ERROR:  SQL/JSON number not found
DETAIL:  operand of unary jsonpath operator - is not a numeric value
select json_path_query('[1,"2",3]', '+$');
ERROR:  SQL/JSON number not found
DETAIL:  operand of unary jsonpath operator + is not a numeric value
select json '["1",2,0,3]' @? '-$[*]';
 ?column? 
----------
 t
(1 row)

select json '[1,"2",0,3]' @? '-$[*]';
 ?column? 
----------
 t
(1 row)

select json '["1",2,0,3]' @? 'strict -$[*]';
 ?column? 
----------
 
(1 row)

select json '[1,"2",0,3]' @? 'strict -$[*]';
 ?column? 
----------
 
(1 row)

-- unwrapping of operator arguments in lax mode
select json_path_query('{"a": [2]}', 'lax $.a * 3');
 json_path_query 
-----------------
 6
(1 row)

select json_path_query('{"a": [2]}', 'lax $.a + 3');
 json_path_query 
-----------------
 5
(1 row)

select json_path_query('{"a": [2, 3, 4]}', 'lax -$.a');
 json_path_query 
-----------------
 -2
 -3
 -4
(3 rows)

-- should fail
select json_path_query('{"a": [1, 2]}', 'lax $.a * 3');
ERROR:  singleton SQL/JSON item required
DETAIL:  left operand of binary jsonpath operator * is not a singleton numeric value
-- extension: boolean expressions
select json_path_query('2', '$ > 1');
 json_path_query 
-----------------
 true
(1 row)

select json_path_query('2', '$ <= 1');
 json_path_query 
-----------------
 false
(1 row)

select json_path_query('2', '$ == "2"');
 json_path_query 
-----------------
 null
(1 row)

select json '2' @? '$ == "2"';
 ?column? 
----------
 t
(1 row)

select json '2' @@ '$ > 1';
 ?column? 
----------
 t
(1 row)

select json '2' @@ '$ <= 1';
 ?column? 
----------
 f
(1 row)

select json '2' @@ '$ == "2"';
 ?column? 
----------
 
(1 row)

select json '2' @@ '1';
 ?column? 
----------
 
(1 row)

select json '{}' @@ '$';
 ?column? 
----------
 
(1 row)

select json '[]' @@ '$';
 ?column? 
----------
 
(1 row)

select json '[1,2,3]' @@ '$[*]';
 ?column? 
----------
 
(1 row)

select json '[]' @@ '$[*]';
 ?column? 
----------
 
(1 row)

select json_path_match('[[1, true], [2, false]]', 'strict $[*] ? (@[0] > $x) [1]', '{"x": 1}');
 json_path_match 
-----------------
 f
(1 row)

select json_path_match('[[1, true], [2, false]]', 'strict $[*] ? (@[0] < $x) [1]', '{"x": 2}');
 json_path_match 
-----------------
 t
(1 row)

select json_path_query('[null,1,true,"a",[],{}]', '$.type()');
 json_path_query 
-----------------
 "array"
(1 row)

select json_path_query('[null,1,true,"a",[],{}]', 'lax $.type()');
 json_path_query 
-----------------
 "array"
(1 row)

select json_path_query('[null,1,true,"a",[],{}]', '$[*].type()');
 json_path_query 
-----------------
 "null"
 "number"
 "boolean"
 "string"
 "array"
 "object"
(6 rows)

select json_path_query('null', 'null.type()');
 json_path_query 
-----------------
 "null"
(1 row)

select json_path_query('null', 'true.type()');
 json_path_query 
-----------------
 "boolean"
(1 row)

select json_path_query('null', '123.type()');
 json_path_query 
-----------------
 "number"
(1 row)

select json_path_query('null', '"123".type()');
 json_path_query 
-----------------
 "string"
(1 row)

select json_path_query('{"a": 2}', '($.a - 5).abs() + 10');
 json_path_query 
-----------------
 13
(1 row)

select json_path_query('{"a": 2.5}', '-($.a * $.a).floor() % 4.3');
 json_path_query 
-----------------
 -1.7
(1 row)

select json_path_query('[1, 2, 3]', '($[*] > 2) ? (@ == true)');
 json_path_query 
-----------------
 true
(1 row)

select json_path_query('[1, 2, 3]', '($[*] > 3).type()');
 json_path_query 
-----------------
 "boolean"
(1 row)

select json_path_query('[1, 2, 3]', '($[*].a > 3).type()');
 json_path_query 
-----------------
 "boolean"
(1 row)

select json_path_query('[1, 2, 3]', 'strict ($[*].a > 3).type()');
 json_path_query 
-----------------
 "null"
(1 row)

select json_path_query('[1,null,true,"11",[],[1],[1,2,3],{},{"a":1,"b":2}]', 'strict $[*].size()');
ERROR:  SQL/JSON array not found
DETAIL:  jsonpath item method .size() can only be applied to an array
select json_path_query('[1,null,true,"11",[],[1],[1,2,3],{},{"a":1,"b":2}]', 'lax $[*].size()');
 json_path_query 
-----------------
 1
 1
 1
 1
 0
 1
 3
 1
 1
(9 rows)

select json_path_query('[0, 1, -2, -3.4, 5.6]', '$[*].abs()');
 json_path_query 
-----------------
 0
 1
 2
 3.4
 5.6
(5 rows)

select json_path_query('[0, 1, -2, -3.4, 5.6]', '$[*].floor()');
 json_path_query 
-----------------
 0
 1
 -2
 -4
 5
(5 rows)

select json_path_query('[0, 1, -2, -3.4, 5.6]', '$[*].ceiling()');
 json_path_query 
-----------------
 0
 1
 -2
 -3
 6
(5 rows)

select json_path_query('[0, 1, -2, -3.4, 5.6]', '$[*].ceiling().abs()');
 json_path_query 
-----------------
 0
 1
 2
 3
 6
(5 rows)

select json_path_query('[0, 1, -2, -3.4, 5.6]', '$[*].ceiling().abs().type()');
 json_path_query 
-----------------
 "number"
 "number"
 "number"
 "number"
 "number"
(5 rows)

select json_path_query('[{},1]', '$[*].keyvalue()');
ERROR:  SQL/JSON object not found
DETAIL:  jsonpath item method .keyvalue() can only be applied to an object
select json_path_query('{}', '$.keyvalue()');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": 1, "b": [1, 2], "c": {"a": "bbb"}}', '$.keyvalue()');
               json_path_query                
----------------------------------------------
 {"key": "a", "value": 1, "id": 0}
 {"key": "b", "value": [1, 2], "id": 0}
 {"key": "c", "value": {"a": "bbb"}, "id": 0}
(3 rows)

select json_path_query('[{"a": 1, "b": [1, 2]}, {"c": {"a": "bbb"}}]', '$[*].keyvalue()');
                json_path_query                
-----------------------------------------------
 {"key": "a", "value": 1, "id": 1}
 {"key": "b", "value": [1, 2], "id": 1}
 {"key": "c", "value": {"a": "bbb"}, "id": 24}
(3 rows)

select json_path_query('[{"a": 1, "b": [1, 2]}, {"c": {"a": "bbb"}}]', 'strict $.keyvalue()');
ERROR:  SQL/JSON object not found
DETAIL:  jsonpath item method .keyvalue() can only be applied to an object
select json_path_query('[{"a": 1, "b": [1, 2]}, {"c": {"a": "bbb"}}]', 'lax $.keyvalue()');
                json_path_query                
-----------------------------------------------
 {"key": "a", "value": 1, "id": 1}
 {"key": "b", "value": [1, 2], "id": 1}
 {"key": "c", "value": {"a": "bbb"}, "id": 24}
(3 rows)

select json_path_query('[{"a": 1, "b": [1, 2]}, {"c": {"a": "bbb"}}]', 'strict $.keyvalue().a');
ERROR:  SQL/JSON object not found
DETAIL:  jsonpath item method .keyvalue() can only be applied to an object
select json '{"a": 1, "b": [1, 2]}' @? 'lax $.keyvalue()';
 ?column? 
----------
 t
(1 row)

select json '{"a": 1, "b": [1, 2]}' @? 'lax $.keyvalue().key';
 ?column? 
----------
 t
(1 row)

select json_path_query('null', '$.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a string or numeric value
select json_path_query('true', '$.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a string or numeric value
select json_path_query('[]', '$.double()');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[]', 'strict $.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a string or numeric value
select json_path_query('{}', '$.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a string or numeric value
select json_path_query('1.23', '$.double()');
 json_path_query 
-----------------
 1.23
(1 row)

select json_path_query('"1.23"', '$.double()');
 json_path_query 
-----------------
 1.23
(1 row)

select json_path_query('"1.23aaa"', '$.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a numeric value
select json_path_query('"nan"', '$.double()');
 json_path_query 
-----------------
 "NaN"
(1 row)

select json_path_query('"NaN"', '$.double()');
 json_path_query 
-----------------
 "NaN"
(1 row)

select json_path_query('"inf"', '$.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a numeric value
select json_path_query('"-inf"', '$.double()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .double() can only be applied to a numeric value
select json_path_query('{}', '$.abs()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .abs() can only be applied to a numeric value
select json_path_query('true', '$.floor()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .floor() can only be applied to a numeric value
select json_path_query('"1.2"', '$.ceiling()');
ERROR:  non-numeric SQL/JSON item
DETAIL:  jsonpath item method .ceiling() can only be applied to a numeric value
select json_path_query('["", "a", "abc", "abcabc"]', '$[*] ? (@ starts with "abc")');
 json_path_query 
-----------------
 "abc"
 "abcabc"
(2 rows)

select json_path_query('["", "a", "abc", "abcabc"]', 'strict $ ? (@[*] starts with "abc")');
      json_path_query       
----------------------------
 ["", "a", "abc", "abcabc"]
(1 row)

select json_path_query('["", "a", "abd", "abdabc"]', 'strict $ ? (@[*] starts with "abc")');
 json_path_query 
-----------------
(0 rows)

select json_path_query('["abc", "abcabc", null, 1]', 'strict $ ? (@[*] starts with "abc")');
 json_path_query 
-----------------
(0 rows)

select json_path_query('["abc", "abcabc", null, 1]', 'strict $ ? ((@[*] starts with "abc") is unknown)');
      json_path_query       
----------------------------
 ["abc", "abcabc", null, 1]
(1 row)

select json_path_query('[[null, 1, "abc", "abcabc"]]', 'lax $ ? (@[*] starts with "abc")');
      json_path_query       
----------------------------
 [null, 1, "abc", "abcabc"]
(1 row)

select json_path_query('[[null, 1, "abd", "abdabc"]]', 'lax $ ? ((@[*] starts with "abc") is unknown)');
      json_path_query       
----------------------------
 [null, 1, "abd", "abdabc"]
(1 row)

select json_path_query('[null, 1, "abd", "abdabc"]', 'lax $[*] ? ((@ starts with "abc") is unknown)');
 json_path_query 
-----------------
 null
 1
(2 rows)

select json_path_query('[null, 1, "abc", "abd", "aBdC", "abdacb", "adc\nabc", "babc"]', 'lax $[*] ? (@ like_regex "^ab.*c")');
 json_path_query 
-----------------
 "abc"
 "abdacb"
(2 rows)

select json_path_query('[null, 1, "abc", "abd", "aBdC", "abdacb", "adc\nabc", "babc"]', 'lax $[*] ? (@ like_regex "^a  b.*  c " flag "ix")');
 json_path_query 
-----------------
 "abc"
 "aBdC"
 "abdacb"
(3 rows)

select json_path_query('[null, 1, "abc", "abd", "aBdC", "abdacb", "adc\nabc", "babc"]', 'lax $[*] ? (@ like_regex "^ab.*c" flag "m")');
 json_path_query 
-----------------
 "abc"
 "abdacb"
 "adc\nabc"
(3 rows)

select json_path_query('[null, 1, "abc", "abd", "aBdC", "abdacb", "adc\nabc", "babc"]', 'lax $[*] ? (@ like_regex "^ab.*c" flag "s")');
 json_path_query 
-----------------
 "abc"
 "abdacb"
(2 rows)

select json_path_query('null', '$.datetime()');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  jsonpath item method .datetime() can only be applied to a string or number
select json_path_query('true', '$.datetime()');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  jsonpath item method .datetime() can only be applied to a string or number
select json_path_query('[]', '$.datetime()');
 json_path_query 
-----------------
(0 rows)

select json_path_query('[]', 'strict $.datetime()');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  jsonpath item method .datetime() can only be applied to a string or number
select json_path_query('{}', '$.datetime()');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  jsonpath item method .datetime() can only be applied to a string or number
select json_path_query('""', '$.datetime()');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  unrecognized datetime format
HINT:  use datetime template argument for explicit format specification
select json_path_query('"12:34"', '$.datetime("aaa")');
ERROR:  datetime format is not dated and not timed
select json_path_query('"12:34"', '$.datetime("aaa", 1)');
ERROR:  datetime format is not dated and not timed
select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", 1)');
   json_path_query   
---------------------
 "12:34:00+00:00:01"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", 10000000000000)');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  timezone argument of jsonpath item method .datetime() is out of integer range
select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", 10000000000000)');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  timezone argument of jsonpath item method .datetime() is out of integer range
select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", 2147483647)');
     json_path_query     
-------------------------
 "12:34:00+596523:14:07"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", 2147483648)');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  timezone argument of jsonpath item method .datetime() is out of integer range
select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", -2147483647)');
     json_path_query     
-------------------------
 "12:34:00-596523:14:07"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", -2147483648)');
ERROR:  invalid argument for SQL/JSON datetime function
DETAIL:  timezone argument of jsonpath item method .datetime() is out of integer range
select json_path_query('"aaaa"', '$.datetime("HH24")');
ERROR:  invalid value "aa" for "HH24"
DETAIL:  Value must be an integer.
-- Standard extension: UNIX epoch to timestamptz
select json_path_query('0', '$.datetime()');
       json_path_query       
-----------------------------
 "1970-01-01T00:00:00+00:00"
(1 row)

select json_path_query('0', '$.datetime().type()');
      json_path_query       
----------------------------
 "timestamp with time zone"
(1 row)

select json_path_query('1490216035.5', '$.datetime()');
        json_path_query        
-------------------------------
 "2017-03-22T20:53:55.5+00:00"
(1 row)

select json '"10-03-2017"' @? '$.datetime("dd-mm-yyyy")';
 ?column? 
----------
 t
(1 row)

select json_path_query('"10-03-2017"', '$.datetime("dd-mm-yyyy")');
 json_path_query 
-----------------
 "2017-03-10"
(1 row)

select json_path_query('"10-03-2017"', '$.datetime("dd-mm-yyyy").type()');
 json_path_query 
-----------------
 "date"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy")');
 json_path_query 
-----------------
 "2017-03-10"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy").type()');
 json_path_query 
-----------------
 "date"
(1 row)

select json_path_query('"10-03-2017 12:34"', '       $.datetime("dd-mm-yyyy HH24:MI").type()');
        json_path_query        
-------------------------------
 "timestamp without time zone"
(1 row)

select json_path_query('"10-03-2017 12:34 +05:20"', '$.datetime("dd-mm-yyyy HH24:MI TZH:TZM").type()');
      json_path_query       
----------------------------
 "timestamp with time zone"
(1 row)

select json_path_query('"12:34:56"', '$.datetime("HH24:MI:SS").type()');
     json_path_query      
--------------------------
 "time without time zone"
(1 row)

select json_path_query('"12:34:56 +05:20"', '$.datetime("HH24:MI:SS TZH:TZM").type()');
    json_path_query    
-----------------------
 "time with time zone"
(1 row)

set time zone '+00';
select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI")');
    json_path_query    
-----------------------
 "2017-03-10T12:34:00"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
ERROR:  missing time-zone in input string for type timestamptz
select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", "+00")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+00:00"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", "+00:12")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+00:12"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", "-00:12:34")');
        json_path_query         
--------------------------------
 "2017-03-10T12:34:00-00:12:34"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", "UTC")');
ERROR:  invalid input syntax for type timestamptz: "UTC"
select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", 12 * 60)');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+00:12"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", -(5 * 3600 + 12 * 60 + 34))');
        json_path_query         
--------------------------------
 "2017-03-10T12:34:00-05:12:34"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", $tz)',
                        json_build_object('tz', extract(timezone from now())));
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+00:00"
(1 row)

select json_path_query('"10-03-2017 12:34 +05"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+05:00"
(1 row)

select json_path_query('"10-03-2017 12:34 -05"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00-05:00"
(1 row)

select json_path_query('"10-03-2017 12:34 +05:20"', '$.datetime("dd-mm-yyyy HH24:MI TZH:TZM")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+05:20"
(1 row)

select json_path_query('"10-03-2017 12:34 -05:20"', '$.datetime("dd-mm-yyyy HH24:MI TZH:TZM")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00-05:20"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI")');
 json_path_query 
-----------------
 "12:34:00"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI TZH")');
ERROR:  missing time-zone in input string for type timetz
select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", "+00")');
 json_path_query  
------------------
 "12:34:00+00:00"
(1 row)

select json_path_query('"12:34 +05"', '$.datetime("HH24:MI TZH")');
 json_path_query  
------------------
 "12:34:00+05:00"
(1 row)

select json_path_query('"12:34 -05"', '$.datetime("HH24:MI TZH")');
 json_path_query  
------------------
 "12:34:00-05:00"
(1 row)

select json_path_query('"12:34 +05:20"', '$.datetime("HH24:MI TZH:TZM")');
 json_path_query  
------------------
 "12:34:00+05:20"
(1 row)

select json_path_query('"12:34 -05:20"', '$.datetime("HH24:MI TZH:TZM")');
 json_path_query  
------------------
 "12:34:00-05:20"
(1 row)

set time zone '+10';
select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI")');
    json_path_query    
-----------------------
 "2017-03-10T12:34:00"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
ERROR:  missing time-zone in input string for type timestamptz
select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", "+10")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+10:00"
(1 row)

select json_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH", $tz)',
                        json_build_object('tz', extract(timezone from now())));
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+10:00"
(1 row)

select json_path_query('"10-03-2017 12:34 +05"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+05:00"
(1 row)

select json_path_query('"10-03-2017 12:34 -05"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00-05:00"
(1 row)

select json_path_query('"10-03-2017 12:34 +05:20"', '$.datetime("dd-mm-yyyy HH24:MI TZH:TZM")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+05:20"
(1 row)

select json_path_query('"10-03-2017 12:34 -05:20"', '$.datetime("dd-mm-yyyy HH24:MI TZH:TZM")');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00-05:20"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI")');
 json_path_query 
-----------------
 "12:34:00"
(1 row)

select json_path_query('"12:34"', '$.datetime("HH24:MI TZH")');
ERROR:  missing time-zone in input string for type timetz
select json_path_query('"12:34"', '$.datetime("HH24:MI TZH", "+10")');
 json_path_query  
------------------
 "12:34:00+10:00"
(1 row)

select json_path_query('"12:34 +05"', '$.datetime("HH24:MI TZH")');
 json_path_query  
------------------
 "12:34:00+05:00"
(1 row)

select json_path_query('"12:34 -05"', '$.datetime("HH24:MI TZH")');
 json_path_query  
------------------
 "12:34:00-05:00"
(1 row)

select json_path_query('"12:34 +05:20"', '$.datetime("HH24:MI TZH:TZM")');
 json_path_query  
------------------
 "12:34:00+05:20"
(1 row)

select json_path_query('"12:34 -05:20"', '$.datetime("HH24:MI TZH:TZM")');
 json_path_query  
------------------
 "12:34:00-05:20"
(1 row)

set time zone default;
select json_path_query('"2017-03-10"', '$.datetime().type()');
 json_path_query 
-----------------
 "date"
(1 row)

select json_path_query('"2017-03-10"', '$.datetime()');
 json_path_query 
-----------------
 "2017-03-10"
(1 row)

select json_path_query('"2017-03-10 12:34:56"', '$.datetime().type()');
        json_path_query        
-------------------------------
 "timestamp without time zone"
(1 row)

select json_path_query('"2017-03-10 12:34:56"', '$.datetime()');
    json_path_query    
-----------------------
 "2017-03-10T12:34:56"
(1 row)

select json_path_query('"2017-03-10 12:34:56 +3"', '$.datetime().type()');
      json_path_query       
----------------------------
 "timestamp with time zone"
(1 row)

select json_path_query('"2017-03-10 12:34:56 +3"', '$.datetime()');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:56+03:00"
(1 row)

select json_path_query('"2017-03-10 12:34:56 +3:10"', '$.datetime().type()');
      json_path_query       
----------------------------
 "timestamp with time zone"
(1 row)

select json_path_query('"2017-03-10 12:34:56 +3:10"', '$.datetime()');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:56+03:10"
(1 row)

select json_path_query('"12:34:56"', '$.datetime().type()');
     json_path_query      
--------------------------
 "time without time zone"
(1 row)

select json_path_query('"12:34:56"', '$.datetime()');
 json_path_query 
-----------------
 "12:34:56"
(1 row)

select json_path_query('"12:34:56 +3"', '$.datetime().type()');
    json_path_query    
-----------------------
 "time with time zone"
(1 row)

select json_path_query('"12:34:56 +3"', '$.datetime()');
 json_path_query  
------------------
 "12:34:56+03:00"
(1 row)

select json_path_query('"12:34:56 +3:10"', '$.datetime().type()');
    json_path_query    
-----------------------
 "time with time zone"
(1 row)

select json_path_query('"12:34:56 +3:10"', '$.datetime()');
 json_path_query  
------------------
 "12:34:56+03:10"
(1 row)

set time zone '+00';
-- date comparison
select json_path_query(
	'["2017-03-10", "2017-03-11", "2017-03-09", "12:34:56", "01:02:03 +04", "2017-03-10 00:00:00", "2017-03-10 12:34:56", "2017-03-10 01:02:03 +04", "2017-03-10 03:00:00 +03"]',
	'$[*].datetime() ? (@ == "10.03.2017".datetime("dd.mm.yyyy"))');
    json_path_query    
-----------------------
 "2017-03-10"
 "2017-03-10T00:00:00"
(2 rows)

select json_path_query(
	'["2017-03-10", "2017-03-11", "2017-03-09", "12:34:56", "01:02:03 +04", "2017-03-10 00:00:00", "2017-03-10 12:34:56", "2017-03-10 01:02:03 +04", "2017-03-10 03:00:00 +03"]',
	'$[*].datetime() ? (@ >= "10.03.2017".datetime("dd.mm.yyyy"))');
    json_path_query    
-----------------------
 "2017-03-10"
 "2017-03-11"
 "2017-03-10T00:00:00"
 "2017-03-10T12:34:56"
(4 rows)

select json_path_query(
	'["2017-03-10", "2017-03-11", "2017-03-09", "12:34:56", "01:02:03 +04", "2017-03-10 00:00:00", "2017-03-10 12:34:56", "2017-03-10 01:02:03 +04", "2017-03-10 03:00:00 +03"]',
	'$[*].datetime() ? (@ <  "10.03.2017".datetime("dd.mm.yyyy"))');
 json_path_query 
-----------------
 "2017-03-09"
(1 row)

-- time comparison
select json_path_query(
	'["12:34:00", "12:35:00", "12:36:00", "12:35:00 +00", "12:35:00 +01", "13:35:00 +01", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +01"]',
	'$[*].datetime() ? (@ == "12:35".datetime("HH24:MI"))');
 json_path_query 
-----------------
 "12:35:00"
(1 row)

select json_path_query(
	'["12:34:00", "12:35:00", "12:36:00", "12:35:00 +00", "12:35:00 +01", "13:35:00 +01", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +01"]',
	'$[*].datetime() ? (@ >= "12:35".datetime("HH24:MI"))');
 json_path_query 
-----------------
 "12:35:00"
 "12:36:00"
(2 rows)

select json_path_query(
	'["12:34:00", "12:35:00", "12:36:00", "12:35:00 +00", "12:35:00 +01", "13:35:00 +01", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +01"]',
	'$[*].datetime() ? (@ <  "12:35".datetime("HH24:MI"))');
 json_path_query 
-----------------
 "12:34:00"
(1 row)

-- timetz comparison
select json_path_query(
	'["12:34:00 +01", "12:35:00 +01", "12:36:00 +01", "12:35:00 +02", "12:35:00 -02", "10:35:00", "11:35:00", "12:35:00", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +1"]',
	'$[*].datetime() ? (@ == "12:35 +1".datetime("HH24:MI TZH"))');
 json_path_query  
------------------
 "12:35:00+01:00"
(1 row)

select json_path_query(
	'["12:34:00 +01", "12:35:00 +01", "12:36:00 +01", "12:35:00 +02", "12:35:00 -02", "10:35:00", "11:35:00", "12:35:00", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +1"]',
	'$[*].datetime() ? (@ >= "12:35 +1".datetime("HH24:MI TZH"))');
 json_path_query  
------------------
 "12:35:00+01:00"
 "12:36:00+01:00"
 "12:35:00-02:00"
(3 rows)

select json_path_query(
	'["12:34:00 +01", "12:35:00 +01", "12:36:00 +01", "12:35:00 +02", "12:35:00 -02", "10:35:00", "11:35:00", "12:35:00", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +1"]',
	'$[*].datetime() ? (@ <  "12:35 +1".datetime("HH24:MI TZH"))');
 json_path_query  
------------------
 "12:34:00+01:00"
 "12:35:00+02:00"
(2 rows)

-- timestamp comparison
select json_path_query(
	'["2017-03-10 12:34:00", "2017-03-10 12:35:00", "2017-03-10 12:36:00", "2017-03-10 12:35:00 +01", "2017-03-10 13:35:00 +01", "2017-03-10 12:35:00 -01", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56 +01"]',
	'$[*].datetime() ? (@ == "10.03.2017 12:35".datetime("dd.mm.yyyy HH24:MI"))');
    json_path_query    
-----------------------
 "2017-03-10T12:35:00"
(1 row)

select json_path_query(
	'["2017-03-10 12:34:00", "2017-03-10 12:35:00", "2017-03-10 12:36:00", "2017-03-10 12:35:00 +01", "2017-03-10 13:35:00 +01", "2017-03-10 12:35:00 -01", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56 +01"]',
	'$[*].datetime() ? (@ >= "10.03.2017 12:35".datetime("dd.mm.yyyy HH24:MI"))');
    json_path_query    
-----------------------
 "2017-03-10T12:35:00"
 "2017-03-10T12:36:00"
 "2017-03-11"
(3 rows)

select json_path_query(
	'["2017-03-10 12:34:00", "2017-03-10 12:35:00", "2017-03-10 12:36:00", "2017-03-10 12:35:00 +01", "2017-03-10 13:35:00 +01", "2017-03-10 12:35:00 -01", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56 +01"]',
	'$[*].datetime() ? (@ < "10.03.2017 12:35".datetime("dd.mm.yyyy HH24:MI"))');
    json_path_query    
-----------------------
 "2017-03-10T12:34:00"
 "2017-03-10"
(2 rows)

-- timestamptz comparison
select json_path_query(
	'["2017-03-10 12:34:00 +01", "2017-03-10 12:35:00 +01", "2017-03-10 12:36:00 +01", "2017-03-10 12:35:00 +02", "2017-03-10 12:35:00 -02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56 +01"]',
	'$[*].datetime() ? (@ == "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
       json_path_query       
-----------------------------
 "2017-03-10T12:35:00+01:00"
(1 row)

select json_path_query(
	'["2017-03-10 12:34:00 +01", "2017-03-10 12:35:00 +01", "2017-03-10 12:36:00 +01", "2017-03-10 12:35:00 +02", "2017-03-10 12:35:00 -02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56 +01"]',
	'$[*].datetime() ? (@ >= "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
       json_path_query       
-----------------------------
 "2017-03-10T12:35:00+01:00"
 "2017-03-10T12:36:00+01:00"
 "2017-03-10T12:35:00-02:00"
(3 rows)

select json_path_query(
	'["2017-03-10 12:34:00 +01", "2017-03-10 12:35:00 +01", "2017-03-10 12:36:00 +01", "2017-03-10 12:35:00 +02", "2017-03-10 12:35:00 -02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56 +01"]',
	'$[*].datetime() ? (@ < "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
       json_path_query       
-----------------------------
 "2017-03-10T12:34:00+01:00"
 "2017-03-10T12:35:00+02:00"
(2 rows)

set time zone default;
-- jsonpath operators
SELECT json_path_query('[{"a": 1}, {"a": 2}]', '$[*]');
 json_path_query 
-----------------
 {"a": 1}
 {"a": 2}
(2 rows)

SELECT json_path_query('[{"a": 1}, {"a": 2}]', '$[*] ? (@.a > 10)');
 json_path_query 
-----------------
(0 rows)

SELECT json_path_query('[{"a": 1}, {"a": 2}]', '[$[*].a]');
 json_path_query 
-----------------
 [1, 2]
(1 row)

SELECT json_path_query_array('[{"a": 1}, {"a": 2}, {}]', 'strict $[*].a');
ERROR:  SQL/JSON member not found
DETAIL:  JSON object does not contain key "a"
SELECT json_path_query_array('[{"a": 1}, {"a": 2}]', '$[*].a');
 json_path_query_array 
-----------------------
 [1, 2]
(1 row)

SELECT json_path_query_array('[{"a": 1}, {"a": 2}]', '$[*].a ? (@ == 1)');
 json_path_query_array 
-----------------------
 [1]
(1 row)

SELECT json_path_query_array('[{"a": 1}, {"a": 2}]', '$[*].a ? (@ > 10)');
 json_path_query_array 
-----------------------
 []
(1 row)

SELECT json_path_query_array('[{"a": 1}, {"a": 2}, {"a": 3}, {"a": 5}]', '$[*].a ? (@ > $min && @ < $max)', '{"min": 1, "max": 4}');
 json_path_query_array 
-----------------------
 [2, 3]
(1 row)

SELECT json_path_query_array('[{"a": 1}, {"a": 2}, {"a": 3}, {"a": 5}]', '$[*].a ? (@ > $min && @ < $max)', '{"min": 3, "max": 4}');
 json_path_query_array 
-----------------------
 []
(1 row)

SELECT json_path_query_array('[{"a": 1}, {"a": 2}]', '[$[*].a]');
 json_path_query_array 
-----------------------
 [[1, 2]]
(1 row)

SELECT json_path_query_first('[{"a": 1}, {"a": 2}, {}]', 'strict $[*].a');
ERROR:  SQL/JSON member not found
DETAIL:  JSON object does not contain key "a"
SELECT json_path_query_first('[{"a": 1}, {"a": 2}]', '$[*].a');
 json_path_query_first 
-----------------------
 1
(1 row)

SELECT json_path_query_first('[{"a": 1}, {"a": 2}]', '$[*].a ? (@ == 1)');
 json_path_query_first 
-----------------------
 1
(1 row)

SELECT json_path_query_first('[{"a": 1}, {"a": 2}]', '$[*].a ? (@ > 10)');
 json_path_query_first 
-----------------------
 
(1 row)

SELECT json_path_query_first('[{"a": 1}, {"a": 2}, {"a": 3}, {"a": 5}]', '$[*].a ? (@ > $min && @ < $max)', '{"min": 1, "max": 4}');
 json_path_query_first 
-----------------------
 2
(1 row)

SELECT json_path_query_first('[{"a": 1}, {"a": 2}, {"a": 3}, {"a": 5}]', '$[*].a ? (@ > $min && @ < $max)', '{"min": 3, "max": 4}');
 json_path_query_first 
-----------------------
 
(1 row)

SELECT json '[{"a": 1}, {"a": 2}]' @? '$[*].a ? (@ > 1)';
 ?column? 
----------
 t
(1 row)

SELECT json '[{"a": 1}, {"a": 2}]' @? '$[*] ? (@.a > 2)';
 ?column? 
----------
 f
(1 row)

SELECT json_path_exists('[{"a": 1}, {"a": 2}, {"a": 3}, {"a": 5}]', '$[*] ? (@.a > $min && @.a < $max)', '{"min": 1, "max": 4}');
 json_path_exists 
------------------
 t
(1 row)

SELECT json_path_exists('[{"a": 1}, {"a": 2}, {"a": 3}, {"a": 5}]', '$[*] ? (@.a > $min && @.a < $max)', '{"min": 3, "max": 4}');
 json_path_exists 
------------------
 f
(1 row)

SELECT json '[{"a": 1}, {"a": 2}]' @@ '$[*].a > 1';
 ?column? 
----------
 t
(1 row)

SELECT json '[{"a": 1}, {"a": 2}]' @@ '$[*].a > 2';
 ?column? 
----------
 f
(1 row)

-- extension: path sequences
select json_path_query('[1,2,3,4,5]', '10, 20, $[*], 30');
 json_path_query 
-----------------
 10
 20
 1
 2
 3
 4
 5
 30
(8 rows)

select json_path_query('[1,2,3,4,5]', 'lax    10, 20, $[*].a, 30');
 json_path_query 
-----------------
 10
 20
 30
(3 rows)

select json_path_query('[1,2,3,4,5]', 'strict 10, 20, $[*].a, 30');
ERROR:  SQL/JSON member not found
DETAIL:  jsonpath member accessor can only be applied to an object
select json_path_query('[1,2,3,4,5]', '-(10, 20, $[1 to 3], 30)');
 json_path_query 
-----------------
 -10
 -20
 -2
 -3
 -4
 -30
(6 rows)

select json_path_query('[1,2,3,4,5]', 'lax (10, 20.5, $[1 to 3], "30").double()');
 json_path_query 
-----------------
 10
 20.5
 2
 3
 4
 30
(6 rows)

select json_path_query('[1,2,3,4,5]', '$[(0, $[*], 5) ? (@ == 3)]');
 json_path_query 
-----------------
 4
(1 row)

select json_path_query('[1,2,3,4,5]', '$[(0, $[*], 3) ? (@ == 3)]');
ERROR:  invalid SQL/JSON subscript
DETAIL:  jsonpath array subscript is not a singleton numeric value
-- extension: array constructors
select json_path_query('[1, 2, 3]', '[]');
 json_path_query 
-----------------
 []
(1 row)

select json_path_query('[1, 2, 3]', '[1, 2, $[*], 4, 5]');
    json_path_query    
-----------------------
 [1, 2, 1, 2, 3, 4, 5]
(1 row)

select json_path_query('[1, 2, 3]', '[1, 2, $[*], 4, 5][*]');
 json_path_query 
-----------------
 1
 2
 1
 2
 3
 4
 5
(7 rows)

select json_path_query('[1, 2, 3]', '[(1, (2, $[*])), (4, 5)]');
    json_path_query    
-----------------------
 [1, 2, 1, 2, 3, 4, 5]
(1 row)

select json_path_query('[1, 2, 3]', '[[1, 2], [$[*], 4], 5, [(1,2)?(@ > 5)]]');
        json_path_query        
-------------------------------
 [[1, 2], [1, 2, 3, 4], 5, []]
(1 row)

select json_path_query('[1, 2, 3]', 'strict [1, 2, $[*].a, 4, 5]');
ERROR:  SQL/JSON member not found
DETAIL:  jsonpath member accessor can only be applied to an object
select json_path_query('[[1, 2], [3, 4, 5], [], [6, 7]]', '[$[*][*] ? (@ > 3)]');
 json_path_query 
-----------------
 [4, 5, 6, 7]
(1 row)

-- extension: object constructors
select json_path_query('[1, 2, 3]', '{}');
 json_path_query 
-----------------
 {}
(1 row)

select json_path_query('[1, 2, 3]', '{a: 2 + 3, "b": [$[*], 4, 5]}');
        json_path_query         
--------------------------------
 {"a": 5, "b": [1, 2, 3, 4, 5]}
(1 row)

select json_path_query('[1, 2, 3]', '{a: 2 + 3, "b": [$[*], 4, 5]}.*');
 json_path_query 
-----------------
 5
 [1, 2, 3, 4, 5]
(2 rows)

select json_path_query('[1, 2, 3]', '{a: 2 + 3, "b": [$[*], 4, 5]}[*]');
        json_path_query         
--------------------------------
 {"a": 5, "b": [1, 2, 3, 4, 5]}
(1 row)

select json_path_query('[1, 2, 3]', '{a: 2 + 3, "b": ($[*], 4, 5)}');
ERROR:  singleton SQL/JSON item required
DETAIL:  value in jsonpath object constructor must be a singleton
select json_path_query('[1, 2, 3]', '{a: 2 + 3, "b": {x: $, y: $[1] > 2, z: "foo"}}');
                     json_path_query                     
---------------------------------------------------------
 {"a": 5, "b": {"x": [1, 2, 3], "y": false, "z": "foo"}}
(1 row)

-- extension: object subscripting
select json '{"a": 1}' @? '$["a"]';
 ?column? 
----------
 t
(1 row)

select json '{"a": 1}' @? '$["b"]';
 ?column? 
----------
 f
(1 row)

select json '{"a": 1}' @? 'strict $["b"]';
 ?column? 
----------
 
(1 row)

select json '{"a": 1}' @? '$["b", "a"]';
 ?column? 
----------
 t
(1 row)

select json_path_query('{"a": 1}', '$["a"]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('{"a": 1}', 'strict $["b"]');
ERROR:  SQL/JSON member not found
DETAIL:  JSON object does not contain the specified key
select json_path_query('{"a": 1}', 'lax $["b"]');
 json_path_query 
-----------------
(0 rows)

select json_path_query('{"a": 1, "b": 2}', 'lax $["b", "c", "b", "a", 0 to 3]');
 json_path_query  
------------------
 2
 2
 1
 {"a": 1, "b": 2}
(4 rows)

select json_path_query('null', '{"a": 1}["a"]');
 json_path_query 
-----------------
 1
(1 row)

select json_path_query('null', '{"a": 1}["b"]');
 json_path_query 
-----------------
(0 rows)

