-- create another schema so that tests can be run in parallel with the
-- partition_join and multi_level_partition_join tests.
create schema pwj_extra;
set search_path=pwj_extra,public;
--=========================================================================================================================================================
--DEV TEST CASES
--
-- PARTITION_JOIN
-- Test partition-wise join between partitioned tables
--
-- Usually partition-wise join paths are chosen when data is large, which would
-- take regression tests to run longer. So, weigh partition-wise joins cheaper
-- to force those even for smaller data.
SET enable_partition_wise_join=on;
--
-- partitioned by a single column
--
CREATE TABLE prt1 (a int, b int, c varchar) PARTITION BY RANGE(a);
CREATE TABLE prt1_p1 PARTITION OF prt1 FOR VALUES FROM (0) TO (250);
CREATE TABLE prt1_p3 PARTITION OF prt1 FOR VALUES FROM (500) TO (600);
CREATE TABLE prt1_p2 PARTITION OF prt1 FOR VALUES FROM (250) TO (500);
INSERT INTO prt1 SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt1;
ANALYZE prt1_p1;
ANALYZE prt1_p2;
ANALYZE prt1_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt1 AS SELECT * FROM prt1;
CREATE TABLE prt2 (a int, b int, c varchar) PARTITION BY RANGE(b);
CREATE TABLE prt2_p1 PARTITION OF prt2 FOR VALUES FROM (0) TO (250);
CREATE TABLE prt2_p2 PARTITION OF prt2 FOR VALUES FROM (250) TO (500);
CREATE TABLE prt2_p3 PARTITION OF prt2 FOR VALUES FROM (500) TO (600);
INSERT INTO prt2 SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 3) i;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
ANALYZE prt2;
ANALYZE prt2_p1;
ANALYZE prt2_p2;
ANALYZE prt2_p3;
CREATE TABLE uprt2 AS SELECT * FROM prt2;
-- inner join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: (t2.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b, t2.c
               ->  Hash
                     Output: t1.a, t1.c
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: (t2_1.b = t1_1.a)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Hash
                     Output: t1_1.a, t1_1.c
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: (t2_2.b = t1_2.a)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
               ->  Hash
                     Output: t1_2.a, t1_2.c
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1 t1, uprt2 t2 WHERE t1.a = t2.b AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

-- left outer join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: (t2.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b, t2.c
               ->  Hash
                     Output: t1.a, t1.c
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: (t2_1.b = t1_1.a)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Hash
                     Output: t1_1.a, t1_1.c
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: (t2_2.b = t1_2.a)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
               ->  Hash
                     Output: t1_2.a, t1_2.c
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1 t1 LEFT JOIN uprt2 t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

-- right outer join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: (t1.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.c
                     ->  Hash
                           Output: t2.b, t2.c
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: (t1_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: (t1_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
(36 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1 t1 RIGHT JOIN uprt2 t2 ON t1.a = t2.b WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

-- full outer join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b) ORDER BY t1.a, t2.b;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c
   Sort Key: prt1_p1.a, prt2_p1.b
   ->  Append
         ->  Hash Full Join
               Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c
               Hash Cond: (prt1_p1.a = prt2_p1.b)
               ->  Seq Scan on pwj_extra.prt1_p1
                     Output: prt1_p1.a, prt1_p1.c
                     Filter: ((prt1_p1.a % 25) = 0)
               ->  Hash
                     Output: prt2_p1.b, prt2_p1.c
                     ->  Seq Scan on pwj_extra.prt2_p1
                           Output: prt2_p1.b, prt2_p1.c
                           Filter: ((prt2_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
               Hash Cond: (prt1_p2.a = prt2_p2.b)
               ->  Seq Scan on pwj_extra.prt1_p2
                     Output: prt1_p2.a, prt1_p2.c
                     Filter: ((prt1_p2.a % 25) = 0)
               ->  Hash
                     Output: prt2_p2.b, prt2_p2.c
                     ->  Seq Scan on pwj_extra.prt2_p2
                           Output: prt2_p2.b, prt2_p2.c
                           Filter: ((prt2_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_p3.a, prt1_p3.c, prt2_p3.b, prt2_p3.c
               Hash Cond: (prt1_p3.a = prt2_p3.b)
               ->  Seq Scan on pwj_extra.prt1_p3
                     Output: prt1_p3.a, prt1_p3.c
                     Filter: ((prt1_p3.a % 25) = 0)
               ->  Hash
                     Output: prt2_p3.b, prt2_p3.c
                     ->  Seq Scan on pwj_extra.prt2_p3
                           Output: prt2_p3.b, prt2_p3.c
                           Filter: ((prt2_p3.b % 25) = 0)
(37 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1 t1 WHERE t1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2 t2 WHERE t2.b % 25 = 0) t2 ON (t1.a = t2.b) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

-- Cases with non-nullable expressions in subquery results;
-- make sure these go to null as expected
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY t1.a, t2.b;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c
   Sort Key: prt1_p1.a, prt2_p1.b
   ->  Append
         ->  Hash Full Join
               Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c
               Hash Cond: (prt1_p1.a = prt2_p1.b)
               Filter: (((50) = prt1_p1.b) OR ((75) = prt2_p1.b))
               ->  Seq Scan on pwj_extra.prt1_p1
                     Output: prt1_p1.a, prt1_p1.c, prt1_p1.b, 50
                     Filter: ((prt1_p1.a % 25) = 0)
               ->  Hash
                     Output: prt2_p1.b, prt2_p1.c, (75)
                     ->  Seq Scan on pwj_extra.prt2_p1
                           Output: prt2_p1.b, prt2_p1.c, 75
                           Filter: ((prt2_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
               Hash Cond: (prt1_p2.a = prt2_p2.b)
               Filter: (((50) = prt1_p2.b) OR ((75) = prt2_p2.b))
               ->  Seq Scan on pwj_extra.prt1_p2
                     Output: prt1_p2.a, prt1_p2.c, prt1_p2.b, 50
                     Filter: ((prt1_p2.a % 25) = 0)
               ->  Hash
                     Output: prt2_p2.b, prt2_p2.c, (75)
                     ->  Seq Scan on pwj_extra.prt2_p2
                           Output: prt2_p2.b, prt2_p2.c, 75
                           Filter: ((prt2_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_p3.a, prt1_p3.c, prt2_p3.b, prt2_p3.c
               Hash Cond: (prt1_p3.a = prt2_p3.b)
               Filter: (((50) = prt1_p3.b) OR ((75) = prt2_p3.b))
               ->  Seq Scan on pwj_extra.prt1_p3
                     Output: prt1_p3.a, prt1_p3.c, prt1_p3.b, 50
                     Filter: ((prt1_p3.a % 25) = 0)
               ->  Hash
                     Output: prt2_p3.b, prt2_p3.c, (75)
                     ->  Seq Scan on pwj_extra.prt2_p3
                           Output: prt2_p3.b, prt2_p3.c, 75
                           Filter: ((prt2_p3.b % 25) = 0)
(40 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY t1.a, t2.b;
 a  |  c   | b  |  c   
----+------+----+------
 50 | 0050 |    | 
    |      | 75 | 0075
(2 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM uprt1 WHERE uprt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM uprt2 WHERE uprt2.b % 25 = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY t1.a, t2.b;
 a  |  c   | b  |  c   
----+------+----+------
 50 | 0050 |    | 
    |      | 75 | 0075
(2 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t1.phv, t2.b, t2.c, t2.phv FROM (SELECT 25 phv, * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT 50 phv, * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b) ORDER BY t1.a, t2.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, (25), prt2_p1.b, prt2_p1.c, (50)
   Sort Key: prt1_p1.a, prt2_p1.b
   ->  Result
         Output: prt1_p1.a, prt1_p1.c, (25), prt2_p1.b, prt2_p1.c, (50)
         ->  Append
               ->  Hash Full Join
                     Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c, (25), (50)
                     Hash Cond: (prt1_p1.a = prt2_p1.b)
                     ->  Seq Scan on pwj_extra.prt1_p1
                           Output: prt1_p1.a, prt1_p1.c, 25
                           Filter: ((prt1_p1.a % 25) = 0)
                     ->  Hash
                           Output: prt2_p1.b, prt2_p1.c, (50)
                           ->  Seq Scan on pwj_extra.prt2_p1
                                 Output: prt2_p1.b, prt2_p1.c, 50
                                 Filter: ((prt2_p1.b % 25) = 0)
               ->  Hash Full Join
                     Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c, (25), (50)
                     Hash Cond: (prt1_p2.a = prt2_p2.b)
                     ->  Seq Scan on pwj_extra.prt1_p2
                           Output: prt1_p2.a, prt1_p2.c, 25
                           Filter: ((prt1_p2.a % 25) = 0)
                     ->  Hash
                           Output: prt2_p2.b, prt2_p2.c, (50)
                           ->  Seq Scan on pwj_extra.prt2_p2
                                 Output: prt2_p2.b, prt2_p2.c, 50
                                 Filter: ((prt2_p2.b % 25) = 0)
               ->  Hash Full Join
                     Output: prt1_p3.a, prt1_p3.c, prt2_p3.b, prt2_p3.c, (25), (50)
                     Hash Cond: (prt1_p3.a = prt2_p3.b)
                     ->  Seq Scan on pwj_extra.prt1_p3
                           Output: prt1_p3.a, prt1_p3.c, 25
                           Filter: ((prt1_p3.a % 25) = 0)
                     ->  Hash
                           Output: prt2_p3.b, prt2_p3.c, (50)
                           ->  Seq Scan on pwj_extra.prt2_p3
                                 Output: prt2_p3.b, prt2_p3.c, 50
                                 Filter: ((prt2_p3.b % 25) = 0)
(39 rows)

SELECT t1.a, t1.c, t1.phv, t2.b, t2.c, t2.phv FROM (SELECT 25 phv, * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT 50 phv, * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b) ORDER BY t1.a, t2.b;
  a  |  c   | phv |  b  |  c   | phv 
-----+------+-----+-----+------+-----
   0 | 0000 |  25 |   0 | 0000 |  50
  50 | 0050 |  25 |     |      |    
 100 | 0100 |  25 |     |      |    
 150 | 0150 |  25 | 150 | 0150 |  50
 200 | 0200 |  25 |     |      |    
 250 | 0250 |  25 |     |      |    
 300 | 0300 |  25 | 300 | 0300 |  50
 350 | 0350 |  25 |     |      |    
 400 | 0400 |  25 |     |      |    
 450 | 0450 |  25 | 450 | 0450 |  50
 500 | 0500 |  25 |     |      |    
 550 | 0550 |  25 |     |      |    
     |      |     |  75 | 0075 |  50
     |      |     | 225 | 0225 |  50
     |      |     | 375 | 0375 |  50
     |      |     | 525 | 0525 |  50
(16 rows)

SELECT t1.a, t1.c, t1.phv, t2.b, t2.c, t2.phv FROM (SELECT 25 phv, * FROM uprt1 WHERE uprt1.a % 25 = 0) t1 FULL JOIN (SELECT 50 phv, * FROM uprt2 WHERE uprt2.b % 25 = 0) t2 ON (t1.a = t2.b) ORDER BY t1.a, t2.b;
  a  |  c   | phv |  b  |  c   | phv 
-----+------+-----+-----+------+-----
   0 | 0000 |  25 |   0 | 0000 |  50
  50 | 0050 |  25 |     |      |    
 100 | 0100 |  25 |     |      |    
 150 | 0150 |  25 | 150 | 0150 |  50
 200 | 0200 |  25 |     |      |    
 250 | 0250 |  25 |     |      |    
 300 | 0300 |  25 | 300 | 0300 |  50
 350 | 0350 |  25 |     |      |    
 400 | 0400 |  25 |     |      |    
 450 | 0450 |  25 | 450 | 0450 |  50
 500 | 0500 |  25 |     |      |    
 550 | 0550 |  25 |     |      |    
     |      |     |  75 | 0075 |  50
     |      |     | 225 | 0225 |  50
     |      |     | 375 | 0375 |  50
     |      |     | 525 | 0525 |  50
(16 rows)

-- Join with pruned partitions from joining relations
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: (t2.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p2 t2
                     Output: t2.b, t2.c
                     Filter: (t2.b > 250)
               ->  Hash
                     Output: t1.a, t1.c
                     ->  Seq Scan on pwj_extra.prt1_p2 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a < 450) AND ((t1.a % 25) = 0))
(15 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
(1 row)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1 t1, uprt2 t2 WHERE t1.a = t2.b AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
(1 row)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, b, c
   Sort Key: prt1_p1.a, b
   ->  Append
         ->  Nested Loop Left Join
               Output: prt1_p1.a, prt1_p1.c, b, c
               Join Filter: (prt1_p1.a = b)
               ->  Seq Scan on pwj_extra.prt1_p1
                     Output: prt1_p1.a, prt1_p1.c
                     Filter: ((prt1_p1.a < 450) AND ((prt1_p1.a % 25) = 0))
               ->  Result
                     Output: b, c
                     One-Time Filter: false
         ->  Hash Right Join
               Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
               Hash Cond: (prt2_p2.b = prt1_p2.a)
               ->  Seq Scan on pwj_extra.prt2_p2
                     Output: prt2_p2.b, prt2_p2.c
                     Filter: (prt2_p2.b > 250)
               ->  Hash
                     Output: prt1_p2.a, prt1_p2.c
                     ->  Seq Scan on pwj_extra.prt1_p2
                           Output: prt1_p2.a, prt1_p2.c
                           Filter: ((prt1_p2.a < 450) AND ((prt1_p2.a % 25) = 0))
(24 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
(9 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM uprt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
(9 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Sort
   Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
   Sort Key: prt1_p2.a, prt2_p2.b
   ->  Result
         Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
         ->  Append
               ->  Hash Right Join
                     Output: prt2_p2.b, prt2_p2.c, prt1_p2.a, prt1_p2.c
                     Hash Cond: (prt1_p2.a = prt2_p2.b)
                     ->  Seq Scan on pwj_extra.prt1_p2
                           Output: prt1_p2.a, prt1_p2.c
                           Filter: (prt1_p2.a < 450)
                     ->  Hash
                           Output: prt2_p2.b, prt2_p2.c
                           ->  Seq Scan on pwj_extra.prt2_p2
                                 Output: prt2_p2.b, prt2_p2.c
                                 Filter: ((prt2_p2.b > 250) AND ((prt2_p2.a % 25) = 0))
               ->  Nested Loop Left Join
                     Output: prt2_p3.b, prt2_p3.c, a, c
                     Join Filter: (a = prt2_p3.b)
                     ->  Seq Scan on pwj_extra.prt2_p3
                           Output: prt2_p3.b, prt2_p3.c
                           Filter: ((prt2_p3.b > 250) AND ((prt2_p3.a % 25) = 0))
                     ->  Result
                           Output: a, c
                           One-Time Filter: false
(26 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1 WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM uprt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2 WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b ORDER BY t1.a, t2.b;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, prt2_p2.b, prt2_p2.c
   Sort Key: prt1_p1.a, prt2_p2.b
   ->  Hash Full Join
         Output: prt1_p1.a, prt1_p1.c, prt2_p2.b, prt2_p2.c
         Hash Cond: (prt1_p1.a = prt2_p2.b)
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_p1
                     Output: prt1_p1.a, prt1_p1.c
                     Filter: ((prt1_p1.a < 450) AND ((prt1_p1.a % 25) = 0))
               ->  Seq Scan on pwj_extra.prt1_p2
                     Output: prt1_p2.a, prt1_p2.c
                     Filter: ((prt1_p2.a < 450) AND ((prt1_p2.a % 25) = 0))
         ->  Hash
               Output: prt2_p2.b, prt2_p2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_p2
                           Output: prt2_p2.b, prt2_p2.c
                           Filter: ((prt2_p2.b > 250) AND ((prt2_p2.b % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt2_p3
                           Output: prt2_p3.b, prt2_p3.c
                           Filter: ((prt2_p3.b > 250) AND ((prt2_p3.b % 25) = 0))
(22 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2 WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1 WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2 WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(12 rows)

-- Semi-join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
                      QUERY PLAN                      
------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: (t1.a = t1_3.b)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p1 t1_3
                     Output: t1_3.b
                     Filter: ((t1_3.b % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Join Filter: (t1_1.a = t1_4.b)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p2 t1_4
                     Output: t1_4.b
                     Filter: ((t1_4.b % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Join Filter: (t1_2.a = t1_5.b)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p3 t1_5
                     Output: t1_5.b
                     Filter: ((t1_5.b % 25) = 0)
(31 rows)

SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

SELECT t1.* FROM uprt1 t1 WHERE t1.a IN (SELECT t1.b FROM uprt2 t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

-- lateral reference
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.a = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   Sort Key: t1.a
   ->  Result
         Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
         ->  Append
               ->  Nested Loop Left Join
                     Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a))
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2.a, t3.a, LEAST(t1.a, t2.a, t3.a)
                           Hash Cond: (t3.b = t2.a)
                           ->  Seq Scan on pwj_extra.prt2_p1 t3
                                 Output: t3.a, t3.b
                           ->  Hash
                                 Output: t2.a
                                 ->  Seq Scan on pwj_extra.prt1_p1 t2
                                       Output: t2.a
                                       Filter: (t1.a = t2.a)
               ->  Nested Loop Left Join
                     Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t3_1.a, (LEAST(t1_1.a, t2_1.a, t3_1.a))
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_1.a, t3_1.a, LEAST(t1_1.a, t2_1.a, t3_1.a)
                           Hash Cond: (t3_1.b = t2_1.a)
                           ->  Seq Scan on pwj_extra.prt2_p2 t3_1
                                 Output: t3_1.a, t3_1.b
                           ->  Hash
                                 Output: t2_1.a
                                 ->  Seq Scan on pwj_extra.prt1_p2 t2_1
                                       Output: t2_1.a
                                       Filter: (t1_1.a = t2_1.a)
               ->  Nested Loop Left Join
                     Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t3_2.a, (LEAST(t1_2.a, t2_2.a, t3_2.a))
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_2.a, t3_2.a, LEAST(t1_2.a, t2_2.a, t3_2.a)
                           Hash Cond: (t3_2.b = t2_2.a)
                           ->  Seq Scan on pwj_extra.prt2_p3 t3_2
                                 Output: t3_2.a, t3_2.b
                           ->  Hash
                                 Output: t2_2.a
                                 ->  Seq Scan on pwj_extra.prt1_p3 t2_2
                                       Output: t2_2.a
                                       Filter: (t1_2.a = t2_2.a)
(51 rows)

SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.a = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

SELECT * FROM uprt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM uprt1 t2 JOIN uprt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.a = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   Sort Key: t1.a
   ->  Nested Loop Left Join
         Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
         ->  Hash Join
               Output: t2.a, t3.a, LEAST(t1.a, t2.a, t3.a)
               Hash Cond: (t3.b = t2.a)
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_p1 t3
                           Output: t3.a, t3.b
                     ->  Seq Scan on pwj_extra.prt2_p2 t3_1
                           Output: t3_1.a, t3_1.b
                     ->  Seq Scan on pwj_extra.prt2_p3 t3_2
                           Output: t3_2.a, t3_2.b
               ->  Hash
                     Output: t2.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_p1 t2
                                 Output: t2.a
                                 Filter: (t1.b = t2.a)
                           ->  Seq Scan on pwj_extra.prt1_p2 t2_1
                                 Output: t2_1.a
                                 Filter: (t1.b = t2_1.a)
                           ->  Seq Scan on pwj_extra.prt1_p3 t2_2
                                 Output: t2_2.a
                                 Filter: (t1.b = t2_2.a)
(37 rows)

SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

SELECT * FROM uprt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM uprt1 t2 JOIN uprt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

--
-- partitioned by expression
--
CREATE TABLE prt1_e (a int, b int, c varchar) PARTITION BY RANGE(((a + b)/2));
CREATE TABLE prt1_e_p1 PARTITION OF prt1_e FOR VALUES FROM (0) TO (250);
CREATE TABLE prt1_e_p2 PARTITION OF prt1_e FOR VALUES FROM (250) TO (500);
CREATE TABLE prt1_e_p3 PARTITION OF prt1_e FOR VALUES FROM (500) TO (600);
INSERT INTO prt1_e SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt1_e;
ANALYZE prt1_e_p1;
ANALYZE prt1_e_p2;
ANALYZE prt1_e_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt1_e AS SELECT * FROM prt1_e;
CREATE TABLE prt2_e (a int, b int, c varchar) PARTITION BY RANGE(((b + a)/2));
CREATE TABLE prt2_e_p1 PARTITION OF prt2_e FOR VALUES FROM (0) TO (250);
CREATE TABLE prt2_e_p2 PARTITION OF prt2_e FOR VALUES FROM (250) TO (500);
CREATE TABLE prt2_e_p3 PARTITION OF prt2_e FOR VALUES FROM (500) TO (600);
INSERT INTO prt2_e SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 3) i;
ANALYZE prt2_e;
ANALYZE prt2_e_p1;
ANALYZE prt2_e_p2;
ANALYZE prt2_e_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt2_e AS SELECT * FROM prt2_e;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1, prt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: (((t2.b + t2.a) / 2) = ((t1.a + t1.b) / 2))
               ->  Seq Scan on pwj_extra.prt2_e_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Hash
                     Output: t1.a, t1.c, t1.b
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: (((t2_1.b + t2_1.a) / 2) = ((t1_1.a + t1_1.b) / 2))
               ->  Seq Scan on pwj_extra.prt2_e_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Hash
                     Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: (((t2_2.b + t2_2.a) / 2) = ((t1_2.a + t1_2.b) / 2))
               ->  Seq Scan on pwj_extra.prt2_e_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Hash
                     Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1, prt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_e t1, uprt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1 LEFT JOIN prt2_e t2 ON (t1.a + t1.b)/2 = (t2.b + t2.a)/2 WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: (((t2.b + t2.a) / 2) = ((t1.a + t1.b) / 2))
               ->  Seq Scan on pwj_extra.prt2_e_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Hash
                     Output: t1.a, t1.c, t1.b
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: (((t2_1.b + t2_1.a) / 2) = ((t1_1.a + t1_1.b) / 2))
               ->  Seq Scan on pwj_extra.prt2_e_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Hash
                     Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: (((t2_2.b + t2_2.a) / 2) = ((t1_2.a + t1_2.b) / 2))
               ->  Seq Scan on pwj_extra.prt2_e_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Hash
                     Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1 LEFT JOIN prt2_e t2 ON (t1.a + t1.b)/2 = (t2.b + t2.a)/2 WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_e t1 LEFT JOIN uprt2_e t2 ON (t1.a + t1.b)/2 = (t2.b + t2.a)/2 WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

--
-- N-way join
--
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 t1, prt2 t2, prt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Join
                     Output: t1.a, t1.c, t2.b, t2.c, t3.a, t3.b, t3.c
                     Hash Cond: (((t3.a + t3.b) / 2) = t1.a)
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t1.a, t1.c, t2.b, t2.c
                           ->  Hash Join
                                 Output: t1.a, t1.c, t2.b, t2.c
                                 Hash Cond: (t2.b = t1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t1.a, t1.c
                                       ->  Seq Scan on pwj_extra.prt1_p1 t1
                                             Output: t1.a, t1.c
                                             Filter: ((t1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                     Hash Cond: (((t3_1.a + t3_1.b) / 2) = t1_1.a)
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                           ->  Hash Join
                                 Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                                 Hash Cond: (t2_1.b = t1_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t1_1.a, t1_1.c
                                       ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                             Output: t1_1.a, t1_1.c
                                             Filter: ((t1_1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                     Hash Cond: (((t3_2.a + t3_2.b) / 2) = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                           ->  Hash Join
                                 Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                                 Hash Cond: (t2_2.b = t1_2.a)
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t1_2.a, t1_2.c
                                       ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                             Output: t1_2.a, t1_2.c
                                             Filter: ((t1_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 t1, prt2 t2, prt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM uprt1 t1, uprt2 t2, uprt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t1.a, t1.c, t2.b, t2.c, t3.a, t3.b, t3.c
                     Hash Cond: (((t3.a + t3.b) / 2) = t1.a)
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t1.a, t1.c, t2.b, t2.c
                           ->  Hash Right Join
                                 Output: t1.a, t1.c, t2.b, t2.c
                                 Hash Cond: (t2.b = t1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t1.a, t1.c
                                       ->  Seq Scan on pwj_extra.prt1_p1 t1
                                             Output: t1.a, t1.c
                                             Filter: ((t1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                     Hash Cond: (((t3_1.a + t3_1.b) / 2) = t1_1.a)
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                           ->  Hash Right Join
                                 Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                                 Hash Cond: (t2_1.b = t1_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t1_1.a, t1_1.c
                                       ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                             Output: t1_1.a, t1_1.c
                                             Filter: ((t1_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                     Hash Cond: (((t3_2.a + t3_2.b) / 2) = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                           ->  Hash Right Join
                                 Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                                 Hash Cond: (t2_2.b = t1_2.a)
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t1_2.a, t1_2.c
                                       ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                             Output: t1_2.a, t1_2.c
                                             Filter: ((t1_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 LEFT JOIN uprt2 t2 ON t1.a = t2.b) LEFT JOIN uprt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t1.a, t1.c, t2.b, t2.c, t3.a, t3.b, t3.c
                     Hash Cond: (((t3.a + t3.b) / 2) = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t1.a, t1.c, t2.b, t2.c
                           ->  Hash Right Join
                                 Output: t1.a, t1.c, t2.b, t2.c
                                 Hash Cond: (t2.b = t1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t1.a, t1.c
                                       ->  Seq Scan on pwj_extra.prt1_p1 t1
                                             Output: t1.a, t1.c
                                             Filter: ((t1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                     Hash Cond: (((t3_1.a + t3_1.b) / 2) = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                           ->  Hash Right Join
                                 Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                                 Hash Cond: (t2_1.b = t1_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t1_1.a, t1_1.c
                                       ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                             Output: t1_1.a, t1_1.c
                                             Filter: ((t1_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                     Hash Cond: (((t3_2.a + t3_2.b) / 2) = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                           ->  Hash Right Join
                                 Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                                 Hash Cond: (t2_2.b = t1_2.a)
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t1_2.a, t1_2.c
                                       ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                             Output: t1_2.a, t1_2.c
                                             Filter: ((t1_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |          | 
 100 | 0100 |     |      |          | 
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |          | 
 250 | 0250 |     |      |          | 
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |          | 
 400 | 0400 |     |      |          | 
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |          | 
 550 | 0550 |     |      |          | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 LEFT JOIN uprt2 t2 ON t1.a = t2.b) LEFT JOIN uprt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |          | 
 100 | 0100 |     |      |          | 
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |          | 
 250 | 0250 |     |      |          | 
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |          | 
 400 | 0400 |     |      |          | 
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |          | 
 550 | 0550 |     |      |          | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t3.a, t3.b, t3.c, t1.a, t1.c, t2.b, t2.c
                     Hash Cond: (t2.b = t1.a)
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.b, t2.c
                     ->  Hash
                           Output: t3.a, t3.b, t3.c, t1.a, t1.c
                           ->  Hash Right Join
                                 Output: t3.a, t3.b, t3.c, t1.a, t1.c
                                 Hash Cond: (t1.a = ((t3.a + t3.b) / 2))
                                 ->  Seq Scan on pwj_extra.prt1_p1 t1
                                       Output: t1.a, t1.c
                                 ->  Hash
                                       Output: t3.a, t3.b, t3.c
                                       ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c
                                             Filter: ((t3.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c, t2_1.b, t2_1.c
                     Hash Cond: (t2_1.b = t1_1.a)
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                     ->  Hash
                           Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                           ->  Hash Right Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                                 Hash Cond: (t1_1.a = ((t3_1.a + t3_1.b) / 2))
                                 ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                       Output: t1_1.a, t1_1.c
                                 ->  Hash
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c
                                             Filter: ((t3_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c, t2_2.b, t2_2.c
                     Hash Cond: (t2_2.b = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                     ->  Hash
                           Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                           ->  Hash Right Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                                 Hash Cond: (t1_2.a = ((t3_2.a + t3_2.b) / 2))
                                 ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                       Output: t1_2.a, t1_2.c
                                 ->  Hash
                                       Output: t3_2.a, t3_2.b, t3_2.c
                                       ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c
                                             Filter: ((t3_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 LEFT JOIN uprt2 t2 ON t1.a = t2.b) RIGHT JOIN uprt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t3.a, t3.b, t3.c, t2.b, t2.c, t1.a, t1.c
                     Hash Cond: (t1.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.c
                     ->  Hash
                           Output: t3.a, t3.b, t3.c, t2.b, t2.c
                           ->  Hash Right Join
                                 Output: t3.a, t3.b, t3.c, t2.b, t2.c
                                 Hash Cond: (t2.b = ((t3.a + t3.b) / 2))
                                 ->  Seq Scan on pwj_extra.prt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t3.a, t3.b, t3.c
                                       ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c
                                             Filter: ((t3.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: (t1_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                     ->  Hash
                           Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                           ->  Hash Right Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                                 Hash Cond: (t2_1.b = ((t3_1.a + t3_1.b) / 2))
                                 ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c
                                             Filter: ((t3_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: (t1_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                     ->  Hash
                           Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                           ->  Hash Right Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                                 Hash Cond: (t2_2.b = ((t3_2.a + t3_2.b) / 2))
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t3_2.a, t3_2.b, t3_2.c
                                       ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c
                                             Filter: ((t3_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
     |      |     |      |      100 | 0050
     |      |     |      |      200 | 0100
     |      |     |      |      400 | 0200
     |      |     |      |      500 | 0250
     |      |     |      |      700 | 0350
     |      |     |      |      800 | 0400
     |      |     |      |     1000 | 0500
     |      |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 RIGHT JOIN uprt2 t2 ON t1.a = t2.b) RIGHT JOIN uprt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
     |      |     |      |      100 | 0050
     |      |     |      |      200 | 0100
     |      |     |      |      400 | 0200
     |      |     |      |      500 | 0250
     |      |     |      |      700 | 0350
     |      |     |      |      800 | 0400
     |      |     |      |     1000 | 0500
     |      |     |      |     1100 | 0550
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT * FROM prt1_e WHERE prt1_e.a % 25 = 0) t3 ON (t1.a = (t3.a + t3.b)/2) ORDER BY t1.a, t2.b, t3.a + t3.b;
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c, ((prt1_e_p1.a + prt1_e_p1.b)), prt1_e_p1.c
   Sort Key: prt1_p1.a, prt2_p1.b, ((prt1_e_p1.a + prt1_e_p1.b))
   ->  Result
         Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c, (prt1_e_p1.a + prt1_e_p1.b), prt1_e_p1.c
         ->  Append
               ->  Hash Full Join
                     Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c, prt1_e_p1.a, prt1_e_p1.b, prt1_e_p1.c
                     Hash Cond: (prt1_p1.a = ((prt1_e_p1.a + prt1_e_p1.b) / 2))
                     ->  Hash Full Join
                           Output: prt1_p1.a, prt1_p1.c, prt2_p1.b, prt2_p1.c
                           Hash Cond: (prt1_p1.a = prt2_p1.b)
                           ->  Seq Scan on pwj_extra.prt1_p1
                                 Output: prt1_p1.a, prt1_p1.c
                                 Filter: ((prt1_p1.a % 25) = 0)
                           ->  Hash
                                 Output: prt2_p1.b, prt2_p1.c
                                 ->  Seq Scan on pwj_extra.prt2_p1
                                       Output: prt2_p1.b, prt2_p1.c
                                       Filter: ((prt2_p1.b % 25) = 0)
                     ->  Hash
                           Output: prt1_e_p1.a, prt1_e_p1.b, prt1_e_p1.c
                           ->  Seq Scan on pwj_extra.prt1_e_p1
                                 Output: prt1_e_p1.a, prt1_e_p1.b, prt1_e_p1.c
                                 Filter: ((prt1_e_p1.a % 25) = 0)
               ->  Hash Full Join
                     Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c, prt1_e_p2.a, prt1_e_p2.b, prt1_e_p2.c
                     Hash Cond: (prt1_p2.a = ((prt1_e_p2.a + prt1_e_p2.b) / 2))
                     ->  Hash Full Join
                           Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
                           Hash Cond: (prt1_p2.a = prt2_p2.b)
                           ->  Seq Scan on pwj_extra.prt1_p2
                                 Output: prt1_p2.a, prt1_p2.c
                                 Filter: ((prt1_p2.a % 25) = 0)
                           ->  Hash
                                 Output: prt2_p2.b, prt2_p2.c
                                 ->  Seq Scan on pwj_extra.prt2_p2
                                       Output: prt2_p2.b, prt2_p2.c
                                       Filter: ((prt2_p2.b % 25) = 0)
                     ->  Hash
                           Output: prt1_e_p2.a, prt1_e_p2.b, prt1_e_p2.c
                           ->  Seq Scan on pwj_extra.prt1_e_p2
                                 Output: prt1_e_p2.a, prt1_e_p2.b, prt1_e_p2.c
                                 Filter: ((prt1_e_p2.a % 25) = 0)
               ->  Hash Full Join
                     Output: prt1_p3.a, prt1_p3.c, prt2_p3.b, prt2_p3.c, prt1_e_p3.a, prt1_e_p3.b, prt1_e_p3.c
                     Hash Cond: (prt1_p3.a = ((prt1_e_p3.a + prt1_e_p3.b) / 2))
                     ->  Hash Full Join
                           Output: prt1_p3.a, prt1_p3.c, prt2_p3.b, prt2_p3.c
                           Hash Cond: (prt1_p3.a = prt2_p3.b)
                           ->  Seq Scan on pwj_extra.prt1_p3
                                 Output: prt1_p3.a, prt1_p3.c
                                 Filter: ((prt1_p3.a % 25) = 0)
                           ->  Hash
                                 Output: prt2_p3.b, prt2_p3.c
                                 ->  Seq Scan on pwj_extra.prt2_p3
                                       Output: prt2_p3.b, prt2_p3.c
                                       Filter: ((prt2_p3.b % 25) = 0)
                     ->  Hash
                           Output: prt1_e_p3.a, prt1_e_p3.b, prt1_e_p3.c
                           ->  Seq Scan on pwj_extra.prt1_e_p3
                                 Output: prt1_e_p3.a, prt1_e_p3.b, prt1_e_p3.c
                                 Filter: ((prt1_e_p3.a % 25) = 0)
(63 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT * FROM prt1_e WHERE prt1_e.a % 25 = 0) t3 ON (t1.a = (t3.a + t3.b)/2) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
     |      |  75 | 0075 |          | 
     |      | 225 | 0225 |          | 
     |      | 375 | 0375 |          | 
     |      | 525 | 0525 |          | 
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM uprt1 WHERE uprt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2 WHERE uprt2.b % 25 = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT * FROM uprt1_e WHERE uprt1_e.a % 25 = 0) t3 ON (t1.a = (t3.a + t3.b)/2) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
     |      |  75 | 0075 |          | 
     |      | 225 | 0225 |          | 
     |      | 375 | 0375 |          | 
     |      | 525 | 0525 |          | 
(16 rows)

-- Cases with non-nullable expressions in subquery results;
-- make sure these go to null as expected
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM prt1_e WHERE prt1_e.a % 25 = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b;
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, (50), prt2_p1.b, (75), ((prt1_e_p1.a + prt1_e_p1.b)), (50)
   Sort Key: prt1_p1.a, prt2_p1.b, ((prt1_e_p1.a + prt1_e_p1.b))
   ->  Result
         Output: prt1_p1.a, (50), prt2_p1.b, (75), (prt1_e_p1.a + prt1_e_p1.b), (50)
         ->  Append
               ->  Hash Full Join
                     Output: prt1_p1.a, prt2_p1.b, prt1_e_p1.a, prt1_e_p1.b, (50), (75), (50)
                     Hash Cond: (prt1_p1.a = ((prt1_e_p1.a + prt1_e_p1.b) / 2))
                     Filter: ((prt1_p1.a = (50)) OR (prt2_p1.b = (75)) OR (((prt1_e_p1.a + prt1_e_p1.b) / 2) = (50)))
                     ->  Hash Full Join
                           Output: prt1_p1.a, prt2_p1.b, (50), (75)
                           Hash Cond: (prt1_p1.a = prt2_p1.b)
                           ->  Seq Scan on pwj_extra.prt1_p1
                                 Output: prt1_p1.a, 50
                                 Filter: ((prt1_p1.a % 25) = 0)
                           ->  Hash
                                 Output: prt2_p1.b, (75)
                                 ->  Seq Scan on pwj_extra.prt2_p1
                                       Output: prt2_p1.b, 75
                                       Filter: ((prt2_p1.b % 25) = 0)
                     ->  Hash
                           Output: prt1_e_p1.a, prt1_e_p1.b, (50)
                           ->  Seq Scan on pwj_extra.prt1_e_p1
                                 Output: prt1_e_p1.a, prt1_e_p1.b, 50
                                 Filter: ((prt1_e_p1.a % 25) = 0)
               ->  Hash Full Join
                     Output: prt1_p2.a, prt2_p2.b, prt1_e_p2.a, prt1_e_p2.b, (50), (75), (50)
                     Hash Cond: (prt1_p2.a = ((prt1_e_p2.a + prt1_e_p2.b) / 2))
                     Filter: ((prt1_p2.a = (50)) OR (prt2_p2.b = (75)) OR (((prt1_e_p2.a + prt1_e_p2.b) / 2) = (50)))
                     ->  Hash Full Join
                           Output: prt1_p2.a, prt2_p2.b, (50), (75)
                           Hash Cond: (prt1_p2.a = prt2_p2.b)
                           ->  Seq Scan on pwj_extra.prt1_p2
                                 Output: prt1_p2.a, 50
                                 Filter: ((prt1_p2.a % 25) = 0)
                           ->  Hash
                                 Output: prt2_p2.b, (75)
                                 ->  Seq Scan on pwj_extra.prt2_p2
                                       Output: prt2_p2.b, 75
                                       Filter: ((prt2_p2.b % 25) = 0)
                     ->  Hash
                           Output: prt1_e_p2.a, prt1_e_p2.b, (50)
                           ->  Seq Scan on pwj_extra.prt1_e_p2
                                 Output: prt1_e_p2.a, prt1_e_p2.b, 50
                                 Filter: ((prt1_e_p2.a % 25) = 0)
               ->  Hash Full Join
                     Output: prt1_p3.a, prt2_p3.b, prt1_e_p3.a, prt1_e_p3.b, (50), (75), (50)
                     Hash Cond: (prt1_p3.a = ((prt1_e_p3.a + prt1_e_p3.b) / 2))
                     Filter: ((prt1_p3.a = (50)) OR (prt2_p3.b = (75)) OR (((prt1_e_p3.a + prt1_e_p3.b) / 2) = (50)))
                     ->  Hash Full Join
                           Output: prt1_p3.a, prt2_p3.b, (50), (75)
                           Hash Cond: (prt1_p3.a = prt2_p3.b)
                           ->  Seq Scan on pwj_extra.prt1_p3
                                 Output: prt1_p3.a, 50
                                 Filter: ((prt1_p3.a % 25) = 0)
                           ->  Hash
                                 Output: prt2_p3.b, (75)
                                 ->  Seq Scan on pwj_extra.prt2_p3
                                       Output: prt2_p3.b, 75
                                       Filter: ((prt2_p3.b % 25) = 0)
                     ->  Hash
                           Output: prt1_e_p3.a, prt1_e_p3.b, (50)
                           ->  Seq Scan on pwj_extra.prt1_e_p3
                                 Output: prt1_e_p3.a, prt1_e_p3.b, 50
                                 Filter: ((prt1_e_p3.a % 25) = 0)
(66 rows)

SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM prt1 WHERE prt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.b % 25 = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM prt1_e WHERE prt1_e.a % 25 = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b;
 a  | phv | b  | phv | ?column? | phv 
----+-----+----+-----+----------+-----
 50 |  50 |    |     |      100 |  50
    |     | 75 |  75 |          |    
(2 rows)

SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM uprt1 WHERE uprt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM uprt2 WHERE uprt2.b % 25 = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM uprt1_e WHERE uprt1_e.a % 25 = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b;
 a  | phv | b  | phv | ?column? | phv 
----+-----+----+-----+----------+-----
 50 |  50 |    |     |      100 |  50
    |     | 75 |  75 |          |    
(2 rows)

-- Semi-join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1, prt1_e t2 WHERE t1.b % 25 = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.a % 25 = 0 ORDER BY t1.a;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: (t1.a = t1_3.b)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_3.b, t2.a, t2.b
                     Hash Cond: (((t2.a + t2.b) / 2) = t1_3.b)
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t2
                           Output: t2.a, t2.b
                     ->  Hash
                           Output: t1_3.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t1_3
                                 Output: t1_3.b
                                 Filter: ((t1_3.b % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Join Filter: (t1_1.a = t1_4.b)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_4.b, t2_1.a, t2_1.b
                     Hash Cond: (((t2_1.a + t2_1.b) / 2) = t1_4.b)
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t2_1
                           Output: t2_1.a, t2_1.b
                     ->  Hash
                           Output: t1_4.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t1_4
                                 Output: t1_4.b
                                 Filter: ((t1_4.b % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Join Filter: (t1_2.a = t1_5.b)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Hash Join
                     Output: t1_5.b, t2_2.a, t2_2.b
                     Hash Cond: (((t2_2.a + t2_2.b) / 2) = t1_5.b)
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t2_2
                           Output: t2_2.a, t2_2.b
                     ->  Hash
                           Output: t1_5.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t1_5
                                 Output: t1_5.b
                                 Filter: ((t1_5.b % 25) = 0)
(52 rows)

SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1, prt1_e t2 WHERE t1.b % 25 = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

SELECT t1.* FROM uprt1 t1 WHERE t1.a IN (SELECT t1.b FROM uprt2 t1, uprt1_e t2 WHERE t1.b % 25 = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: (t1.a = t1_3.b)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Hash Semi Join
                     Output: t1_3.b, t1_6.a, t1_6.b
                     Hash Cond: (t1_3.b = ((t1_6.a + t1_6.b) / 2))
                     ->  Seq Scan on pwj_extra.prt2_p1 t1_3
                           Output: t1_3.b
                     ->  Hash
                           Output: t1_6.a, t1_6.b
                           ->  Seq Scan on pwj_extra.prt1_e_p1 t1_6
                                 Output: t1_6.a, t1_6.b
                                 Filter: ((t1_6.a % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Join Filter: (t1_1.a = t1_4.b)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Hash Semi Join
                     Output: t1_4.b, t1_7.a, t1_7.b
                     Hash Cond: (t1_4.b = ((t1_7.a + t1_7.b) / 2))
                     ->  Seq Scan on pwj_extra.prt2_p2 t1_4
                           Output: t1_4.b
                     ->  Hash
                           Output: t1_7.a, t1_7.b
                           ->  Seq Scan on pwj_extra.prt1_e_p2 t1_7
                                 Output: t1_7.a, t1_7.b
                                 Filter: ((t1_7.a % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Join Filter: (t1_2.a = t1_5.b)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Hash Semi Join
                     Output: t1_5.b, t1_8.a, t1_8.b
                     Hash Cond: (t1_5.b = ((t1_8.a + t1_8.b) / 2))
                     ->  Seq Scan on pwj_extra.prt2_p3 t1_5
                           Output: t1_5.b
                     ->  Hash
                           Output: t1_8.a, t1_8.b
                           ->  Seq Scan on pwj_extra.prt1_e_p3 t1_8
                                 Output: t1_8.a, t1_8.b
                                 Filter: ((t1_8.a % 25) = 0)
(52 rows)

SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

SELECT t1.* FROM uprt1 t1 WHERE t1.a IN (SELECT t1.b FROM uprt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM uprt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

-- test merge joins with and without using indexes
SET enable_hashjoin TO off;
SET enable_nestloop TO off;
CREATE INDEX iprt1_p1_a on prt1_p1(a);
CREATE INDEX iprt1_p2_a on prt1_p2(a);
CREATE INDEX iprt1_p3_a on prt1_p3(a);
CREATE INDEX iprt2_p1_b on prt2_p1(b);
CREATE INDEX iprt2_p2_b on prt2_p2(b);
CREATE INDEX iprt2_p3_b on prt2_p3(b);
CREATE INDEX iprt1_e_p1_ab2 on prt1_e_p1(((a+b)/2));
CREATE INDEX iprt1_e_p2_ab2 on prt1_e_p2(((a+b)/2));
CREATE INDEX iprt1_e_p3_ab2 on prt1_e_p3(((a+b)/2));
ANALYZE prt1;
ANALYZE prt1_p1;
ANALYZE prt1_p2;
ANALYZE prt1_p3;
ANALYZE prt2;
ANALYZE prt2_p1;
ANALYZE prt2_p2;
ANALYZE prt2_p3;
ANALYZE prt1_e;
ANALYZE prt1_e_p1;
ANALYZE prt1_e_p2;
ANALYZE prt1_e_p3;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Merge Left Join
                     Output: t3.a, t3.b, t3.c, t2.b, t2.c, t1.a, t1.c
                     Merge Cond: (t2.b = t1.a)
                     ->  Sort
                           Output: t3.a, t3.b, t3.c, t2.b, t2.c
                           Sort Key: t2.b
                           ->  Merge Left Join
                                 Output: t3.a, t3.b, t3.c, t2.b, t2.c
                                 Merge Cond: ((((t3.a + t3.b) / 2)) = t2.b)
                                 ->  Sort
                                       Output: t3.a, t3.b, t3.c, (((t3.a + t3.b) / 2))
                                       Sort Key: (((t3.a + t3.b) / 2))
                                       ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c, ((t3.a + t3.b) / 2)
                                             Filter: ((t3.a % 25) = 0)
                                 ->  Sort
                                       Output: t2.b, t2.c
                                       Sort Key: t2.b
                                       ->  Seq Scan on pwj_extra.prt2_p1 t2
                                             Output: t2.b, t2.c
                     ->  Sort
                           Output: t1.a, t1.c
                           Sort Key: t1.a
                           ->  Seq Scan on pwj_extra.prt1_p1 t1
                                 Output: t1.a, t1.c
               ->  Merge Left Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Merge Cond: (t2_1.b = t1_1.a)
                     ->  Sort
                           Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                           Sort Key: t2_1.b
                           ->  Merge Left Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                                 Merge Cond: ((((t3_1.a + t3_1.b) / 2)) = t2_1.b)
                                 ->  Sort
                                       Output: t3_1.a, t3_1.b, t3_1.c, (((t3_1.a + t3_1.b) / 2))
                                       Sort Key: (((t3_1.a + t3_1.b) / 2))
                                       ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c, ((t3_1.a + t3_1.b) / 2)
                                             Filter: ((t3_1.a % 25) = 0)
                                 ->  Sort
                                       Output: t2_1.b, t2_1.c
                                       Sort Key: t2_1.b
                                       ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                             Output: t2_1.b, t2_1.c
                     ->  Sort
                           Output: t1_1.a, t1_1.c
                           Sort Key: t1_1.a
                           ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a, t1_1.c
               ->  Merge Left Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Merge Cond: (t2_2.b = t1_2.a)
                     ->  Sort
                           Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                           Sort Key: t2_2.b
                           ->  Merge Left Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                                 Merge Cond: ((((t3_2.a + t3_2.b) / 2)) = t2_2.b)
                                 ->  Sort
                                       Output: t3_2.a, t3_2.b, t3_2.c, (((t3_2.a + t3_2.b) / 2))
                                       Sort Key: (((t3_2.a + t3_2.b) / 2))
                                       ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c, ((t3_2.a + t3_2.b) / 2)
                                             Filter: ((t3_2.a % 25) = 0)
                                 ->  Sort
                                       Output: t2_2.b, t2_2.c
                                       Sort Key: t2_2.b
                                       ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                             Output: t2_2.b, t2_2.c
                     ->  Sort
                           Output: t1_2.a, t1_2.c
                           Sort Key: t1_2.a
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
(81 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
     |      |     |      |      100 | 0050
     |      |     |      |      200 | 0100
     |      |     |      |      400 | 0200
     |      |     |      |      500 | 0250
     |      |     |      |      700 | 0350
     |      |     |      |      800 | 0400
     |      |     |      |     1000 | 0500
     |      |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 RIGHT JOIN uprt2 t2 ON t1.a = t2.b) RIGHT JOIN uprt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
     |      |     |      |      100 | 0050
     |      |     |      |      200 | 0100
     |      |     |      |      400 | 0200
     |      |     |      |      500 | 0250
     |      |     |      |      700 | 0350
     |      |     |      |      800 | 0400
     |      |     |      |     1000 | 0500
     |      |     |      |     1100 | 0550
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Merge Append
   Sort Key: t1.a
   ->  Merge Semi Join
         Output: t1.a, t1.b, t1.c
         Merge Cond: (t1.a = t1_3.b)
         ->  Sort
               Output: t1.a, t1.b, t1.c
               Sort Key: t1.a
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_3.b, t1_6.a, t1_6.b
               Merge Cond: (t1_3.b = (((t1_6.a + t1_6.b) / 2)))
               ->  Sort
                     Output: t1_3.b
                     Sort Key: t1_3.b
                     ->  Seq Scan on pwj_extra.prt2_p1 t1_3
                           Output: t1_3.b
               ->  Sort
                     Output: t1_6.a, t1_6.b, (((t1_6.a + t1_6.b) / 2))
                     Sort Key: (((t1_6.a + t1_6.b) / 2))
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t1_6
                           Output: t1_6.a, t1_6.b, ((t1_6.a + t1_6.b) / 2)
                           Filter: ((t1_6.a % 25) = 0)
   ->  Merge Semi Join
         Output: t1_1.a, t1_1.b, t1_1.c
         Merge Cond: (t1_1.a = t1_4.b)
         ->  Sort
               Output: t1_1.a, t1_1.b, t1_1.c
               Sort Key: t1_1.a
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_4.b, t1_7.a, t1_7.b
               Merge Cond: (t1_4.b = (((t1_7.a + t1_7.b) / 2)))
               ->  Sort
                     Output: t1_4.b
                     Sort Key: t1_4.b
                     ->  Seq Scan on pwj_extra.prt2_p2 t1_4
                           Output: t1_4.b
               ->  Sort
                     Output: t1_7.a, t1_7.b, (((t1_7.a + t1_7.b) / 2))
                     Sort Key: (((t1_7.a + t1_7.b) / 2))
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t1_7
                           Output: t1_7.a, t1_7.b, ((t1_7.a + t1_7.b) / 2)
                           Filter: ((t1_7.a % 25) = 0)
   ->  Merge Semi Join
         Output: t1_2.a, t1_2.b, t1_2.c
         Merge Cond: (t1_2.a = t1_5.b)
         ->  Sort
               Output: t1_2.a, t1_2.b, t1_2.c
               Sort Key: t1_2.a
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_5.b, t1_8.a, t1_8.b
               Merge Cond: (t1_5.b = (((t1_8.a + t1_8.b) / 2)))
               ->  Sort
                     Output: t1_5.b
                     Sort Key: t1_5.b
                     ->  Seq Scan on pwj_extra.prt2_p3 t1_5
                           Output: t1_5.b
               ->  Sort
                     Output: t1_8.a, t1_8.b, (((t1_8.a + t1_8.b) / 2))
                     Sort Key: (((t1_8.a + t1_8.b) / 2))
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t1_8
                           Output: t1_8.a, t1_8.b, ((t1_8.a + t1_8.b) / 2)
                           Filter: ((t1_8.a % 25) = 0)
(71 rows)

SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

SELECT t1.* FROM uprt1 t1 WHERE t1.a IN (SELECT t1.b FROM uprt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM uprt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Merge Left Join
                     Output: t3.a, t3.b, t3.c, t1.a, t1.c, t2.b, t2.c
                     Merge Cond: (t1.a = t2.b)
                     ->  Sort
                           Output: t3.a, t3.b, t3.c, t1.a, t1.c
                           Sort Key: t1.a
                           ->  Merge Left Join
                                 Output: t3.a, t3.b, t3.c, t1.a, t1.c
                                 Merge Cond: ((((t3.a + t3.b) / 2)) = t1.a)
                                 ->  Sort
                                       Output: t3.a, t3.b, t3.c, (((t3.a + t3.b) / 2))
                                       Sort Key: (((t3.a + t3.b) / 2))
                                       ->  Seq Scan on pwj_extra.prt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c, ((t3.a + t3.b) / 2)
                                             Filter: ((t3.a % 25) = 0)
                                 ->  Sort
                                       Output: t1.a, t1.c
                                       Sort Key: t1.a
                                       ->  Seq Scan on pwj_extra.prt1_p1 t1
                                             Output: t1.a, t1.c
                     ->  Sort
                           Output: t2.b, t2.c
                           Sort Key: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b, t2.c
               ->  Merge Left Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c, t2_1.b, t2_1.c
                     Merge Cond: (t1_1.a = t2_1.b)
                     ->  Sort
                           Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                           Sort Key: t1_1.a
                           ->  Merge Left Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                                 Merge Cond: ((((t3_1.a + t3_1.b) / 2)) = t1_1.a)
                                 ->  Sort
                                       Output: t3_1.a, t3_1.b, t3_1.c, (((t3_1.a + t3_1.b) / 2))
                                       Sort Key: (((t3_1.a + t3_1.b) / 2))
                                       ->  Seq Scan on pwj_extra.prt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c, ((t3_1.a + t3_1.b) / 2)
                                             Filter: ((t3_1.a % 25) = 0)
                                 ->  Sort
                                       Output: t1_1.a, t1_1.c
                                       Sort Key: t1_1.a
                                       ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                             Output: t1_1.a, t1_1.c
                     ->  Sort
                           Output: t2_1.b, t2_1.c
                           Sort Key: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
               ->  Merge Left Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c, t2_2.b, t2_2.c
                     Merge Cond: (t1_2.a = t2_2.b)
                     ->  Sort
                           Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                           Sort Key: t1_2.a
                           ->  Merge Left Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                                 Merge Cond: ((((t3_2.a + t3_2.b) / 2)) = t1_2.a)
                                 ->  Sort
                                       Output: t3_2.a, t3_2.b, t3_2.c, (((t3_2.a + t3_2.b) / 2))
                                       Sort Key: (((t3_2.a + t3_2.b) / 2))
                                       ->  Seq Scan on pwj_extra.prt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c, ((t3_2.a + t3_2.b) / 2)
                                             Filter: ((t3_2.a % 25) = 0)
                                 ->  Sort
                                       Output: t1_2.a, t1_2.c
                                       Sort Key: t1_2.a
                                       ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                             Output: t1_2.a, t1_2.c
                     ->  Sort
                           Output: t2_2.b, t2_2.c
                           Sort Key: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
(81 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 LEFT JOIN uprt2 t2 ON t1.a = t2.b) RIGHT JOIN uprt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

SET enable_seqscan TO off;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Merge Left Join
                     Output: t3.a, t3.b, t3.c, t2.b, t2.c, t1.a, t1.c
                     Merge Cond: (t2.b = t1.a)
                     ->  Sort
                           Output: t3.a, t3.b, t3.c, t2.b, t2.c
                           Sort Key: t2.b
                           ->  Merge Left Join
                                 Output: t3.a, t3.b, t3.c, t2.b, t2.c
                                 Merge Cond: (((t3.a + t3.b) / 2) = t2.b)
                                 ->  Index Scan using iprt1_e_p1_ab2 on pwj_extra.prt1_e_p1 t3
                                       Output: t3.a, t3.b, t3.c
                                       Filter: ((t3.a % 25) = 0)
                                 ->  Index Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2
                                       Output: t2.b, t2.c
                     ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.c
               ->  Merge Left Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Merge Cond: (t2_1.b = t1_1.a)
                     ->  Sort
                           Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                           Sort Key: t2_1.b
                           ->  Merge Left Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                                 Merge Cond: (((t3_1.a + t3_1.b) / 2) = t2_1.b)
                                 ->  Index Scan using iprt1_e_p2_ab2 on pwj_extra.prt1_e_p2 t3_1
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       Filter: ((t3_1.a % 25) = 0)
                                 ->  Index Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                     ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
               ->  Merge Right Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Merge Cond: (t2_2.b = ((t3_2.a + t3_2.b) / 2))
                     ->  Merge Left Join
                           Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                           Merge Cond: (t2_2.b = t1_2.a)
                           ->  Index Scan using iprt2_p3_b on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                           ->  Index Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
                     ->  Index Scan using iprt1_e_p3_ab2 on pwj_extra.prt1_e_p3 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                           Filter: ((t3_2.a % 25) = 0)
(51 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
     |      |     |      |      100 | 0050
     |      |     |      |      200 | 0100
     |      |     |      |      400 | 0200
     |      |     |      |      500 | 0250
     |      |     |      |      700 | 0350
     |      |     |      |      800 | 0400
     |      |     |      |     1000 | 0500
     |      |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 RIGHT JOIN uprt2 t2 ON t1.a = t2.b) RIGHT JOIN uprt1_e t3 ON (t2.b = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
 150 | 0150 | 150 | 0150 |      300 | 0150
 300 | 0300 | 300 | 0300 |      600 | 0300
 450 | 0450 | 450 | 0450 |      900 | 0450
     |      |     |      |      100 | 0050
     |      |     |      |      200 | 0100
     |      |     |      |      400 | 0200
     |      |     |      |      500 | 0250
     |      |     |      |      700 | 0350
     |      |     |      |      800 | 0400
     |      |     |      |     1000 | 0500
     |      |     |      |     1100 | 0550
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Merge Append
   Sort Key: t1.a
   ->  Merge Semi Join
         Output: t1.a, t1.b, t1.c
         Merge Cond: (t1.a = t1_3.b)
         ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
               Output: t1.a, t1.b, t1.c
               Filter: ((t1.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_3.b, t1_6.a, t1_6.b
               Merge Cond: (t1_3.b = ((t1_6.a + t1_6.b) / 2))
               ->  Index Only Scan using iprt2_p1_b on pwj_extra.prt2_p1 t1_3
                     Output: t1_3.b
               ->  Index Scan using iprt1_e_p1_ab2 on pwj_extra.prt1_e_p1 t1_6
                     Output: t1_6.a, t1_6.b
                     Filter: ((t1_6.a % 25) = 0)
   ->  Merge Semi Join
         Output: t1_1.a, t1_1.b, t1_1.c
         Merge Cond: (t1_1.a = t1_4.b)
         ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
               Output: t1_1.a, t1_1.b, t1_1.c
               Filter: ((t1_1.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_4.b, t1_7.a, t1_7.b
               Merge Cond: (t1_4.b = ((t1_7.a + t1_7.b) / 2))
               ->  Index Only Scan using iprt2_p2_b on pwj_extra.prt2_p2 t1_4
                     Output: t1_4.b
               ->  Index Scan using iprt1_e_p2_ab2 on pwj_extra.prt1_e_p2 t1_7
                     Output: t1_7.a, t1_7.b
                     Filter: ((t1_7.a % 25) = 0)
   ->  Merge Semi Join
         Output: t1_2.a, t1_2.b, t1_2.c
         Merge Cond: (t1_2.a = t1_5.b)
         ->  Index Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
               Output: t1_2.a, t1_2.b, t1_2.c
               Filter: ((t1_2.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_5.b, t1_8.a, t1_8.b
               Merge Cond: (t1_5.b = ((t1_8.a + t1_8.b) / 2))
               ->  Index Only Scan using iprt2_p3_b on pwj_extra.prt2_p3 t1_5
                     Output: t1_5.b
               ->  Index Scan using iprt1_e_p3_ab2 on pwj_extra.prt1_e_p3 t1_8
                     Output: t1_8.a, t1_8.b
                     Filter: ((t1_8.a % 25) = 0)
(44 rows)

SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

SELECT t1.* FROM uprt1 t1 WHERE t1.a IN (SELECT t1.b FROM uprt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM uprt1_e t1 WHERE t1.a %25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Merge Left Join
                     Output: t3.a, t3.b, t3.c, t1.a, t1.c, t2.b, t2.c
                     Merge Cond: (t1.a = t2.b)
                     ->  Sort
                           Output: t3.a, t3.b, t3.c, t1.a, t1.c
                           Sort Key: t1.a
                           ->  Merge Left Join
                                 Output: t3.a, t3.b, t3.c, t1.a, t1.c
                                 Merge Cond: (((t3.a + t3.b) / 2) = t1.a)
                                 ->  Index Scan using iprt1_e_p1_ab2 on pwj_extra.prt1_e_p1 t3
                                       Output: t3.a, t3.b, t3.c
                                       Filter: ((t3.a % 25) = 0)
                                 ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
                                       Output: t1.a, t1.c
                     ->  Index Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2
                           Output: t2.b, t2.c
               ->  Merge Left Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c, t2_1.b, t2_1.c
                     Merge Cond: (t1_1.a = t2_1.b)
                     ->  Sort
                           Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                           Sort Key: t1_1.a
                           ->  Merge Left Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                                 Merge Cond: (((t3_1.a + t3_1.b) / 2) = t1_1.a)
                                 ->  Index Scan using iprt1_e_p2_ab2 on pwj_extra.prt1_e_p2 t3_1
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       Filter: ((t3_1.a % 25) = 0)
                                 ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
                                       Output: t1_1.a, t1_1.c
                     ->  Index Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
               ->  Merge Left Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c, t2_2.b, t2_2.c
                     Merge Cond: (t1_2.a = t2_2.b)
                     ->  Sort
                           Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                           Sort Key: t1_2.a
                           ->  Merge Left Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                                 Merge Cond: (((t3_2.a + t3_2.b) / 2) = t1_2.a)
                                 ->  Index Scan using iprt1_e_p3_ab2 on pwj_extra.prt1_e_p3 t3_2
                                       Output: t3_2.a, t3_2.b, t3_2.c
                                       Filter: ((t3_2.a % 25) = 0)
                                 ->  Index Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
                                       Output: t1_2.a, t1_2.c
                     ->  Index Scan using iprt2_p3_b on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
(54 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uprt1 t1 LEFT JOIN uprt2 t2 ON t1.a = t2.b) RIGHT JOIN uprt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |  c   
-----+------+-----+------+----------+------
   0 | 0000 |   0 | 0000 |        0 | 0000
  50 | 0050 |     |      |      100 | 0050
 100 | 0100 |     |      |      200 | 0100
 150 | 0150 | 150 | 0150 |      300 | 0150
 200 | 0200 |     |      |      400 | 0200
 250 | 0250 |     |      |      500 | 0250
 300 | 0300 | 300 | 0300 |      600 | 0300
 350 | 0350 |     |      |      700 | 0350
 400 | 0400 |     |      |      800 | 0400
 450 | 0450 | 450 | 0450 |      900 | 0450
 500 | 0500 |     |      |     1000 | 0500
 550 | 0550 |     |      |     1100 | 0550
(12 rows)

-- lateral references and parameterized paths
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.a = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Nested Loop Left Join
   Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   ->  Merge Append
         Sort Key: t1.a
         ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
               Output: t1.a, t1.b, t1.c
               Filter: ((t1.a % 25) = 0)
         ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
               Output: t1_1.a, t1_1.b, t1_1.c
               Filter: ((t1_1.a % 25) = 0)
         ->  Index Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
               Output: t1_2.a, t1_2.b, t1_2.c
               Filter: ((t1_2.a % 25) = 0)
   ->  Append
         ->  Merge Join
               Output: t2.a, t3.a, LEAST(t1.a, t2.a, t3.a)
               Merge Cond: (t2.a = t3.b)
               ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t2
                     Output: t2.a
                     Index Cond: (t2.a = t1.a)
               ->  Index Scan using iprt2_p1_b on pwj_extra.prt2_p1 t3
                     Output: t3.a, t3.b
         ->  Merge Join
               Output: t2_1.a, t3_1.a, LEAST(t1.a, t2_1.a, t3_1.a)
               Merge Cond: (t2_1.a = t3_1.b)
               ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t2_1
                     Output: t2_1.a
                     Index Cond: (t2_1.a = t1.a)
               ->  Index Scan using iprt2_p2_b on pwj_extra.prt2_p2 t3_1
                     Output: t3_1.a, t3_1.b
         ->  Merge Join
               Output: t2_2.a, t3_2.a, LEAST(t1.a, t2_2.a, t3_2.a)
               Merge Cond: (t2_2.a = t3_2.b)
               ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t2_2
                     Output: t2_2.a
                     Index Cond: (t2_2.a = t1.a)
               ->  Index Scan using iprt2_p3_b on pwj_extra.prt2_p3 t3_2
                     Output: t3_2.a, t3_2.b
(38 rows)

SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.a = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

SELECT * FROM uprt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM uprt1 t2 JOIN uprt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.a = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Nested Loop Left Join
   Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   ->  Merge Append
         Sort Key: t1.a
         ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
               Output: t1.a, t1.b, t1.c
               Filter: ((t1.a % 25) = 0)
         ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
               Output: t1_1.a, t1_1.b, t1_1.c
               Filter: ((t1_1.a % 25) = 0)
         ->  Index Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
               Output: t1_2.a, t1_2.b, t1_2.c
               Filter: ((t1_2.a % 25) = 0)
   ->  Append
         ->  Merge Join
               Output: t2.a, t3.a, LEAST(t1.a, t2.a, t3.a)
               Merge Cond: (t2.a = t3.b)
               ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t2
                     Output: t2.a
                     Index Cond: (t2.a = t1.b)
               ->  Index Scan using iprt2_p1_b on pwj_extra.prt2_p1 t3
                     Output: t3.a, t3.b
         ->  Merge Join
               Output: t2_1.a, t3_1.a, LEAST(t1.a, t2_1.a, t3_1.a)
               Merge Cond: (t2_1.a = t3_1.b)
               ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t2_1
                     Output: t2_1.a
                     Index Cond: (t2_1.a = t1.b)
               ->  Index Scan using iprt2_p2_b on pwj_extra.prt2_p2 t3_1
                     Output: t3_1.a, t3_1.b
         ->  Merge Join
               Output: t2_2.a, t3_2.a, LEAST(t1.a, t2_2.a, t3_2.a)
               Merge Cond: (t2_2.a = t3_2.b)
               ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t2_2
                     Output: t2_2.a
                     Index Cond: (t2_2.a = t1.b)
               ->  Index Scan using iprt2_p3_b on pwj_extra.prt2_p3 t3_2
                     Output: t3_2.a, t3_2.b
(38 rows)

SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

SELECT * FROM uprt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM uprt1 t2 JOIN uprt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t3a | least 
-----+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |     |      
 100 | 100 | 0100 |     |     |      
 150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |     |      
 250 | 250 | 0250 |     |     |      
 300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |     |      
 400 | 400 | 0400 |     |     |      
 450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |     |      
 550 | 550 | 0550 |     |     |      
(12 rows)

RESET enable_hashjoin;
RESET enable_nestloop;
RESET enable_seqscan;
--
-- partitioned by multiple columns
--
CREATE TABLE prt1_m (a int, b int, c varchar) PARTITION BY RANGE(a, ((a + b)/2));
CREATE TABLE prt1_m_p1 PARTITION OF prt1_m FOR VALUES FROM (0, 0) TO (250, 250);
CREATE TABLE prt1_m_p2 PARTITION OF prt1_m FOR VALUES FROM (250, 250) TO (500, 500);
CREATE TABLE prt1_m_p3 PARTITION OF prt1_m FOR VALUES FROM (500, 500) TO (600, 600);
INSERT INTO prt1_m SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt1_m;
ANALYZE prt1_m_p1;
ANALYZE prt1_m_p2;
ANALYZE prt1_m_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt1_m AS SELECT * FROM prt1_m;
CREATE TABLE prt2_m (a int, b int, c varchar) PARTITION BY RANGE(((b + a)/2), b);
CREATE TABLE prt2_m_p1 PARTITION OF prt2_m FOR VALUES FROM (0, 0) TO (250, 250);
CREATE TABLE prt2_m_p2 PARTITION OF prt2_m FOR VALUES FROM (250, 250) TO (500, 500);
CREATE TABLE prt2_m_p3 PARTITION OF prt2_m FOR VALUES FROM (500, 500) TO (600, 600);
INSERT INTO prt2_m SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 3) i;
ANALYZE prt2_m;
ANALYZE prt2_m_p1;
ANALYZE prt2_m_p2;
ANALYZE prt2_m_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt2_m AS SELECT * FROM prt2_m;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 RIGHT JOIN prt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                                                 QUERY PLAN                                                 
------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: ((((t1.a + t1.b) / 2) = t2.b) AND (t1.a = ((t2.b + t2.a) / 2)))
                     ->  Seq Scan on pwj_extra.prt1_m_p1 t1
                           Output: t1.a, t1.c, t1.b
                     ->  Hash
                           Output: t2.b, t2.c, t2.a
                           ->  Seq Scan on pwj_extra.prt2_m_p1 t2
                                 Output: t2.b, t2.c, t2.a
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: ((((t1_1.a + t1_1.b) / 2) = t2_1.b) AND (t1_1.a = ((t2_1.b + t2_1.a) / 2)))
                     ->  Seq Scan on pwj_extra.prt1_m_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Hash
                           Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Seq Scan on pwj_extra.prt2_m_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: ((((t1_2.a + t1_2.b) / 2) = t2_2.b) AND (t1_2.a = ((t2_2.b + t2_2.a) / 2)))
                     ->  Seq Scan on pwj_extra.prt1_m_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Hash
                           Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Seq Scan on pwj_extra.prt2_m_p3 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                                 Filter: ((t2_2.b % 25) = 0)
(36 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 RIGHT JOIN prt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_m t1 RIGHT JOIN uprt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_m WHERE prt2_m.b % 25 = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b;
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_m_p1.a, prt1_m_p1.c, prt2_m_p1.b, prt2_m_p1.c
   Sort Key: prt1_m_p1.a, prt2_m_p1.b
   ->  Append
         ->  Hash Full Join
               Output: prt1_m_p1.a, prt1_m_p1.c, prt2_m_p1.b, prt2_m_p1.c
               Hash Cond: ((prt1_m_p1.a = ((prt2_m_p1.b + prt2_m_p1.a) / 2)) AND (((prt1_m_p1.a + prt1_m_p1.b) / 2) = prt2_m_p1.b))
               ->  Seq Scan on pwj_extra.prt1_m_p1
                     Output: prt1_m_p1.a, prt1_m_p1.c, prt1_m_p1.b
                     Filter: ((prt1_m_p1.a % 25) = 0)
               ->  Hash
                     Output: prt2_m_p1.b, prt2_m_p1.c, prt2_m_p1.a
                     ->  Seq Scan on pwj_extra.prt2_m_p1
                           Output: prt2_m_p1.b, prt2_m_p1.c, prt2_m_p1.a
                           Filter: ((prt2_m_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_m_p2.a, prt1_m_p2.c, prt2_m_p2.b, prt2_m_p2.c
               Hash Cond: ((prt1_m_p2.a = ((prt2_m_p2.b + prt2_m_p2.a) / 2)) AND (((prt1_m_p2.a + prt1_m_p2.b) / 2) = prt2_m_p2.b))
               ->  Seq Scan on pwj_extra.prt1_m_p2
                     Output: prt1_m_p2.a, prt1_m_p2.c, prt1_m_p2.b
                     Filter: ((prt1_m_p2.a % 25) = 0)
               ->  Hash
                     Output: prt2_m_p2.b, prt2_m_p2.c, prt2_m_p2.a
                     ->  Seq Scan on pwj_extra.prt2_m_p2
                           Output: prt2_m_p2.b, prt2_m_p2.c, prt2_m_p2.a
                           Filter: ((prt2_m_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_m_p3.a, prt1_m_p3.c, prt2_m_p3.b, prt2_m_p3.c
               Hash Cond: ((prt1_m_p3.a = ((prt2_m_p3.b + prt2_m_p3.a) / 2)) AND (((prt1_m_p3.a + prt1_m_p3.b) / 2) = prt2_m_p3.b))
               ->  Seq Scan on pwj_extra.prt1_m_p3
                     Output: prt1_m_p3.a, prt1_m_p3.c, prt1_m_p3.b
                     Filter: ((prt1_m_p3.a % 25) = 0)
               ->  Hash
                     Output: prt2_m_p3.b, prt2_m_p3.c, prt2_m_p3.a
                     ->  Seq Scan on pwj_extra.prt2_m_p3
                           Output: prt2_m_p3.b, prt2_m_p3.c, prt2_m_p3.a
                           Filter: ((prt2_m_p3.b % 25) = 0)
(37 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_m WHERE prt2_m.b % 25 = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_m t1 WHERE t1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2_m t2 WHERE t2.b % 25 = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

--
-- tests for list partitioned tables.
--
CREATE TABLE plt1 (a int, b int, c text) PARTITION BY LIST(c);
CREATE TABLE plt1_p1 PARTITION OF plt1 FOR VALUES IN ('0000', '0003', '0004', '0010');
CREATE TABLE plt1_p2 PARTITION OF plt1 FOR VALUES IN ('0001', '0005', '0002', '0009');
CREATE TABLE plt1_p3 PARTITION OF plt1 FOR VALUES IN ('0006', '0007', '0008', '0011');
INSERT INTO plt1 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE plt1;
ANALYZE plt1_p1;
ANALYZE plt1_p2;
ANALYZE plt1_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uplt1 AS SELECT * FROM plt1;
CREATE TABLE plt2 (a int, b int, c text) PARTITION BY LIST(c);
CREATE TABLE plt2_p1 PARTITION OF plt2 FOR VALUES IN ('0000', '0003', '0004', '0010');
CREATE TABLE plt2_p2 PARTITION OF plt2 FOR VALUES IN ('0001', '0005', '0002', '0009');
CREATE TABLE plt2_p3 PARTITION OF plt2 FOR VALUES IN ('0006', '0007', '0008', '0011');
INSERT INTO plt2 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i;
ANALYZE plt2;
ANALYZE plt2_p1;
ANALYZE plt2_p2;
ANALYZE plt2_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uplt2 AS SELECT * FROM plt2;
--
-- list partitioned by expression
--
CREATE TABLE plt1_e (a int, b int, c text) PARTITION BY LIST(ltrim(c, 'A'));
CREATE TABLE plt1_e_p1 PARTITION OF plt1_e FOR VALUES IN ('0000', '0003', '0004', '0010');
CREATE TABLE plt1_e_p2 PARTITION OF plt1_e FOR VALUES IN ('0001', '0005', '0002', '0009');
CREATE TABLE plt1_e_p3 PARTITION OF plt1_e FOR VALUES IN ('0006', '0007', '0008', '0011');
INSERT INTO plt1_e SELECT i, i, 'A' || to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE plt1_e;
ANALYZE plt1_e_p1;
ANALYZE plt1_e_p2;
ANALYZE plt1_e_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uplt1_e AS SELECT * FROM plt1_e;
--
-- N-way join
--
EXPLAIN (VERBOSE, COSTS OFF)
SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 t1, plt2 t2, plt1_e t3 WHERE t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Sort
   Output: (avg(t1.a)), (avg(t2.b)), (avg((t3.a + t3.b))), t1.c, t2.c, t3.c
   Sort Key: t1.c, t3.c
   ->  HashAggregate
         Output: avg(t1.a), avg(t2.b), avg((t3.a + t3.b)), t1.c, t2.c, t3.c
         Group Key: t1.c, t2.c, t3.c
         ->  Result
               Output: t1.c, t2.c, t3.c, t1.a, t2.b, t3.a, t3.b
               ->  Append
                     ->  Hash Join
                           Output: t1.a, t1.c, t2.b, t2.c, t3.a, t3.b, t3.c
                           Hash Cond: (t1.c = t2.c)
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
                           ->  Hash
                                 Output: t2.b, t2.c, t3.a, t3.b, t3.c
                                 ->  Hash Join
                                       Output: t2.b, t2.c, t3.a, t3.b, t3.c
                                       Hash Cond: (t2.c = ltrim(t3.c, 'A'::text))
                                       ->  Seq Scan on pwj_extra.plt2_p1 t2
                                             Output: t2.b, t2.c
                                       ->  Hash
                                             Output: t3.a, t3.b, t3.c
                                             ->  Seq Scan on pwj_extra.plt1_e_p1 t3
                                                   Output: t3.a, t3.b, t3.c
                     ->  Hash Join
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                           Hash Cond: (t1_1.c = t2_1.c)
                           ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                 Output: t1_1.a, t1_1.c
                           ->  Hash
                                 Output: t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                                 ->  Hash Join
                                       Output: t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                                       Hash Cond: (t2_1.c = ltrim(t3_1.c, 'A'::text))
                                       ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                             Output: t2_1.b, t2_1.c
                                       ->  Hash
                                             Output: t3_1.a, t3_1.b, t3_1.c
                                             ->  Seq Scan on pwj_extra.plt1_e_p2 t3_1
                                                   Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash Join
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                           Hash Cond: (t1_2.c = t2_2.c)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
                           ->  Hash
                                 Output: t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                                 ->  Hash Join
                                       Output: t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                                       Hash Cond: (t2_2.c = ltrim(t3_2.c, 'A'::text))
                                       ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                             Output: t2_2.b, t2_2.c
                                       ->  Hash
                                             Output: t3_2.a, t3_2.b, t3_2.c
                                             ->  Seq Scan on pwj_extra.plt1_e_p3 t3_2
                                                   Output: t3_2.a, t3_2.b, t3_2.c
(57 rows)

SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 t1, plt2 t2, plt1_e t3 WHERE t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
         avg          |         avg          |          avg          |  c   |  c   |   c   
----------------------+----------------------+-----------------------+------+------+-------
  24.0000000000000000 |  24.0000000000000000 |   48.0000000000000000 | 0000 | 0000 | A0000
  74.0000000000000000 |  75.0000000000000000 |  148.0000000000000000 | 0001 | 0001 | A0001
 124.0000000000000000 | 124.5000000000000000 |  248.0000000000000000 | 0002 | 0002 | A0002
 174.0000000000000000 | 174.0000000000000000 |  348.0000000000000000 | 0003 | 0003 | A0003
 224.0000000000000000 | 225.0000000000000000 |  448.0000000000000000 | 0004 | 0004 | A0004
 274.0000000000000000 | 274.5000000000000000 |  548.0000000000000000 | 0005 | 0005 | A0005
 324.0000000000000000 | 324.0000000000000000 |  648.0000000000000000 | 0006 | 0006 | A0006
 374.0000000000000000 | 375.0000000000000000 |  748.0000000000000000 | 0007 | 0007 | A0007
 424.0000000000000000 | 424.5000000000000000 |  848.0000000000000000 | 0008 | 0008 | A0008
 474.0000000000000000 | 474.0000000000000000 |  948.0000000000000000 | 0009 | 0009 | A0009
 524.0000000000000000 | 525.0000000000000000 | 1048.0000000000000000 | 0010 | 0010 | A0010
 574.0000000000000000 | 574.5000000000000000 | 1148.0000000000000000 | 0011 | 0011 | A0011
(12 rows)

SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM uplt1 t1, uplt2 t2, uplt1_e t3 WHERE t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
         avg          |         avg          |          avg          |  c   |  c   |   c   
----------------------+----------------------+-----------------------+------+------+-------
  24.0000000000000000 |  24.0000000000000000 |   48.0000000000000000 | 0000 | 0000 | A0000
  74.0000000000000000 |  75.0000000000000000 |  148.0000000000000000 | 0001 | 0001 | A0001
 124.0000000000000000 | 124.5000000000000000 |  248.0000000000000000 | 0002 | 0002 | A0002
 174.0000000000000000 | 174.0000000000000000 |  348.0000000000000000 | 0003 | 0003 | A0003
 224.0000000000000000 | 225.0000000000000000 |  448.0000000000000000 | 0004 | 0004 | A0004
 274.0000000000000000 | 274.5000000000000000 |  548.0000000000000000 | 0005 | 0005 | A0005
 324.0000000000000000 | 324.0000000000000000 |  648.0000000000000000 | 0006 | 0006 | A0006
 374.0000000000000000 | 375.0000000000000000 |  748.0000000000000000 | 0007 | 0007 | A0007
 424.0000000000000000 | 424.5000000000000000 |  848.0000000000000000 | 0008 | 0008 | A0008
 474.0000000000000000 | 474.0000000000000000 |  948.0000000000000000 | 0009 | 0009 | A0009
 524.0000000000000000 | 525.0000000000000000 | 1048.0000000000000000 | 0010 | 0010 | A0010
 574.0000000000000000 | 574.5000000000000000 | 1148.0000000000000000 | 0011 | 0011 | A0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) LEFT JOIN plt1_e t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t1.a, t1.c, t2.b, t2.c, t3.a, t3.b, t3.c
                     Hash Cond: ((t3.a = t1.a) AND (ltrim(t3.c, 'A'::text) = t1.c))
                     ->  Seq Scan on pwj_extra.plt1_e_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t1.a, t1.c, t2.b, t2.c
                           ->  Hash Right Join
                                 Output: t1.a, t1.c, t2.b, t2.c
                                 Hash Cond: ((t2.b = t1.a) AND (t2.c = t1.c))
                                 ->  Seq Scan on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t1.a, t1.c
                                       ->  Seq Scan on pwj_extra.plt1_p1 t1
                                             Output: t1.a, t1.c
                                             Filter: ((t1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                     Hash Cond: ((t3_1.a = t1_1.a) AND (ltrim(t3_1.c, 'A'::text) = t1_1.c))
                     ->  Seq Scan on pwj_extra.plt1_e_p2 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                           ->  Hash Right Join
                                 Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                                 Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.c = t1_1.c))
                                 ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t1_1.a, t1_1.c
                                       ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                             Output: t1_1.a, t1_1.c
                                             Filter: ((t1_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                     Hash Cond: ((t3_2.a = t1_2.a) AND (ltrim(t3_2.c, 'A'::text) = t1_2.c))
                     ->  Seq Scan on pwj_extra.plt1_e_p3 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                           ->  Hash Right Join
                                 Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                                 Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.c = t1_2.c))
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t1_2.a, t1_2.c
                                       ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                             Output: t1_2.a, t1_2.c
                                             Filter: ((t1_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) LEFT JOIN plt1_e t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uplt1 t1 LEFT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c) LEFT JOIN uplt1_e t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) LEFT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t1.a, t1.c, t2.b, t2.c, t3.a, t3.b, t3.c
                     Hash Cond: ((t3.a = t2.b) AND (ltrim(t3.c, 'A'::text) = t2.c))
                     ->  Seq Scan on pwj_extra.plt1_e_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t1.a, t1.c, t2.b, t2.c
                           ->  Hash Right Join
                                 Output: t1.a, t1.c, t2.b, t2.c
                                 Hash Cond: ((t2.b = t1.a) AND (t2.c = t1.c))
                                 ->  Seq Scan on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t1.a, t1.c
                                       ->  Seq Scan on pwj_extra.plt1_p1 t1
                                             Output: t1.a, t1.c
                                             Filter: ((t1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
                     Hash Cond: ((t3_1.a = t2_1.b) AND (ltrim(t3_1.c, 'A'::text) = t2_1.c))
                     ->  Seq Scan on pwj_extra.plt1_e_p2 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                           ->  Hash Right Join
                                 Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                                 Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.c = t1_1.c))
                                 ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t1_1.a, t1_1.c
                                       ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                             Output: t1_1.a, t1_1.c
                                             Filter: ((t1_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
                     Hash Cond: ((t3_2.a = t2_2.b) AND (ltrim(t3_2.c, 'A'::text) = t2_2.c))
                     ->  Seq Scan on pwj_extra.plt1_e_p3 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                           ->  Hash Right Join
                                 Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
                                 Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.c = t1_2.c))
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t1_2.a, t1_2.c
                                       ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                             Output: t1_2.a, t1_2.c
                                             Filter: ((t1_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) LEFT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |          | 
 100 | 0002 |     |      |          | 
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |          | 
 250 | 0005 |     |      |          | 
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |          | 
 400 | 0008 |     |      |          | 
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |          | 
 550 | 0011 |     |      |          | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uplt1 t1 LEFT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c) LEFT JOIN uplt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |          | 
 100 | 0002 |     |      |          | 
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |          | 
 250 | 0005 |     |      |          | 
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |          | 
 400 | 0008 |     |      |          | 
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |          | 
 550 | 0011 |     |      |          | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t3.a, t3.b, t3.c, t1.a, t1.c, t2.b, t2.c
                     Hash Cond: ((t2.b = t1.a) AND (t2.c = t1.c))
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                     ->  Hash
                           Output: t3.a, t3.b, t3.c, t1.a, t1.c
                           ->  Hash Right Join
                                 Output: t3.a, t3.b, t3.c, t1.a, t1.c
                                 Hash Cond: ((t1.c = ltrim(t3.c, 'A'::text)) AND (t1.a = t3.a))
                                 ->  Seq Scan on pwj_extra.plt1_p1 t1
                                       Output: t1.a, t1.c
                                 ->  Hash
                                       Output: t3.a, t3.b, t3.c
                                       ->  Seq Scan on pwj_extra.plt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c
                                             Filter: ((t3.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c, t2_1.b, t2_1.c
                     Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.c = t1_1.c))
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                     ->  Hash
                           Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                           ->  Hash Right Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t1_1.a, t1_1.c
                                 Hash Cond: ((t1_1.c = ltrim(t3_1.c, 'A'::text)) AND (t1_1.a = t3_1.a))
                                 ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                       Output: t1_1.a, t1_1.c
                                 ->  Hash
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       ->  Seq Scan on pwj_extra.plt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c
                                             Filter: ((t3_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c, t2_2.b, t2_2.c
                     Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.c = t1_2.c))
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                     ->  Hash
                           Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                           ->  Hash Right Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t1_2.a, t1_2.c
                                 Hash Cond: ((t1_2.c = ltrim(t3_2.c, 'A'::text)) AND (t1_2.a = t3_2.a))
                                 ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                       Output: t1_2.a, t1_2.c
                                 ->  Hash
                                       Output: t3_2.a, t3_2.b, t3_2.c
                                       ->  Seq Scan on pwj_extra.plt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c
                                             Filter: ((t3_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uplt1 t1 LEFT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN uplt1_e t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Hash Right Join
                     Output: t3.a, t3.b, t3.c, t2.b, t2.c, t1.a, t1.c
                     Hash Cond: ((t1.a = t2.b) AND (t1.c = t2.c))
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                     ->  Hash
                           Output: t3.a, t3.b, t3.c, t2.b, t2.c
                           ->  Hash Right Join
                                 Output: t3.a, t3.b, t3.c, t2.b, t2.c
                                 Hash Cond: ((t2.b = t3.a) AND (t2.c = ltrim(t3.c, 'A'::text)))
                                 ->  Seq Scan on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                                 ->  Hash
                                       Output: t3.a, t3.b, t3.c
                                       ->  Seq Scan on pwj_extra.plt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c
                                             Filter: ((t3.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: ((t1_1.a = t2_1.b) AND (t1_1.c = t2_1.c))
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                     ->  Hash
                           Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                           ->  Hash Right Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                                 Hash Cond: ((t2_1.b = t3_1.a) AND (t2_1.c = ltrim(t3_1.c, 'A'::text)))
                                 ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                 ->  Hash
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       ->  Seq Scan on pwj_extra.plt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c
                                             Filter: ((t3_1.a % 25) = 0)
               ->  Hash Right Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: ((t1_2.a = t2_2.b) AND (t1_2.c = t2_2.c))
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                     ->  Hash
                           Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                           ->  Hash Right Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                                 Hash Cond: ((t2_2.b = t3_2.a) AND (t2_2.c = ltrim(t3_2.c, 'A'::text)))
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                 ->  Hash
                                       Output: t3_2.a, t3_2.b, t3_2.c
                                       ->  Seq Scan on pwj_extra.plt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c
                                             Filter: ((t3_2.a % 25) = 0)
(57 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
 150 | 0003 | 150 | 0003 |      300 | A0003
 300 | 0006 | 300 | 0006 |      600 | A0006
 450 | 0009 | 450 | 0009 |      900 | A0009
     |      |     |      |      100 | A0001
     |      |     |      |      200 | A0002
     |      |     |      |      400 | A0004
     |      |     |      |      500 | A0005
     |      |     |      |      700 | A0007
     |      |     |      |      800 | A0008
     |      |     |      |     1000 | A0010
     |      |     |      |     1100 | A0011
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uplt1 t1 RIGHT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN uplt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
 150 | 0003 | 150 | 0003 |      300 | A0003
 300 | 0006 | 300 | 0006 |      600 | A0006
 450 | 0009 | 450 | 0009 |      900 | A0009
     |      |     |      |      100 | A0001
     |      |     |      |      200 | A0002
     |      |     |      |      400 | A0004
     |      |     |      |      500 | A0005
     |      |     |      |      700 | A0007
     |      |     |      |      800 | A0008
     |      |     |      |     1000 | A0010
     |      |     |      |     1100 | A0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, ((plt1_e_p1.a + plt1_e_p1.b)), plt1_e_p1.c
   Sort Key: plt1_p1.a, plt2_p1.b, ((plt1_e_p1.a + plt1_e_p1.b))
   ->  Result
         Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, (plt1_e_p1.a + plt1_e_p1.b), plt1_e_p1.c
         ->  Append
               ->  Hash Full Join
                     Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c
                     Hash Cond: ((plt1_p1.a = plt1_e_p1.a) AND (plt1_p1.c = ltrim(plt1_e_p1.c, 'A'::text)))
                     ->  Hash Full Join
                           Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
                           Hash Cond: ((plt1_p1.a = plt2_p1.b) AND (plt1_p1.c = plt2_p1.c))
                           ->  Seq Scan on pwj_extra.plt1_p1
                                 Output: plt1_p1.a, plt1_p1.c
                                 Filter: ((plt1_p1.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p1.b, plt2_p1.c
                                 ->  Seq Scan on pwj_extra.plt2_p1
                                       Output: plt2_p1.b, plt2_p1.c
                                       Filter: ((plt2_p1.b % 25) = 0)
                     ->  Hash
                           Output: plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c
                           ->  Seq Scan on pwj_extra.plt1_e_p1
                                 Output: plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c
                                 Filter: ((plt1_e_p1.a % 25) = 0)
               ->  Hash Full Join
                     Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c, plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c
                     Hash Cond: ((plt1_p2.a = plt1_e_p2.a) AND (plt1_p2.c = ltrim(plt1_e_p2.c, 'A'::text)))
                     ->  Hash Full Join
                           Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
                           Hash Cond: ((plt1_p2.a = plt2_p2.b) AND (plt1_p2.c = plt2_p2.c))
                           ->  Seq Scan on pwj_extra.plt1_p2
                                 Output: plt1_p2.a, plt1_p2.c
                                 Filter: ((plt1_p2.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p2.b, plt2_p2.c
                                 ->  Seq Scan on pwj_extra.plt2_p2
                                       Output: plt2_p2.b, plt2_p2.c
                                       Filter: ((plt2_p2.b % 25) = 0)
                     ->  Hash
                           Output: plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c
                           ->  Seq Scan on pwj_extra.plt1_e_p2
                                 Output: plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c
                                 Filter: ((plt1_e_p2.a % 25) = 0)
               ->  Hash Full Join
                     Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c, plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c
                     Hash Cond: ((plt1_p3.a = plt1_e_p3.a) AND (plt1_p3.c = ltrim(plt1_e_p3.c, 'A'::text)))
                     ->  Hash Full Join
                           Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
                           Hash Cond: ((plt1_p3.a = plt2_p3.b) AND (plt1_p3.c = plt2_p3.c))
                           ->  Seq Scan on pwj_extra.plt1_p3
                                 Output: plt1_p3.a, plt1_p3.c
                                 Filter: ((plt1_p3.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p3.b, plt2_p3.c
                                 ->  Seq Scan on pwj_extra.plt2_p3
                                       Output: plt2_p3.b, plt2_p3.c
                                       Filter: ((plt2_p3.b % 25) = 0)
                     ->  Hash
                           Output: plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c
                           ->  Seq Scan on pwj_extra.plt1_e_p3
                                 Output: plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c
                                 Filter: ((plt1_e_p3.a % 25) = 0)
(63 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
     |      |  75 | 0001 |          | 
     |      | 225 | 0004 |          | 
     |      | 375 | 0007 |          | 
     |      | 525 | 0010 |          | 
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM uplt1 WHERE uplt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2 WHERE uplt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM uplt1_e WHERE uplt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
     |      |  75 | 0001 |          | 
     |      | 225 | 0004 |          | 
     |      | 375 | 0007 |          | 
     |      | 525 | 0010 |          | 
(16 rows)

-- Semi-join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1, plt1_e t2 WHERE t1.c = ltrim(t2.c, 'A')) AND t1.a % 25 = 0 ORDER BY t1.a;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: (t1.c = t1_3.c)
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_3.c, t2.c
                     Hash Cond: (t1_3.c = ltrim(t2.c, 'A'::text))
                     ->  Seq Scan on pwj_extra.plt2_p1 t1_3
                           Output: t1_3.c
                     ->  Hash
                           Output: t2.c
                           ->  Seq Scan on pwj_extra.plt1_e_p1 t2
                                 Output: t2.c
         ->  Nested Loop Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Join Filter: (t1_1.c = t1_4.c)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_4.c, t2_1.c
                     Hash Cond: (t1_4.c = ltrim(t2_1.c, 'A'::text))
                     ->  Seq Scan on pwj_extra.plt2_p2 t1_4
                           Output: t1_4.c
                     ->  Hash
                           Output: t2_1.c
                           ->  Seq Scan on pwj_extra.plt1_e_p2 t2_1
                                 Output: t2_1.c
         ->  Nested Loop Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Join Filter: (t1_2.c = t1_5.c)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Hash Join
                     Output: t1_5.c, t2_2.c
                     Hash Cond: (t1_5.c = ltrim(t2_2.c, 'A'::text))
                     ->  Seq Scan on pwj_extra.plt2_p3 t1_5
                           Output: t1_5.c
                     ->  Hash
                           Output: t2_2.c
                           ->  Seq Scan on pwj_extra.plt1_e_p3 t2_2
                                 Output: t2_2.c
(49 rows)

SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1, plt1_e t2 WHERE t1.c = ltrim(t2.c, 'A')) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

SELECT t1.* FROM uplt1 t1 WHERE t1.c IN (SELECT t1.c FROM uplt2 t1, uplt1_e t2 WHERE t1.c = ltrim(t2.c, 'A')) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM plt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: (t1.c = t1_3.c)
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Hash Semi Join
                     Output: t1_3.c, t1_6.c
                     Hash Cond: (t1_3.c = ltrim(t1_6.c, 'A'::text))
                     ->  Seq Scan on pwj_extra.plt2_p1 t1_3
                           Output: t1_3.c
                     ->  Hash
                           Output: t1_6.c
                           ->  Seq Scan on pwj_extra.plt1_e_p1 t1_6
                                 Output: t1_6.c
                                 Filter: ((t1_6.a % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Join Filter: (t1_1.c = t1_4.c)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Hash Semi Join
                     Output: t1_4.c, t1_7.c
                     Hash Cond: (t1_4.c = ltrim(t1_7.c, 'A'::text))
                     ->  Seq Scan on pwj_extra.plt2_p2 t1_4
                           Output: t1_4.c
                     ->  Hash
                           Output: t1_7.c
                           ->  Seq Scan on pwj_extra.plt1_e_p2 t1_7
                                 Output: t1_7.c
                                 Filter: ((t1_7.a % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Join Filter: (t1_2.c = t1_5.c)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Hash Semi Join
                     Output: t1_5.c, t1_8.c
                     Hash Cond: (t1_5.c = ltrim(t1_8.c, 'A'::text))
                     ->  Seq Scan on pwj_extra.plt2_p3 t1_5
                           Output: t1_5.c
                     ->  Hash
                           Output: t1_8.c
                           ->  Seq Scan on pwj_extra.plt1_e_p3 t1_8
                                 Output: t1_8.c
                                 Filter: ((t1_8.a % 25) = 0)
(52 rows)

SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM plt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

SELECT t1.* FROM uplt1 t1 WHERE t1.c IN (SELECT t1.c FROM uplt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM uplt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

--
-- negative testcases
--
-- joins where one of the relations is proven empty
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a = 1 AND t1.a = 2;
            QUERY PLAN            
----------------------------------
 Result
   Output: t1.a, t1.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 LEFT JOIN prt2 t2 ON t1.a = t2.b;
              QUERY PLAN              
--------------------------------------
 Result
   Output: prt1.a, prt1.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                      QUERY PLAN                      
------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: (t2.b = a)
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b, t2.c
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
                     Filter: ((t2_2.a % 25) = 0)
         ->  Hash
               Output: a, c
               ->  Result
                     Output: a, c
                     One-Time Filter: false
(21 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 FULL JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                      QUERY PLAN                      
------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: (t2.b = a)
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b, t2.c
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
                     Filter: ((t2_2.a % 25) = 0)
         ->  Hash
               Output: a, c
               ->  Result
                     Output: a, c
                     One-Time Filter: false
(21 rows)

CREATE TABLE prt1_n (a int, b int, c varchar) PARTITION BY RANGE(c);
CREATE TABLE prt1_n_p1 PARTITION OF prt1_n FOR VALUES FROM ('0000') TO ('0250');
CREATE TABLE prt1_n_p2 PARTITION OF prt1_n FOR VALUES FROM ('0250') TO ('0500');
INSERT INTO prt1_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 499, 2) i;
ANALYZE prt1_n;
ANALYZE prt1_n_p1;
ANALYZE prt1_n_p2;
CREATE TABLE prt2_n (a int, b int, c text) PARTITION BY LIST(c);
CREATE TABLE prt2_n_p1 PARTITION OF prt2_n FOR VALUES IN ('0000', '0003', '0004', '0010', '0006', '0007');
CREATE TABLE prt2_n_p2 PARTITION OF prt2_n FOR VALUES IN ('0001', '0005', '0002', '0009', '0008', '0011');
INSERT INTO prt2_n SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt2_n;
ANALYZE prt2_n_p1;
ANALYZE prt2_n_p2;
CREATE TABLE prt3_n (a int, b int, c text) PARTITION BY LIST(c);
CREATE TABLE prt3_n_p1 PARTITION OF prt3_n FOR VALUES IN ('0000', '0004', '0006', '0007');
CREATE TABLE prt3_n_p2 PARTITION OF prt3_n FOR VALUES IN ('0001', '0002', '0008', '0010');
CREATE TABLE prt3_n_p3 PARTITION OF prt3_n FOR VALUES IN ('0003', '0005', '0009', '0011');
INSERT INTO prt2_n SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt3_n;
ANALYZE prt3_n_p1;
ANALYZE prt3_n_p2;
ANALYZE prt3_n_p3;
CREATE TABLE prt4_n (a int, b int, c text) PARTITION BY RANGE(a);
CREATE TABLE prt4_n_p1 PARTITION OF prt4_n FOR VALUES FROM (0) TO (300);
CREATE TABLE prt4_n_p2 PARTITION OF prt4_n FOR VALUES FROM (300) TO (500);
CREATE TABLE prt4_n_p3 PARTITION OF prt4_n FOR VALUES FROM (500) TO (600);
INSERT INTO prt4_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt4_n;
ANALYZE prt4_n_p1;
ANALYZE prt4_n_p2;
ANALYZE prt4_n_p3;
-- partition-wise join can not be applied if the partition ranges differ
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt4_n t2 WHERE t1.a = t2.a;
                  QUERY PLAN                  
----------------------------------------------
 Hash Join
   Hash Cond: (t1.a = t2.a)
   ->  Append
         ->  Seq Scan on prt1_p1 t1
         ->  Seq Scan on prt1_p2 t1_1
         ->  Seq Scan on prt1_p3 t1_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt4_n_p1 t2
               ->  Seq Scan on prt4_n_p2 t2_1
               ->  Seq Scan on prt4_n_p3 t2_2
(11 rows)

EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 FULL JOIN prt4_n t2 ON t1.a = t2.a;
                  QUERY PLAN                  
----------------------------------------------
 Hash Full Join
   Hash Cond: (t1.a = t2.a)
   ->  Append
         ->  Seq Scan on prt1_p1 t1
         ->  Seq Scan on prt1_p2 t1_1
         ->  Seq Scan on prt1_p3 t1_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt4_n_p1 t2
               ->  Seq Scan on prt4_n_p2 t2_1
               ->  Seq Scan on prt4_n_p3 t2_2
(11 rows)

-- partition-wise join can not be applied if there are no equi-join conditions
-- between partition keys
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 LEFT JOIN prt2 t2 ON (t1.a < t2.b);
                       QUERY PLAN                        
---------------------------------------------------------
 Nested Loop Left Join
   ->  Append
         ->  Seq Scan on prt1_p1 t1
         ->  Seq Scan on prt1_p2 t1_1
         ->  Seq Scan on prt1_p3 t1_2
   ->  Append
         ->  Index Scan using iprt2_p1_b on prt2_p1 t2
               Index Cond: (t1.a < b)
         ->  Index Scan using iprt2_p2_b on prt2_p2 t2_1
               Index Cond: (t1.a < b)
         ->  Index Scan using iprt2_p3_b on prt2_p3 t2_2
               Index Cond: (t1.a < b)
(12 rows)

-- equi-join with join condition on partial keys does not qualify for
-- partition-wise join
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1, prt2_m t2 WHERE t1.a = (t2.b + t2.a)/2 AND t1.a % 25 = 0;
                  QUERY PLAN                  
----------------------------------------------
 Hash Join
   Hash Cond: (((t2.b + t2.a) / 2) = t1.a)
   ->  Append
         ->  Seq Scan on prt2_m_p1 t2
         ->  Seq Scan on prt2_m_p2 t2_1
         ->  Seq Scan on prt2_m_p3 t2_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_m_p1 t1
                     Filter: ((a % 25) = 0)
               ->  Seq Scan on prt1_m_p2 t1_1
                     Filter: ((a % 25) = 0)
               ->  Seq Scan on prt1_m_p3 t1_2
                     Filter: ((a % 25) = 0)
(14 rows)

-- equi-join between out-of-order partition key columns does not qualify for
-- partition-wise join
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.a = t2.b WHERE t1.a % 25 = 0;
                  QUERY PLAN                  
----------------------------------------------
 Hash Right Join
   Hash Cond: (t2.b = t1.a)
   ->  Append
         ->  Seq Scan on prt2_m_p1 t2
         ->  Seq Scan on prt2_m_p2 t2_1
         ->  Seq Scan on prt2_m_p3 t2_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_m_p1 t1
                     Filter: ((a % 25) = 0)
               ->  Seq Scan on prt1_m_p2 t1_1
                     Filter: ((a % 25) = 0)
               ->  Seq Scan on prt1_m_p3 t1_2
                     Filter: ((a % 25) = 0)
(14 rows)

-- equi-join between non-key columns does not qualify for partition-wise join
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.c = t2.c WHERE t1.a % 25 = 0;
                  QUERY PLAN                  
----------------------------------------------
 Hash Right Join
   Hash Cond: ((t2.c)::text = (t1.c)::text)
   ->  Append
         ->  Seq Scan on prt2_m_p1 t2
         ->  Seq Scan on prt2_m_p2 t2_1
         ->  Seq Scan on prt2_m_p3 t2_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_m_p1 t1
                     Filter: ((a % 25) = 0)
               ->  Seq Scan on prt1_m_p2 t1_1
                     Filter: ((a % 25) = 0)
               ->  Seq Scan on prt1_m_p3 t1_2
                     Filter: ((a % 25) = 0)
(14 rows)

-- partition-wise join can not be applied for a join between list and range
-- partitioned table
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1, prt2_n t2 WHERE t1.c = t2.c;
                  QUERY PLAN                  
----------------------------------------------
 Hash Join
   Hash Cond: (t2.c = (t1.c)::text)
   ->  Append
         ->  Seq Scan on prt2_n_p1 t2
         ->  Seq Scan on prt2_n_p2 t2_1
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_n_p1 t1
               ->  Seq Scan on prt1_n_p2 t1_1
(9 rows)

EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 LEFT JOIN prt2_n t2 ON (t1.c = t2.c);
                  QUERY PLAN                  
----------------------------------------------
 Hash Right Join
   Hash Cond: (t2.c = (t1.c)::text)
   ->  Append
         ->  Seq Scan on prt2_n_p1 t2
         ->  Seq Scan on prt2_n_p2 t2_1
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_n_p1 t1
               ->  Seq Scan on prt1_n_p2 t1_1
(9 rows)

-- partition-wise join can not be applied between tables with different
-- partition lists
EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 RIGHT JOIN prt1 t2 ON (t1.c = t2.c);
                  QUERY PLAN                  
----------------------------------------------
 Hash Left Join
   Hash Cond: ((t2.c)::text = (t1.c)::text)
   ->  Append
         ->  Seq Scan on prt1_p1 t2
         ->  Seq Scan on prt1_p2 t2_1
         ->  Seq Scan on prt1_p3 t2_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_n_p1 t1
               ->  Seq Scan on prt1_n_p2 t1_1
(10 rows)

EXPLAIN (COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 FULL JOIN prt1 t2 ON (t1.c = t2.c);
                  QUERY PLAN                  
----------------------------------------------
 Hash Full Join
   Hash Cond: ((t2.c)::text = (t1.c)::text)
   ->  Append
         ->  Seq Scan on prt1_p1 t2
         ->  Seq Scan on prt1_p2 t2_1
         ->  Seq Scan on prt1_p3 t2_2
   ->  Hash
         ->  Append
               ->  Seq Scan on prt1_n_p1 t1
               ->  Seq Scan on prt1_n_p2 t1_1
(10 rows)

--
-- multi-leveled partitions
--
CREATE TABLE prt1_l (a int, b int, c varchar) PARTITION BY RANGE(a);
CREATE TABLE prt1_l_p1 PARTITION OF prt1_l FOR VALUES FROM (0) TO (250);
CREATE TABLE prt1_l_p2 PARTITION OF prt1_l FOR VALUES FROM (250) TO (500) PARTITION BY RANGE (c);
CREATE TABLE prt1_l_p2_p1 PARTITION OF prt1_l_p2 FOR VALUES FROM ('0250') TO ('0400');
CREATE TABLE prt1_l_p2_p2 PARTITION OF prt1_l_p2 FOR VALUES FROM ('0400') TO ('0500');
CREATE TABLE prt1_l_p3 PARTITION OF prt1_l FOR VALUES FROM (500) TO (600) PARTITION BY RANGE (b);
CREATE TABLE prt1_l_p3_p1 PARTITION OF prt1_l_p3 FOR VALUES FROM (500) TO (550);
CREATE TABLE prt1_l_p3_p2 PARTITION OF prt1_l_p3 FOR VALUES FROM (550) TO (600);
INSERT INTO prt1_l SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE prt1_l;
ANALYZE prt1_l_p1;
ANALYZE prt1_l_p2;
ANALYZE prt1_l_p2_p1;
ANALYZE prt1_l_p2_p2;
ANALYZE prt1_l_p3;
ANALYZE prt1_l_p3_p1;
ANALYZE prt1_l_p3_p2;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt1_l AS SELECT * FROM prt1_l;
CREATE TABLE prt2_l (a int, b int, c varchar) PARTITION BY RANGE(b);
CREATE TABLE prt2_l_p1 PARTITION OF prt2_l FOR VALUES FROM (0) TO (250);
CREATE TABLE prt2_l_p2 PARTITION OF prt2_l FOR VALUES FROM (250) TO (500) PARTITION BY RANGE (c);
CREATE TABLE prt2_l_p2_p1 PARTITION OF prt2_l_p2 FOR VALUES FROM ('0250') TO ('0400');
CREATE TABLE prt2_l_p2_p2 PARTITION OF prt2_l_p2 FOR VALUES FROM ('0400') TO ('0500');
CREATE TABLE prt2_l_p3 PARTITION OF prt2_l FOR VALUES FROM (500) TO (600) PARTITION BY RANGE (a);
CREATE TABLE prt2_l_p3_p1 PARTITION OF prt2_l_p3 FOR VALUES FROM (500) TO (525);
CREATE TABLE prt2_l_p3_p2 PARTITION OF prt2_l_p3 FOR VALUES FROM (525) TO (600);
INSERT INTO prt2_l SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 3) i;
ANALYZE prt2_l;
ANALYZE prt2_l_p1;
ANALYZE prt2_l_p2;
ANALYZE prt2_l_p2_p1;
ANALYZE prt2_l_p2_p2;
ANALYZE prt2_l_p3;
ANALYZE prt2_l_p3_p1;
ANALYZE prt2_l_p3_p2;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uprt2_l AS SELECT * FROM prt2_l;
-- inner join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.c = t2.c AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                              QUERY PLAN                              
----------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.b = t1.a) AND ((t2.c)::text = (t1.c)::text))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.c
         ->  Hash
               Output: t1.a, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(35 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.c = t2.c AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_l t1, uprt2_l t2 WHERE t1.a = t2.b AND t1.c = t2.c AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

-- left join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: ((t2.b = t1.a) AND ((t2.c)::text = (t1.c)::text))
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.c
               ->  Hash
                     Output: t1.a, t1.c
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: ((t2_1.b = t1_1.a) AND ((t2_1.c)::text = (t1_1.c)::text))
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Hash
                     Output: t1_1.a, t1_1.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: ((t2_2.b = t1_2.a) AND ((t2_2.c)::text = (t1_2.c)::text))
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.c
               ->  Hash
                     Output: t1_2.a, t1_2.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_3.a, t1_3.c, t2_3.b, t2_3.c
               Hash Cond: ((t2_3.b = t1_3.a) AND ((t2_3.c)::text = (t1_3.c)::text))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                           Output: t2_3.b, t2_3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                           Output: t2_4.b, t2_4.c
               ->  Hash
                     Output: t1_3.a, t1_3.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
(51 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_l t1 LEFT JOIN uprt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

-- right join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.c
                     ->  Hash
                           Output: t2.b, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: ((t1_1.a = t2_1.b) AND ((t1_1.c)::text = (t2_1.c)::text))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: ((t1_2.a = t2_2.b) AND ((t1_2.c)::text = (t2_2.c)::text))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t2_3.c, t1_3.a, t1_3.c
                     Hash Cond: ((t1_3.a = t2_3.b) AND ((t1_3.c)::text = (t2_3.c)::text))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
(53 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_l t1 RIGHT JOIN uprt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

-- full join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE prt2_l.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_l_p1.a, prt1_l_p1.c, prt2_l_p1.b, prt2_l_p1.c
   Sort Key: prt1_l_p1.a, prt2_l_p1.b
   ->  Append
         ->  Hash Full Join
               Output: prt1_l_p1.a, prt1_l_p1.c, prt2_l_p1.b, prt2_l_p1.c
               Hash Cond: ((prt1_l_p1.a = prt2_l_p1.b) AND ((prt1_l_p1.c)::text = (prt2_l_p1.c)::text))
               ->  Seq Scan on pwj_extra.prt1_l_p1
                     Output: prt1_l_p1.a, prt1_l_p1.c
                     Filter: ((prt1_l_p1.a % 25) = 0)
               ->  Hash
                     Output: prt2_l_p1.b, prt2_l_p1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p1
                           Output: prt2_l_p1.b, prt2_l_p1.c
                           Filter: ((prt2_l_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt2_l_p2_p1.b, prt2_l_p2_p1.c
               Hash Cond: ((prt1_l_p2_p1.a = prt2_l_p2_p1.b) AND ((prt1_l_p2_p1.c)::text = (prt2_l_p2_p1.c)::text))
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1
                     Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c
                     Filter: ((prt1_l_p2_p1.a % 25) = 0)
               ->  Hash
                     Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                           Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c
                           Filter: ((prt2_l_p2_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c, prt2_l_p2_p2.b, prt2_l_p2_p2.c
               Hash Cond: ((prt1_l_p2_p2.a = prt2_l_p2_p2.b) AND ((prt1_l_p2_p2.c)::text = (prt2_l_p2_p2.c)::text))
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2
                     Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c
                     Filter: ((prt1_l_p2_p2.a % 25) = 0)
               ->  Hash
                     Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                           Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c
                           Filter: ((prt2_l_p2_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_l_p3_p1.a, prt1_l_p3_p1.c, prt2_l_p3_p1.b, prt2_l_p3_p1.c
               Hash Cond: ((prt1_l_p3_p1.a = prt2_l_p3_p1.b) AND ((prt1_l_p3_p1.c)::text = (prt2_l_p3_p1.c)::text))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1
                           Output: prt1_l_p3_p1.a, prt1_l_p3_p1.c
                           Filter: ((prt1_l_p3_p1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2
                           Output: prt1_l_p3_p2.a, prt1_l_p3_p2.c
                           Filter: ((prt1_l_p3_p2.a % 25) = 0)
               ->  Hash
                     Output: prt2_l_p3_p1.b, prt2_l_p3_p1.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1
                                 Output: prt2_l_p3_p1.b, prt2_l_p3_p1.c
                                 Filter: ((prt2_l_p3_p1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2
                                 Output: prt2_l_p3_p2.b, prt2_l_p3_p2.c
                                 Filter: ((prt2_l_p3_p2.b % 25) = 0)
(56 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE prt2_l.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_l WHERE uprt1_l.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2_l WHERE uprt2_l.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

-- lateral partition-wise join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
			  ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   Sort Key: t1.a
   ->  Result
         Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
         ->  Append
               ->  Nested Loop Left Join
                     Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.a, t2.a, t3.a))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2.a, t2.c, t2.b, t3.a, LEAST(t1.a, t2.a, t3.a)
                           Hash Cond: ((t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text))
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t3
                                 Output: t3.a, t3.b, t3.c
                           ->  Hash
                                 Output: t2.a, t2.c, t2.b
                                 ->  Seq Scan on pwj_extra.prt1_l_p1 t2
                                       Output: t2.a, t2.c, t2.b
                                       Filter: ((t1.a = t2.a) AND ((t1.c)::text = (t2.c)::text))
               ->  Nested Loop Left Join
                     Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t2_1.c, t2_1.b, t3_1.a, (LEAST(t1_1.a, t2_1.a, t3_1.a))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_1.a, t2_1.c, t2_1.b, t3_1.a, LEAST(t1_1.a, t2_1.a, t3_1.a)
                           Hash Cond: ((t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text))
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t3_1
                                 Output: t3_1.a, t3_1.b, t3_1.c
                           ->  Hash
                                 Output: t2_1.a, t2_1.c, t2_1.b
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t2_1
                                       Output: t2_1.a, t2_1.c, t2_1.b
                                       Filter: ((t1_1.a = t2_1.a) AND ((t1_1.c)::text = (t2_1.c)::text))
               ->  Nested Loop Left Join
                     Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t2_2.c, t2_2.b, t3_2.a, (LEAST(t1_2.a, t2_2.a, t3_2.a))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_2.a, t2_2.c, t2_2.b, t3_2.a, LEAST(t1_2.a, t2_2.a, t3_2.a)
                           Hash Cond: ((t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text))
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t3_2
                                 Output: t3_2.a, t3_2.b, t3_2.c
                           ->  Hash
                                 Output: t2_2.a, t2_2.c, t2_2.b
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t2_2
                                       Output: t2_2.a, t2_2.c, t2_2.b
                                       Filter: ((t1_2.a = t2_2.a) AND ((t1_2.c)::text = (t2_2.c)::text))
               ->  Nested Loop Left Join
                     Output: t1_3.a, t1_3.b, t1_3.c, t2_3.a, t2_3.c, t2_3.b, t3_3.a, (LEAST(t1_3.a, t2_3.a, t3_3.a))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_3.a, t2_3.c, t2_3.b, t3_3.a, LEAST(t1_3.a, t2_3.a, t3_3.a)
                           Hash Cond: ((t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text))
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t3_3
                                       Output: t3_3.a, t3_3.b, t3_3.c
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t3_4
                                       Output: t3_4.a, t3_4.b, t3_4.c
                           ->  Hash
                                 Output: t2_3.a, t2_3.c, t2_3.b
                                 ->  Append
                                       ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t2_3
                                             Output: t2_3.a, t2_3.c, t2_3.b
                                             Filter: ((t1_3.a = t2_3.a) AND ((t1_3.c)::text = (t2_3.c)::text))
                                       ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t2_4
                                             Output: t2_4.a, t2_4.c, t2_4.b
                                             Filter: ((t1_3.a = t2_4.a) AND ((t1_3.c)::text = (t2_4.c)::text))
(77 rows)

SELECT * FROM prt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
			  ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |      |     |     |      
 100 | 100 | 0100 |     |      |     |     |      
 150 | 150 | 0150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |      |     |     |      
 250 | 250 | 0250 |     |      |     |     |      
 300 | 300 | 0300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |      |     |     |      
 400 | 400 | 0400 |     |      |     |     |      
 450 | 450 | 0450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |      |     |     |      
 550 | 550 | 0550 |     |      |     |     |      
(12 rows)

SELECT * FROM uprt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM uprt1_l t2 JOIN uprt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
			  ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |      |     |     |      
 100 | 100 | 0100 |     |      |     |     |      
 150 | 150 | 0150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |      |     |     |      
 250 | 250 | 0250 |     |      |     |     |      
 300 | 300 | 0300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |      |     |     |      
 400 | 400 | 0400 |     |      |     |     |      
 450 | 450 | 0450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |      |     |     |      
 550 | 550 | 0550 |     |      |     |     |      
(12 rows)

-- lateral references with clauses without equi-join on partition key
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
			  ON t1.b = ss.t2a AND t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   Sort Key: t1.a
   ->  Nested Loop Left Join
         Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                     Output: t1_3.a, t1_3.b, t1_3.c
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                     Output: t1_4.a, t1_4.b, t1_4.c
                     Filter: ((t1_4.a % 25) = 0)
         ->  Hash Join
               Output: t2.a, t2.c, t2.b, t3.a, LEAST(t1.a, t2.a, t3.a)
               Hash Cond: ((t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t3_3
                           Output: t3_3.a, t3_3.b, t3_3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t3_4
                           Output: t3_4.a, t3_4.b, t3_4.c
               ->  Hash
                     Output: t2.a, t2.c, t2.b
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p1 t2
                                 Output: t2.a, t2.c, t2.b
                                 Filter: ((t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text))
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t2_1
                                 Output: t2_1.a, t2_1.c, t2_1.b
                                 Filter: ((t1.b = t2_1.a) AND ((t1.c)::text = (t2_1.c)::text))
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t2_2
                                 Output: t2_2.a, t2_2.c, t2_2.b
                                 Filter: ((t1.b = t2_2.a) AND ((t1.c)::text = (t2_2.c)::text))
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t2_3
                                 Output: t2_3.a, t2_3.c, t2_3.b
                                 Filter: ((t1.b = t2_3.a) AND ((t1.c)::text = (t2_3.c)::text))
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t2_4
                                 Output: t2_4.a, t2_4.c, t2_4.b
                                 Filter: ((t1.b = t2_4.a) AND ((t1.c)::text = (t2_4.c)::text))
(53 rows)

SELECT * FROM prt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
			  ON t1.b = ss.t2a AND t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |      |     |     |      
 100 | 100 | 0100 |     |      |     |     |      
 150 | 150 | 0150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |      |     |     |      
 250 | 250 | 0250 |     |      |     |     |      
 300 | 300 | 0300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |      |     |     |      
 400 | 400 | 0400 |     |      |     |     |      
 450 | 450 | 0450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |      |     |     |      
 550 | 550 | 0550 |     |      |     |     |      
(12 rows)

SELECT * FROM uprt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM uprt1_l t2 JOIN uprt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
			  ON t1.b = ss.t2a AND t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 |     0
  50 |  50 | 0050 |     |      |     |     |      
 100 | 100 | 0100 |     |      |     |     |      
 150 | 150 | 0150 | 150 | 0150 | 150 | 150 |   150
 200 | 200 | 0200 |     |      |     |     |      
 250 | 250 | 0250 |     |      |     |     |      
 300 | 300 | 0300 | 300 | 0300 | 300 | 300 |   300
 350 | 350 | 0350 |     |      |     |     |      
 400 | 400 | 0400 |     |      |     |     |      
 450 | 450 | 0450 | 450 | 0450 | 450 | 450 |   450
 500 | 500 | 0500 |     |      |     |     |      
 550 | 550 | 0550 |     |      |     |     |      
(12 rows)

--==========================================================================================================================================================
-- EXTRA replication TESTCASES, now removed by dev
CREATE TABLE plt2_e (a int, b int, c text) PARTITION BY LIST(ltrim(c, 'A'));
CREATE TABLE plt2_e_p1 PARTITION OF plt2_e FOR VALUES IN ('0000', '0003', '0004', '0010');
CREATE TABLE plt2_e_p2 PARTITION OF plt2_e FOR VALUES IN ('0001', '0005', '0002', '0009');
CREATE TABLE plt2_e_p3 PARTITION OF plt2_e FOR VALUES IN ('0006', '0007', '0008', '0011');
INSERT INTO plt2_e SELECT i, i, 'A' || to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i;
ANALYZE plt2_e;
ANALYZE plt2_e_p1;
ANALYZE plt2_e_p2;
ANALYZE plt2_e_p3;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uplt2_e AS SELECT * FROM plt2_e;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1 RIGHT JOIN prt2_e t2 ON (t1.a + t1.b)/2 = (t2.b + t2.a)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: (((t1.a + t1.b) / 2) = ((t2.b + t2.a) / 2))
                     ->  Seq Scan on pwj_extra.prt1_e_p1 t1
                           Output: t1.a, t1.c, t1.b
                     ->  Hash
                           Output: t2.b, t2.c, t2.a
                           ->  Seq Scan on pwj_extra.prt2_e_p1 t2
                                 Output: t2.b, t2.c, t2.a
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: (((t1_1.a + t1_1.b) / 2) = ((t2_1.b + t2_1.a) / 2))
                     ->  Seq Scan on pwj_extra.prt1_e_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Hash
                           Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Seq Scan on pwj_extra.prt2_e_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: (((t1_2.a + t1_2.b) / 2) = ((t2_2.b + t2_2.a) / 2))
                     ->  Seq Scan on pwj_extra.prt1_e_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Hash
                           Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Seq Scan on pwj_extra.prt2_e_p3 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                                 Filter: ((t2_2.b % 25) = 0)
(36 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1 RIGHT JOIN prt2_e t2 ON (t1.a + t1.b)/2 = (t2.b + t2.a)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_e t1 RIGHT JOIN uprt2_e t2 ON (t1.a + t1.b)/2 = (t2.b + t2.a)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_e WHERE prt1_e.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_e WHERE prt2_e.b % 25 = 0) t2 ON ((t1.a + t1.b)/2 = (t2.b + t2.a)/2) ORDER BY t1.a, t2.b;
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_e_p1.a, prt1_e_p1.c, prt2_e_p1.b, prt2_e_p1.c
   Sort Key: prt1_e_p1.a, prt2_e_p1.b
   ->  Append
         ->  Hash Full Join
               Output: prt1_e_p1.a, prt1_e_p1.c, prt2_e_p1.b, prt2_e_p1.c
               Hash Cond: (((prt1_e_p1.a + prt1_e_p1.b) / 2) = ((prt2_e_p1.b + prt2_e_p1.a) / 2))
               ->  Seq Scan on pwj_extra.prt1_e_p1
                     Output: prt1_e_p1.a, prt1_e_p1.c, prt1_e_p1.b
                     Filter: ((prt1_e_p1.a % 25) = 0)
               ->  Hash
                     Output: prt2_e_p1.b, prt2_e_p1.c, prt2_e_p1.a
                     ->  Seq Scan on pwj_extra.prt2_e_p1
                           Output: prt2_e_p1.b, prt2_e_p1.c, prt2_e_p1.a
                           Filter: ((prt2_e_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_e_p2.a, prt1_e_p2.c, prt2_e_p2.b, prt2_e_p2.c
               Hash Cond: (((prt1_e_p2.a + prt1_e_p2.b) / 2) = ((prt2_e_p2.b + prt2_e_p2.a) / 2))
               ->  Seq Scan on pwj_extra.prt1_e_p2
                     Output: prt1_e_p2.a, prt1_e_p2.c, prt1_e_p2.b
                     Filter: ((prt1_e_p2.a % 25) = 0)
               ->  Hash
                     Output: prt2_e_p2.b, prt2_e_p2.c, prt2_e_p2.a
                     ->  Seq Scan on pwj_extra.prt2_e_p2
                           Output: prt2_e_p2.b, prt2_e_p2.c, prt2_e_p2.a
                           Filter: ((prt2_e_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: prt1_e_p3.a, prt1_e_p3.c, prt2_e_p3.b, prt2_e_p3.c
               Hash Cond: (((prt1_e_p3.a + prt1_e_p3.b) / 2) = ((prt2_e_p3.b + prt2_e_p3.a) / 2))
               ->  Seq Scan on pwj_extra.prt1_e_p3
                     Output: prt1_e_p3.a, prt1_e_p3.c, prt1_e_p3.b
                     Filter: ((prt1_e_p3.a % 25) = 0)
               ->  Hash
                     Output: prt2_e_p3.b, prt2_e_p3.c, prt2_e_p3.a
                     ->  Seq Scan on pwj_extra.prt2_e_p3
                           Output: prt2_e_p3.b, prt2_e_p3.c, prt2_e_p3.a
                           Filter: ((prt2_e_p3.b % 25) = 0)
(37 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_e WHERE prt1_e.a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_e WHERE prt2_e.b % 25 = 0) t2 ON ((t1.a + t1.b)/2 = (t2.b + t2.a)/2) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_e t1 WHERE t1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2_e t2 WHERE t2.b % 25 = 0) t2 ON ((t1.a + t1.b)/2 = (t2.b + t2.a)/2) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(16 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1, prt2_m t2 WHERE t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((((t2.b + t2.a) / 2) = t1.a) AND (t2.b = ((t1.a + t1.b) / 2)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_m_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Seq Scan on pwj_extra.prt2_m_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Seq Scan on pwj_extra.prt2_m_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_m_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_m_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_m_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(25 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1, prt2_m t2 WHERE t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_m t1, uprt2_m t2 WHERE t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: ((((t2.b + t2.a) / 2) = t1.a) AND (t2.b = ((t1.a + t1.b) / 2)))
               ->  Seq Scan on pwj_extra.prt2_m_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Hash
                     Output: t1.a, t1.c, t1.b
                     ->  Seq Scan on pwj_extra.prt1_m_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: ((((t2_1.b + t2_1.a) / 2) = t1_1.a) AND (t2_1.b = ((t1_1.a + t1_1.b) / 2)))
               ->  Seq Scan on pwj_extra.prt2_m_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Hash
                     Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Seq Scan on pwj_extra.prt1_m_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: ((((t2_2.b + t2_2.a) / 2) = t1_2.a) AND (t2_2.b = ((t1_2.a + t1_2.b) / 2)))
               ->  Seq Scan on pwj_extra.prt2_m_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Hash
                     Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Seq Scan on pwj_extra.prt1_m_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_m t1 LEFT JOIN uprt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 | 150 | 0150
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
 450 | 0450 | 450 | 0450
 500 | 0500 |     | 
 550 | 0550 |     | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1, plt2 t2 WHERE t1.c = t2.c AND t1.a = t2.a AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.c = t1.c) AND (t2.a = t1.a))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
         ->  Hash
               Output: t1.a, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(25 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1, plt2 t2 WHERE t1.c = t2.c AND t1.a = t2.a AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1 t1, uplt2 t2 WHERE t1.c = t2.c AND t1.a = t2.a AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.a AND t1.c = t2.c WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: ((t2.a = t1.a) AND (t2.c = t1.c))
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Hash
                     Output: t1.a, t1.c
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: ((t2_1.a = t1_1.a) AND (t2_1.c = t1_1.c))
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Hash
                     Output: t1_1.a, t1_1.c
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: ((t2_2.a = t1_2.a) AND (t2_2.c = t1_2.c))
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Hash
                     Output: t1_2.a, t1_2.c
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1 LEFT JOIN plt2 t2 ON t1.a = t2.a AND t1.c = t2.c WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1 t1 LEFT JOIN uplt2 t2 ON t1.a = t2.a AND t1.c = t2.c WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: ((t1.a = t2.b) AND (t1.c = t2.c))
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                     ->  Hash
                           Output: t2.b, t2.c
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: ((t1_1.a = t2_1.b) AND (t1_1.c = t2_1.c))
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.c
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: ((t1_2.a = t2_2.b) AND (t1_2.c = t2_2.c))
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.c
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
(36 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
     |      |  75 | 0001
     |      | 225 | 0004
     |      | 375 | 0007
     |      | 525 | 0010
(8 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1 t1 RIGHT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
     |      |  75 | 0001
     |      | 225 | 0004
     |      | 375 | 0007
     |      | 525 | 0010
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Sort
   Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
   Sort Key: plt1_p1.a, plt2_p1.b
   ->  Append
         ->  Hash Full Join
               Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
               Hash Cond: ((plt1_p1.a = plt2_p1.b) AND (plt1_p1.c = plt2_p1.c))
               ->  Seq Scan on pwj_extra.plt1_p1
                     Output: plt1_p1.a, plt1_p1.c
                     Filter: ((plt1_p1.a % 25) = 0)
               ->  Hash
                     Output: plt2_p1.b, plt2_p1.c
                     ->  Seq Scan on pwj_extra.plt2_p1
                           Output: plt2_p1.b, plt2_p1.c
                           Filter: ((plt2_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
               Hash Cond: ((plt1_p2.a = plt2_p2.b) AND (plt1_p2.c = plt2_p2.c))
               ->  Seq Scan on pwj_extra.plt1_p2
                     Output: plt1_p2.a, plt1_p2.c
                     Filter: ((plt1_p2.a % 25) = 0)
               ->  Hash
                     Output: plt2_p2.b, plt2_p2.c
                     ->  Seq Scan on pwj_extra.plt2_p2
                           Output: plt2_p2.b, plt2_p2.c
                           Filter: ((plt2_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
               Hash Cond: ((plt1_p3.a = plt2_p3.b) AND (plt1_p3.c = plt2_p3.c))
               ->  Seq Scan on pwj_extra.plt1_p3
                     Output: plt1_p3.a, plt1_p3.c
                     Filter: ((plt1_p3.a % 25) = 0)
               ->  Hash
                     Output: plt2_p3.b, plt2_p3.c
                     ->  Seq Scan on pwj_extra.plt2_p3
                           Output: plt2_p3.b, plt2_p3.c
                           Filter: ((plt2_p3.b % 25) = 0)
(37 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
     |      |  75 | 0001
     |      | 225 | 0004
     |      | 375 | 0007
     |      | 525 | 0010
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1 t1 WHERE t1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2 t2 WHERE t2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
     |      |  75 | 0001
     |      | 225 | 0004
     |      | 375 | 0007
     |      | 525 | 0010
(16 rows)

-- Cases with non-nullable expressions in subquery results;
-- make sure these go to null as expected
EXPLAIN (VERBOSE, COSTS OFF)
SELECT sum(t1.a), t1.c, avg(t2.b), t2.c FROM (SELECT 50 phv, * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.c = t2.c AND t1.a = t2.b) GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 GroupAggregate
   Output: sum(plt1_p1.a), plt1_p1.c, avg(plt2_p1.b), plt2_p1.c
   Group Key: plt1_p1.c, plt2_p1.c
   ->  Sort
         Output: plt1_p1.c, plt2_p1.c, plt1_p1.a, plt2_p1.b
         Sort Key: plt1_p1.c, plt2_p1.c
         ->  Result
               Output: plt1_p1.c, plt2_p1.c, plt1_p1.a, plt2_p1.b
               ->  Append
                     ->  Hash Full Join
                           Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
                           Hash Cond: ((plt1_p1.c = plt2_p1.c) AND (plt1_p1.a = plt2_p1.b))
                           ->  Seq Scan on pwj_extra.plt1_p1
                                 Output: plt1_p1.a, plt1_p1.c
                                 Filter: ((plt1_p1.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p1.b, plt2_p1.c
                                 ->  Seq Scan on pwj_extra.plt2_p1
                                       Output: plt2_p1.b, plt2_p1.c
                                       Filter: ((plt2_p1.b % 25) = 0)
                     ->  Hash Full Join
                           Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
                           Hash Cond: ((plt1_p2.c = plt2_p2.c) AND (plt1_p2.a = plt2_p2.b))
                           ->  Seq Scan on pwj_extra.plt1_p2
                                 Output: plt1_p2.a, plt1_p2.c
                                 Filter: ((plt1_p2.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p2.b, plt2_p2.c
                                 ->  Seq Scan on pwj_extra.plt2_p2
                                       Output: plt2_p2.b, plt2_p2.c
                                       Filter: ((plt2_p2.b % 25) = 0)
                     ->  Hash Full Join
                           Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
                           Hash Cond: ((plt1_p3.c = plt2_p3.c) AND (plt1_p3.a = plt2_p3.b))
                           ->  Seq Scan on pwj_extra.plt1_p3
                                 Output: plt1_p3.a, plt1_p3.c
                                 Filter: ((plt1_p3.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p3.b, plt2_p3.c
                                 ->  Seq Scan on pwj_extra.plt2_p3
                                       Output: plt2_p3.b, plt2_p3.c
                                       Filter: ((plt2_p3.b % 25) = 0)
(42 rows)

SELECT sum(t1.a), t1.c, avg(t2.b), t2.c FROM (SELECT 50 phv, * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.c = t2.c AND t1.a = t2.b) GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
 sum |  c   |          avg           |  c   
-----+------+------------------------+------
   0 | 0000 | 0.00000000000000000000 | 0000
  50 | 0001 |                        | 
 100 | 0002 |                        | 
 150 | 0003 |   150.0000000000000000 | 0003
 200 | 0004 |                        | 
 250 | 0005 |                        | 
 300 | 0006 |   300.0000000000000000 | 0006
 350 | 0007 |                        | 
 400 | 0008 |                        | 
 450 | 0009 |   450.0000000000000000 | 0009
 500 | 0010 |                        | 
 550 | 0011 |                        | 
     |      |    75.0000000000000000 | 0001
     |      |   225.0000000000000000 | 0004
     |      |   375.0000000000000000 | 0007
     |      |   525.0000000000000000 | 0010
(16 rows)

SELECT sum(t1.a), t1.c, avg(t2.b), t2.c FROM (SELECT 50 phv, * FROM uplt1 WHERE uplt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM uplt2 WHERE uplt2.b % 25 = 0) t2 ON (t1.c = t2.c AND t1.a = t2.b) GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
 sum |  c   |          avg           |  c   
-----+------+------------------------+------
   0 | 0000 | 0.00000000000000000000 | 0000
  50 | 0001 |                        | 
 100 | 0002 |                        | 
 150 | 0003 |   150.0000000000000000 | 0003
 200 | 0004 |                        | 
 250 | 0005 |                        | 
 300 | 0006 |   300.0000000000000000 | 0006
 350 | 0007 |                        | 
 400 | 0008 |                        | 
 450 | 0009 |   450.0000000000000000 | 0009
 500 | 0010 |                        | 
 550 | 0011 |                        | 
     |      |    75.0000000000000000 | 0001
     |      |   225.0000000000000000 | 0004
     |      |   375.0000000000000000 | 0007
     |      |   525.0000000000000000 | 0010
(16 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT sum(t1.a), t1.c, sum(t1.phv), avg(t2.b), t2.c, avg(t2.phv) FROM (SELECT 25 phv, * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT 50 phv, * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.c = t2.c AND t1.a = t2.b) GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 GroupAggregate
   Output: sum(plt1_p1.a), plt1_p1.c, sum((25)), avg(plt2_p1.b), plt2_p1.c, avg((50))
   Group Key: plt1_p1.c, plt2_p1.c
   ->  Sort
         Output: plt1_p1.c, plt2_p1.c, plt1_p1.a, (25), plt2_p1.b, (50)
         Sort Key: plt1_p1.c, plt2_p1.c
         ->  Result
               Output: plt1_p1.c, plt2_p1.c, plt1_p1.a, (25), plt2_p1.b, (50)
               ->  Append
                     ->  Hash Full Join
                           Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, (25), (50)
                           Hash Cond: ((plt1_p1.c = plt2_p1.c) AND (plt1_p1.a = plt2_p1.b))
                           ->  Seq Scan on pwj_extra.plt1_p1
                                 Output: plt1_p1.a, plt1_p1.c, 25
                                 Filter: ((plt1_p1.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p1.b, plt2_p1.c, (50)
                                 ->  Seq Scan on pwj_extra.plt2_p1
                                       Output: plt2_p1.b, plt2_p1.c, 50
                                       Filter: ((plt2_p1.b % 25) = 0)
                     ->  Hash Full Join
                           Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c, (25), (50)
                           Hash Cond: ((plt1_p2.c = plt2_p2.c) AND (plt1_p2.a = plt2_p2.b))
                           ->  Seq Scan on pwj_extra.plt1_p2
                                 Output: plt1_p2.a, plt1_p2.c, 25
                                 Filter: ((plt1_p2.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p2.b, plt2_p2.c, (50)
                                 ->  Seq Scan on pwj_extra.plt2_p2
                                       Output: plt2_p2.b, plt2_p2.c, 50
                                       Filter: ((plt2_p2.b % 25) = 0)
                     ->  Hash Full Join
                           Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c, (25), (50)
                           Hash Cond: ((plt1_p3.c = plt2_p3.c) AND (plt1_p3.a = plt2_p3.b))
                           ->  Seq Scan on pwj_extra.plt1_p3
                                 Output: plt1_p3.a, plt1_p3.c, 25
                                 Filter: ((plt1_p3.a % 25) = 0)
                           ->  Hash
                                 Output: plt2_p3.b, plt2_p3.c, (50)
                                 ->  Seq Scan on pwj_extra.plt2_p3
                                       Output: plt2_p3.b, plt2_p3.c, 50
                                       Filter: ((plt2_p3.b % 25) = 0)
(42 rows)

SELECT sum(t1.a), t1.c, sum(t1.phv), avg(t2.b), t2.c, avg(t2.phv) FROM (SELECT 25 phv, * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT 50 phv, * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.c = t2.c AND t1.a = t2.b) GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
 sum |  c   | sum |          avg           |  c   |         avg         
-----+------+-----+------------------------+------+---------------------
   0 | 0000 |  25 | 0.00000000000000000000 | 0000 | 50.0000000000000000
  50 | 0001 |  25 |                        |      |                    
 100 | 0002 |  25 |                        |      |                    
 150 | 0003 |  25 |   150.0000000000000000 | 0003 | 50.0000000000000000
 200 | 0004 |  25 |                        |      |                    
 250 | 0005 |  25 |                        |      |                    
 300 | 0006 |  25 |   300.0000000000000000 | 0006 | 50.0000000000000000
 350 | 0007 |  25 |                        |      |                    
 400 | 0008 |  25 |                        |      |                    
 450 | 0009 |  25 |   450.0000000000000000 | 0009 | 50.0000000000000000
 500 | 0010 |  25 |                        |      |                    
 550 | 0011 |  25 |                        |      |                    
     |      |     |    75.0000000000000000 | 0001 | 50.0000000000000000
     |      |     |   225.0000000000000000 | 0004 | 50.0000000000000000
     |      |     |   375.0000000000000000 | 0007 | 50.0000000000000000
     |      |     |   525.0000000000000000 | 0010 | 50.0000000000000000
(16 rows)

SELECT sum(t1.a), t1.c, sum(t1.phv), avg(t2.b), t2.c, avg(t2.phv) FROM (SELECT 25 phv, * FROM uplt1 WHERE uplt1.a % 25 = 0) t1 FULL JOIN (SELECT 50 phv, * FROM uplt2 WHERE uplt2.b % 25 = 0) t2 ON (t1.c = t2.c AND t1.a = t2.b) GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
 sum |  c   | sum |          avg           |  c   |         avg         
-----+------+-----+------------------------+------+---------------------
   0 | 0000 |  25 | 0.00000000000000000000 | 0000 | 50.0000000000000000
  50 | 0001 |  25 |                        |      |                    
 100 | 0002 |  25 |                        |      |                    
 150 | 0003 |  25 |   150.0000000000000000 | 0003 | 50.0000000000000000
 200 | 0004 |  25 |                        |      |                    
 250 | 0005 |  25 |                        |      |                    
 300 | 0006 |  25 |   300.0000000000000000 | 0006 | 50.0000000000000000
 350 | 0007 |  25 |                        |      |                    
 400 | 0008 |  25 |                        |      |                    
 450 | 0009 |  25 |   450.0000000000000000 | 0009 | 50.0000000000000000
 500 | 0010 |  25 |                        |      |                    
 550 | 0011 |  25 |                        |      |                    
     |      |     |    75.0000000000000000 | 0001 | 50.0000000000000000
     |      |     |   225.0000000000000000 | 0004 | 50.0000000000000000
     |      |     |   375.0000000000000000 | 0007 | 50.0000000000000000
     |      |     |   525.0000000000000000 | 0010 | 50.0000000000000000
(16 rows)

-- Join with pruned partitions from joining relations
EXPLAIN (VERBOSE, COSTS OFF)
SELECT sum(t1.a), t1.c, avg(t2.b), t2.c FROM plt1 t1, plt2 t2 WHERE t1.c = t2.c AND t1.c NOT IN ('0001', '0005', '0002', '0009') AND t2.c NOT IN ('0000', '0003', '0004', '0010') GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Sort
   Output: (sum(t1.a)), t1.c, (avg(t2.b)), t2.c
   Sort Key: t1.c
   ->  HashAggregate
         Output: sum(t1.a), t1.c, avg(t2.b), t2.c
         Group Key: t1.c, t2.c
         ->  Result
               Output: t1.c, t2.c, t1.a, t2.b
               ->  Append
                     ->  Hash Join
                           Output: t1.a, t1.c, t2.b, t2.c
                           Hash Cond: (t1.c = t2.c)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1
                                 Output: t1.a, t1.c
                                 Filter: (t1.c <> ALL ('{0001,0005,0002,0009}'::text[]))
                           ->  Hash
                                 Output: t2.b, t2.c
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2
                                       Output: t2.b, t2.c
                                       Filter: (t2.c <> ALL ('{0000,0003,0004,0010}'::text[]))
(20 rows)

SELECT sum(t1.a), t1.c, avg(t2.b), t2.c FROM plt1 t1, plt2 t2 WHERE t1.c = t2.c AND t1.c NOT IN ('0001', '0005', '0002', '0009') AND t2.c NOT IN ('0000', '0003', '0004', '0010') GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |         avg          |  c   
--------+------+----------------------+------
 137700 | 0006 | 324.0000000000000000 | 0006
 158950 | 0007 | 375.0000000000000000 | 0007
 169600 | 0008 | 424.5000000000000000 | 0008
 229600 | 0011 | 574.5000000000000000 | 0011
(4 rows)

SELECT sum(t1.a), t1.c, avg(t2.b), t2.c FROM uplt1 t1, uplt2 t2 WHERE t1.c = t2.c AND t1.c NOT IN ('0001', '0005', '0002', '0009') AND t2.c NOT IN ('0000', '0003', '0004', '0010') GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |         avg          |  c   
--------+------+----------------------+------
 137700 | 0006 | 324.0000000000000000 | 0006
 158950 | 0007 | 375.0000000000000000 | 0007
 169600 | 0008 | 424.5000000000000000 | 0008
 229600 | 0011 | 574.5000000000000000 | 0011
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM plt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 LEFT JOIN (SELECT * FROM plt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Sort
   Output: (sum(t1.a)), t1.c, (sum(b)), c
   Sort Key: t1.c, c
   ->  HashAggregate
         Output: sum(t1.a), t1.c, sum(b), c
         Group Key: t1.c, c
         ->  Result
               Output: t1.c, c, t1.a, b
               ->  Append
                     ->  Hash Left Join
                           Output: t1.a, t1.c, b, c
                           Hash Cond: (t1.c = c)
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
                                 Filter: (t1.c <> ALL ('{0001,0005,0002,0009}'::text[]))
                           ->  Hash
                                 Output: b, c
                                 ->  Result
                                       Output: b, c
                                       One-Time Filter: false
                     ->  Hash Left Join
                           Output: t1_1.a, t1_1.c, t2.b, t2.c
                           Hash Cond: (t1_1.c = t2.c)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_1
                                 Output: t1_1.a, t1_1.c
                                 Filter: (t1_1.c <> ALL ('{0001,0005,0002,0009}'::text[]))
                           ->  Hash
                                 Output: t2.b, t2.c
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2
                                       Output: t2.b, t2.c
                                       Filter: (t2.c <> ALL ('{0000,0003,0004,0010}'::text[]))
(31 rows)

SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM plt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 LEFT JOIN (SELECT * FROM plt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |  sum   |  c   
--------+------+--------+------
    600 | 0000 |        | 
   4350 | 0003 |        | 
   5600 | 0004 |        | 
 137700 | 0006 | 137700 | 0006
 158950 | 0007 | 159375 | 0007
 169600 | 0008 | 169800 | 0008
  13100 | 0010 |        | 
 229600 | 0011 | 229800 | 0011
(8 rows)

SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM uplt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 LEFT JOIN (SELECT * FROM uplt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |  sum   |  c   
--------+------+--------+------
    600 | 0000 |        | 
   4350 | 0003 |        | 
   5600 | 0004 |        | 
 137700 | 0006 | 137700 | 0006
 158950 | 0007 | 159375 | 0007
 169600 | 0008 | 169800 | 0008
  13100 | 0010 |        | 
 229600 | 0011 | 229800 | 0011
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM plt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 RIGHT JOIN (SELECT * FROM plt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Sort
   Output: (sum(a)), c, (sum(t2.b)), t2.c
   Sort Key: c, t2.c
   ->  HashAggregate
         Output: sum(a), c, sum(t2.b), t2.c
         Group Key: c, t2.c
         ->  Result
               Output: c, t2.c, a, t2.b
               ->  Append
                     ->  Hash Left Join
                           Output: t2.b, t2.c, a, c
                           Hash Cond: (t2.c = c)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2
                                 Output: t2.b, t2.c
                                 Filter: (t2.c <> ALL ('{0000,0003,0004,0010}'::text[]))
                           ->  Hash
                                 Output: a, c
                                 ->  Result
                                       Output: a, c
                                       One-Time Filter: false
                     ->  Hash Right Join
                           Output: t2_1.b, t2_1.c, t1.a, t1.c
                           Hash Cond: (t1.c = t2_1.c)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1
                                 Output: t1.a, t1.c
                                 Filter: (t1.c <> ALL ('{0001,0005,0002,0009}'::text[]))
                           ->  Hash
                                 Output: t2_1.b, t2_1.c
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_1
                                       Output: t2_1.b, t2_1.c
                                       Filter: (t2_1.c <> ALL ('{0000,0003,0004,0010}'::text[]))
(31 rows)

SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM plt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 RIGHT JOIN (SELECT * FROM plt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |  sum   |  c   
--------+------+--------+------
 137700 | 0006 | 137700 | 0006
 158950 | 0007 | 159375 | 0007
 169600 | 0008 | 169800 | 0008
 229600 | 0011 | 229800 | 0011
        |      |   1275 | 0001
        |      |   1992 | 0002
        |      |   4392 | 0005
        |      |   8058 | 0009
(8 rows)

SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM uplt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 RIGHT JOIN (SELECT * FROM uplt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |  sum   |  c   
--------+------+--------+------
 137700 | 0006 | 137700 | 0006
 158950 | 0007 | 159375 | 0007
 169600 | 0008 | 169800 | 0008
 229600 | 0011 | 229800 | 0011
        |      |   1275 | 0001
        |      |   1992 | 0002
        |      |   4392 | 0005
        |      |   8058 | 0009
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM plt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 FULL JOIN (SELECT * FROM plt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Sort
   Output: (sum(t1.a)), t1.c, (sum(b)), c
   Sort Key: t1.c, c
   ->  HashAggregate
         Output: sum(t1.a), t1.c, sum(b), c
         Group Key: t1.c, c
         ->  Result
               Output: t1.c, c, t1.a, b
               ->  Append
                     ->  Hash Full Join
                           Output: t1.a, t1.c, b, c
                           Hash Cond: (t1.c = c)
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
                                 Filter: (t1.c <> ALL ('{0001,0005,0002,0009}'::text[]))
                           ->  Hash
                                 Output: b, c
                                 ->  Result
                                       Output: b, c
                                       One-Time Filter: false
                     ->  Hash Full Join
                           Output: a, c, t2.b, t2.c
                           Hash Cond: (t2.c = c)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2
                                 Output: t2.b, t2.c
                                 Filter: (t2.c <> ALL ('{0000,0003,0004,0010}'::text[]))
                           ->  Hash
                                 Output: a, c
                                 ->  Result
                                       Output: a, c
                                       One-Time Filter: false
                     ->  Hash Full Join
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
                           Hash Cond: (t1_1.c = t2_1.c)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_1
                                 Output: t1_1.a, t1_1.c
                                 Filter: (t1_1.c <> ALL ('{0001,0005,0002,0009}'::text[]))
                           ->  Hash
                                 Output: t2_1.b, t2_1.c
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_1
                                       Output: t2_1.b, t2_1.c
                                       Filter: (t2_1.c <> ALL ('{0000,0003,0004,0010}'::text[]))
(42 rows)

SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM plt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 FULL JOIN (SELECT * FROM plt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |  sum   |  c   
--------+------+--------+------
    600 | 0000 |        | 
   4350 | 0003 |        | 
   5600 | 0004 |        | 
 137700 | 0006 | 137700 | 0006
 158950 | 0007 | 159375 | 0007
 169600 | 0008 | 169800 | 0008
  13100 | 0010 |        | 
 229600 | 0011 | 229800 | 0011
        |      |   1275 | 0001
        |      |   1992 | 0002
        |      |   4392 | 0005
        |      |   8058 | 0009
(12 rows)

SELECT sum(t1.a), t1.c, sum(t2.b), t2.c FROM (SELECT * FROM uplt1 t1 WHERE t1.c NOT IN ('0001', '0005', '0002', '0009')) t1 FULL JOIN (SELECT * FROM uplt2 t2 WHERE t2.c NOT IN ('0000', '0003', '0004', '0010')) t2 ON t1.c = t2.c GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
  sum   |  c   |  sum   |  c   
--------+------+--------+------
    600 | 0000 |        | 
   4350 | 0003 |        | 
   5600 | 0004 |        | 
 137700 | 0006 | 137700 | 0006
 158950 | 0007 | 159375 | 0007
 169600 | 0008 | 169800 | 0008
  13100 | 0010 |        | 
 229600 | 0011 | 229800 | 0011
        |      |   1275 | 0001
        |      |   1992 | 0002
        |      |   4392 | 0005
        |      |   8058 | 0009
(12 rows)

-- Semi-join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Nested Loop Semi Join
         Output: t1.a, t1.b, t1.c
         Join Filter: (t1.c = t1_3.c)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
         ->  Materialize
               Output: t1_3.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t1_3
                           Output: t1_3.c
                           Filter: ((t1_3.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t1_4
                           Output: t1_4.c
                           Filter: ((t1_4.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t1_5
                           Output: t1_5.c
                           Filter: ((t1_5.b % 25) = 0)
(28 rows)

SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 150 | 150 | 0003
 200 | 200 | 0004
 300 | 300 | 0006
 350 | 350 | 0007
 450 | 450 | 0009
 500 | 500 | 0010
(8 rows)

SELECT t1.* FROM uplt1 t1 WHERE t1.c IN (SELECT t1.c FROM uplt2 t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 150 | 150 | 0003
 200 | 200 | 0004
 300 | 300 | 0006
 350 | 350 | 0007
 450 | 450 | 0009
 500 | 500 | 0010
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_e t1, plt2_e t2 WHERE t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.b = t1.a) AND (ltrim(t2.c, 'A'::text) = ltrim(t1.c, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_e_p1 t2
                     Output: t2.b, t2.c
               ->  Seq Scan on pwj_extra.plt2_e_p2 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Seq Scan on pwj_extra.plt2_e_p3 t2_2
                     Output: t2_2.b, t2_2.c
         ->  Hash
               Output: t1.a, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_e_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_e_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_e_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(25 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_e t1, plt2_e t2 WHERE t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
 150 | A0003 | 150 | A0003
 300 | A0006 | 300 | A0006
 450 | A0009 | 450 | A0009
(4 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_e t1, uplt2_e t2 WHERE t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
 150 | A0003 | 150 | A0003
 300 | A0006 | 300 | A0006
 450 | A0009 | 450 | A0009
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_e t1 LEFT JOIN plt2_e t2 ON t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: ((t2.b = t1.a) AND (ltrim(t2.c, 'A'::text) = ltrim(t1.c, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_e_p1 t2
                     Output: t2.b, t2.c
               ->  Hash
                     Output: t1.a, t1.c
                     ->  Seq Scan on pwj_extra.plt1_e_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: ((t2_1.b = t1_1.a) AND (ltrim(t2_1.c, 'A'::text) = ltrim(t1_1.c, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_e_p2 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Hash
                     Output: t1_1.a, t1_1.c
                     ->  Seq Scan on pwj_extra.plt1_e_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: ((t2_2.b = t1_2.a) AND (ltrim(t2_2.c, 'A'::text) = ltrim(t1_2.c, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_e_p3 t2_2
                     Output: t2_2.b, t2_2.c
               ->  Hash
                     Output: t1_2.a, t1_2.c
                     ->  Seq Scan on pwj_extra.plt1_e_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_e t1 LEFT JOIN plt2_e t2 ON t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
  50 | A0001 |     | 
 100 | A0002 |     | 
 150 | A0003 | 150 | A0003
 200 | A0004 |     | 
 250 | A0005 |     | 
 300 | A0006 | 300 | A0006
 350 | A0007 |     | 
 400 | A0008 |     | 
 450 | A0009 | 450 | A0009
 500 | A0010 |     | 
 550 | A0011 |     | 
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_e t1 LEFT JOIN uplt2_e t2 ON t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
  50 | A0001 |     | 
 100 | A0002 |     | 
 150 | A0003 | 150 | A0003
 200 | A0004 |     | 
 250 | A0005 |     | 
 300 | A0006 | 300 | A0006
 350 | A0007 |     | 
 400 | A0008 |     | 
 450 | A0009 | 450 | A0009
 500 | A0010 |     | 
 550 | A0011 |     | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_e t1 RIGHT JOIN plt2_e t2 ON t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                                                  QUERY PLAN                                                  
--------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: ((t1.a = t2.b) AND (ltrim(t1.c, 'A'::text) = ltrim(t2.c, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_e_p1 t1
                           Output: t1.a, t1.c
                     ->  Hash
                           Output: t2.b, t2.c
                           ->  Seq Scan on pwj_extra.plt2_e_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: ((t1_1.a = t2_1.b) AND (ltrim(t1_1.c, 'A'::text) = ltrim(t2_1.c, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_e_p2 t1_1
                           Output: t1_1.a, t1_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.c
                           ->  Seq Scan on pwj_extra.plt2_e_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: ((t1_2.a = t2_2.b) AND (ltrim(t1_2.c, 'A'::text) = ltrim(t2_2.c, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_e_p3 t1_2
                           Output: t1_2.a, t1_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.c
                           ->  Seq Scan on pwj_extra.plt2_e_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
(36 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_e t1 RIGHT JOIN plt2_e t2 ON t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
 150 | A0003 | 150 | A0003
 300 | A0006 | 300 | A0006
 450 | A0009 | 450 | A0009
     |       |  75 | A0001
     |       | 225 | A0004
     |       | 375 | A0007
     |       | 525 | A0010
(8 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_e t1 RIGHT JOIN uplt2_e t2 ON t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A') WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
 150 | A0003 | 150 | A0003
 300 | A0006 | 300 | A0006
 450 | A0009 | 450 | A0009
     |       |  75 | A0001
     |       | 225 | A0004
     |       | 375 | A0007
     |       | 525 | A0010
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2_e WHERE plt2_e.b % 25 = 0) t2 ON (t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A')) ORDER BY t1.a, t2.b;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_e_p1.a, plt1_e_p1.c, plt2_e_p1.b, plt2_e_p1.c
   Sort Key: plt1_e_p1.a, plt2_e_p1.b
   ->  Append
         ->  Hash Full Join
               Output: plt1_e_p1.a, plt1_e_p1.c, plt2_e_p1.b, plt2_e_p1.c
               Hash Cond: ((plt1_e_p1.a = plt2_e_p1.b) AND (ltrim(plt1_e_p1.c, 'A'::text) = ltrim(plt2_e_p1.c, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_e_p1
                     Output: plt1_e_p1.a, plt1_e_p1.c
                     Filter: ((plt1_e_p1.a % 25) = 0)
               ->  Hash
                     Output: plt2_e_p1.b, plt2_e_p1.c
                     ->  Seq Scan on pwj_extra.plt2_e_p1
                           Output: plt2_e_p1.b, plt2_e_p1.c
                           Filter: ((plt2_e_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_e_p2.a, plt1_e_p2.c, plt2_e_p2.b, plt2_e_p2.c
               Hash Cond: ((plt1_e_p2.a = plt2_e_p2.b) AND (ltrim(plt1_e_p2.c, 'A'::text) = ltrim(plt2_e_p2.c, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_e_p2
                     Output: plt1_e_p2.a, plt1_e_p2.c
                     Filter: ((plt1_e_p2.a % 25) = 0)
               ->  Hash
                     Output: plt2_e_p2.b, plt2_e_p2.c
                     ->  Seq Scan on pwj_extra.plt2_e_p2
                           Output: plt2_e_p2.b, plt2_e_p2.c
                           Filter: ((plt2_e_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_e_p3.a, plt1_e_p3.c, plt2_e_p3.b, plt2_e_p3.c
               Hash Cond: ((plt1_e_p3.a = plt2_e_p3.b) AND (ltrim(plt1_e_p3.c, 'A'::text) = ltrim(plt2_e_p3.c, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_e_p3
                     Output: plt1_e_p3.a, plt1_e_p3.c
                     Filter: ((plt1_e_p3.a % 25) = 0)
               ->  Hash
                     Output: plt2_e_p3.b, plt2_e_p3.c
                     ->  Seq Scan on pwj_extra.plt2_e_p3
                           Output: plt2_e_p3.b, plt2_e_p3.c
                           Filter: ((plt2_e_p3.b % 25) = 0)
(37 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2_e WHERE plt2_e.b % 25 = 0) t2 ON (t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A')) ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
  50 | A0001 |     | 
 100 | A0002 |     | 
 150 | A0003 | 150 | A0003
 200 | A0004 |     | 
 250 | A0005 |     | 
 300 | A0006 | 300 | A0006
 350 | A0007 |     | 
 400 | A0008 |     | 
 450 | A0009 | 450 | A0009
 500 | A0010 |     | 
 550 | A0011 |     | 
     |       |  75 | A0001
     |       | 225 | A0004
     |       | 375 | A0007
     |       | 525 | A0010
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_e t1 WHERE t1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2_e t2 WHERE t2.b % 25 = 0) t2 ON (t1.a = t2.b AND ltrim(t1.c, 'A') = ltrim(t2.c, 'A')) ORDER BY t1.a, t2.b;
  a  |   c   |  b  |   c   
-----+-------+-----+-------
   0 | A0000 |   0 | A0000
  50 | A0001 |     | 
 100 | A0002 |     | 
 150 | A0003 | 150 | A0003
 200 | A0004 |     | 
 250 | A0005 |     | 
 300 | A0006 | 300 | A0006
 350 | A0007 |     | 
 400 | A0008 |     | 
 450 | A0009 | 450 | A0009
 500 | A0010 |     | 
 550 | A0011 |     | 
     |       |  75 | A0001
     |       | 225 | A0004
     |       | 375 | A0007
     |       | 525 | A0010
(16 rows)

--==========================================================================================================================================================
---added as replication based on dev range test cases
-- lateral reference
EXPLAIN (VERBOSE, COSTS OFF)
SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.c AS t2c, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
   Sort Key: t1.a, t1.b, t1.c, t2.c, (LEAST(t1.c, t2.c, t3.c))
   ->  HashAggregate
         Output: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
         Group Key: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
         ->  Append
               ->  Nested Loop Left Join
                     Output: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2.c, t3.c, LEAST(t1.c, t2.c, t3.c)
                           Hash Cond: (t3.c = t2.c)
                           ->  Seq Scan on pwj_extra.plt2_p1 t3
                                 Output: t3.c
                           ->  Hash
                                 Output: t2.c
                                 ->  Seq Scan on pwj_extra.plt1_p1 t2
                                       Output: t2.c
                                       Filter: (t1.c = t2.c)
               ->  Nested Loop Left Join
                     Output: t1_1.a, t1_1.b, t1_1.c, t2_1.c, t3_1.c, (LEAST(t1_1.c, t2_1.c, t3_1.c))
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_1.c, t3_1.c, LEAST(t1_1.c, t2_1.c, t3_1.c)
                           Hash Cond: (t3_1.c = t2_1.c)
                           ->  Seq Scan on pwj_extra.plt2_p2 t3_1
                                 Output: t3_1.c
                           ->  Hash
                                 Output: t2_1.c
                                 ->  Seq Scan on pwj_extra.plt1_p2 t2_1
                                       Output: t2_1.c
                                       Filter: (t1_1.c = t2_1.c)
               ->  Nested Loop Left Join
                     Output: t1_2.a, t1_2.b, t1_2.c, t2_2.c, t3_2.c, (LEAST(t1_2.c, t2_2.c, t3_2.c))
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_2.c, t3_2.c, LEAST(t1_2.c, t2_2.c, t3_2.c)
                           Hash Cond: (t3_2.c = t2_2.c)
                           ->  Seq Scan on pwj_extra.plt2_p3 t3_2
                                 Output: t3_2.c
                           ->  Hash
                                 Output: t2_2.c
                                 ->  Seq Scan on pwj_extra.plt1_p3 t2_2
                                       Output: t2_2.c
                                       Filter: (t1_2.c = t2_2.c)
(52 rows)

SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.c AS t2c, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2c  | t3c  | least 
-----+-----+------+------+------+-------
   0 |   0 | 0000 | 0000 | 0000 | 0000
  50 |  50 | 0001 | 0001 | 0001 | 0001
 100 | 100 | 0002 | 0002 | 0002 | 0002
 150 | 150 | 0003 | 0003 | 0003 | 0003
 200 | 200 | 0004 | 0004 | 0004 | 0004
 250 | 250 | 0005 | 0005 | 0005 | 0005
 300 | 300 | 0006 | 0006 | 0006 | 0006
 350 | 350 | 0007 | 0007 | 0007 | 0007
 400 | 400 | 0008 | 0008 | 0008 | 0008
 450 | 450 | 0009 | 0009 | 0009 | 0009
 500 | 500 | 0010 | 0010 | 0010 | 0010
 550 | 550 | 0011 | 0011 | 0011 | 0011
(12 rows)

--TODO - this query need to remove once testing done.
SELECT distinct * FROM uplt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.c AS t2c, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM uplt1 t2 JOIN uplt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2c  | t3c  | least 
-----+-----+------+------+------+-------
   0 |   0 | 0000 | 0000 | 0000 | 0000
  50 |  50 | 0001 | 0001 | 0001 | 0001
 100 | 100 | 0002 | 0002 | 0002 | 0002
 150 | 150 | 0003 | 0003 | 0003 | 0003
 200 | 200 | 0004 | 0004 | 0004 | 0004
 250 | 250 | 0005 | 0005 | 0005 | 0005
 300 | 300 | 0006 | 0006 | 0006 | 0006
 350 | 350 | 0007 | 0007 | 0007 | 0007
 400 | 400 | 0008 | 0008 | 0008 | 0008
 450 | 450 | 0009 | 0009 | 0009 | 0009
 500 | 500 | 0010 | 0010 | 0010 | 0010
 550 | 550 | 0011 | 0011 | 0011 | 0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Unique
   Output: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
   ->  Sort
         Output: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
         Sort Key: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
         ->  Nested Loop Left Join
               Output: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Append
                     ->  Hash Join
                           Output: t2.a, t3.c, LEAST(t1.c, t2.c, t3.c)
                           Hash Cond: (t3.c = t2.c)
                           ->  Seq Scan on pwj_extra.plt2_p1 t3
                                 Output: t3.c
                           ->  Hash
                                 Output: t2.a, t2.c
                                 ->  Seq Scan on pwj_extra.plt1_p1 t2
                                       Output: t2.a, t2.c
                                       Filter: (t1.b = t2.a)
                     ->  Hash Join
                           Output: t2_1.a, t3_1.c, LEAST(t1.c, t2_1.c, t3_1.c)
                           Hash Cond: (t3_1.c = t2_1.c)
                           ->  Seq Scan on pwj_extra.plt2_p2 t3_1
                                 Output: t3_1.c
                           ->  Hash
                                 Output: t2_1.a, t2_1.c
                                 ->  Seq Scan on pwj_extra.plt1_p2 t2_1
                                       Output: t2_1.a, t2_1.c
                                       Filter: (t1.b = t2_1.a)
                     ->  Hash Join
                           Output: t2_2.a, t3_2.c, LEAST(t1.c, t2_2.c, t3_2.c)
                           Hash Cond: (t3_2.c = t2_2.c)
                           ->  Seq Scan on pwj_extra.plt2_p3 t3_2
                                 Output: t3_2.c
                           ->  Hash
                                 Output: t2_2.a, t2_2.c
                                 ->  Seq Scan on pwj_extra.plt1_p3 t2_2
                                       Output: t2_2.a, t2_2.c
                                       Filter: (t1.b = t2_2.a)
(48 rows)

SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2a | t3c  | least 
-----+-----+------+-----+------+-------
   0 |   0 | 0000 |   0 | 0000 | 0000
  50 |  50 | 0001 |  50 | 0001 | 0001
 100 | 100 | 0002 | 100 | 0002 | 0002
 150 | 150 | 0003 | 150 | 0003 | 0003
 200 | 200 | 0004 | 200 | 0004 | 0004
 250 | 250 | 0005 | 250 | 0005 | 0005
 300 | 300 | 0006 | 300 | 0006 | 0006
 350 | 350 | 0007 | 350 | 0007 | 0007
 400 | 400 | 0008 | 400 | 0008 | 0008
 450 | 450 | 0009 | 450 | 0009 | 0009
 500 | 500 | 0010 | 500 | 0010 | 0010
 550 | 550 | 0011 | 550 | 0011 | 0011
(12 rows)

--TODO - this query need to remove once testing done.
SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2a | t3c  | least 
-----+-----+------+-----+------+-------
   0 |   0 | 0000 |   0 | 0000 | 0000
  50 |  50 | 0001 |  50 | 0001 | 0001
 100 | 100 | 0002 | 100 | 0002 | 0002
 150 | 150 | 0003 | 150 | 0003 | 0003
 200 | 200 | 0004 | 200 | 0004 | 0004
 250 | 250 | 0005 | 250 | 0005 | 0005
 300 | 300 | 0006 | 300 | 0006 | 0006
 350 | 350 | 0007 | 350 | 0007 | 0007
 400 | 400 | 0008 | 400 | 0008 | 0008
 450 | 450 | 0009 | 450 | 0009 | 0009
 500 | 500 | 0010 | 500 | 0010 | 0010
 550 | 550 | 0011 | 550 | 0011 | 0011
(12 rows)

-- Cases with non-nullable expressions in subquery results;
-- make sure these go to null as expected
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.phv, t2.b, t2.phv, ltrim(t3.c,'A'), t3.phv FROM ((SELECT 50 phv, * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.c = t2.c)) FULL JOIN (SELECT '0002'::text phv, * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.c = ltrim(t3.c,'A')) WHERE t1.a = t1.phv OR t2.b = t2.phv OR ltrim(t3.c,'A') = t3.phv ORDER BY t1.a, t2.b, ltrim(t3.c,'A');
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_p1.a, (50), plt2_p1.b, (75), (ltrim(plt1_e_p1.c, 'A'::text)), ('0002'::text)
   Sort Key: plt1_p1.a, plt2_p1.b, (ltrim(plt1_e_p1.c, 'A'::text))
   ->  Hash Full Join
         Output: plt1_p1.a, (50), plt2_p1.b, (75), ltrim(plt1_e_p1.c, 'A'::text), ('0002'::text)
         Hash Cond: (plt1_p1.c = ltrim(plt1_e_p1.c, 'A'::text))
         Filter: ((plt1_p1.a = (50)) OR (plt2_p1.b = (75)) OR (ltrim(plt1_e_p1.c, 'A'::text) = ('0002'::text)))
         ->  Append
               ->  Hash Full Join
                     Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, (50), (75)
                     Hash Cond: (plt1_p1.c = plt2_p1.c)
                     ->  Seq Scan on pwj_extra.plt1_p1
                           Output: plt1_p1.a, plt1_p1.c, 50
                           Filter: ((plt1_p1.a % 25) = 0)
                     ->  Hash
                           Output: plt2_p1.b, plt2_p1.c, (75)
                           ->  Seq Scan on pwj_extra.plt2_p1
                                 Output: plt2_p1.b, plt2_p1.c, 75
                                 Filter: ((plt2_p1.b % 25) = 0)
               ->  Hash Full Join
                     Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, (50), (75)
                     Hash Cond: (plt1_p2.c = plt2_p2.c)
                     ->  Seq Scan on pwj_extra.plt1_p2
                           Output: plt1_p2.a, plt1_p2.c, 50
                           Filter: ((plt1_p2.a % 25) = 0)
                     ->  Hash
                           Output: plt2_p2.b, plt2_p2.c, (75)
                           ->  Seq Scan on pwj_extra.plt2_p2
                                 Output: plt2_p2.b, plt2_p2.c, 75
                                 Filter: ((plt2_p2.b % 25) = 0)
               ->  Hash Full Join
                     Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, (50), (75)
                     Hash Cond: (plt1_p3.c = plt2_p3.c)
                     ->  Seq Scan on pwj_extra.plt1_p3
                           Output: plt1_p3.a, plt1_p3.c, 50
                           Filter: ((plt1_p3.a % 25) = 0)
                     ->  Hash
                           Output: plt2_p3.b, plt2_p3.c, (75)
                           ->  Seq Scan on pwj_extra.plt2_p3
                                 Output: plt2_p3.b, plt2_p3.c, 75
                                 Filter: ((plt2_p3.b % 25) = 0)
         ->  Hash
               Output: plt1_e_p1.c, ('0002'::text)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_e_p1
                           Output: plt1_e_p1.c, '0002'::text
                           Filter: ((plt1_e_p1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_e_p2
                           Output: plt1_e_p2.c, '0002'::text
                           Filter: ((plt1_e_p2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_e_p3
                           Output: plt1_e_p3.c, '0002'::text
                           Filter: ((plt1_e_p3.a % 25) = 0)
(53 rows)

SELECT t1.a, t1.phv, t2.b, t2.phv, ltrim(t3.c,'A'), t3.phv FROM ((SELECT 50 phv, * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.c = t2.c)) FULL JOIN (SELECT '0002'::text phv, * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.c = ltrim(t3.c,'A')) WHERE t1.a = t1.phv OR t2.b = t2.phv OR ltrim(t3.c,'A') = t3.phv ORDER BY t1.a, t2.b, ltrim(t3.c,'A');
  a  | phv | b  | phv | ltrim | phv  
-----+-----+----+-----+-------+------
  50 |  50 | 75 |  75 | 0001  | 0002
 100 |  50 |    |     | 0002  | 0002
(2 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.phv, t2.b, t2.phv, ltrim(t3.c,'A'), t3.phv FROM ((SELECT 50 phv, * FROM uplt1 WHERE uplt1.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM uplt2 WHERE uplt2.b % 25 = 0) t2 ON (t1.c = t2.c)) FULL JOIN (SELECT '0002'::text phv, * FROM uplt1_e WHERE uplt1_e.a % 25 = 0) t3 ON (t1.c = ltrim(t3.c,'A')) WHERE t1.a = t1.phv OR t2.b = t2.phv OR ltrim(t3.c,'A') = t3.phv ORDER BY t1.a, t2.b, ltrim(t3.c,'A');
  a  | phv | b  | phv | ltrim | phv  
-----+-----+----+-----+-------+------
  50 |  50 | 75 |  75 | 0001  | 0002
 100 |  50 |    |     | 0002  | 0002
(2 rows)

-- test merge join with and without index scan
CREATE INDEX iplt1_p1_c on plt1_p1(c);
CREATE INDEX iplt1_p2_c on plt1_p2(c);
CREATE INDEX iplt1_p3_c on plt1_p3(c);
CREATE INDEX iplt2_p1_c on plt2_p1(c);
CREATE INDEX iplt2_p2_c on plt2_p2(c);
CREATE INDEX iplt2_p3_c on plt2_p3(c);
CREATE INDEX iplt1_e_p1_c on plt1_e_p1(ltrim(c, 'A'));
CREATE INDEX iplt1_e_p2_c on plt1_e_p2(ltrim(c, 'A'));
CREATE INDEX iplt1_e_p3_c on plt1_e_p3(ltrim(c, 'A'));
ANALYZE plt1;
ANALYZE plt1_p1;
ANALYZE plt1_p2;
ANALYZE plt1_p3;
ANALYZE plt2;
ANALYZE plt2_p1;
ANALYZE plt2_p2;
ANALYZE plt2_p3;
ANALYZE plt1_e;
ANALYZE plt1_e_p1;
ANALYZE plt1_e_p2;
ANALYZE plt1_e_p3;
SET enable_hashjoin TO off;
SET enable_nestloop TO off;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Merge Left Join
                     Output: t3.a, t3.b, t3.c, t2.b, t2.c, t1.a, t1.c
                     Merge Cond: ((t2.b = t1.a) AND (t2.c = t1.c))
                     ->  Sort
                           Output: t3.a, t3.b, t3.c, t2.b, t2.c
                           Sort Key: t2.b, t2.c
                           ->  Merge Left Join
                                 Output: t3.a, t3.b, t3.c, t2.b, t2.c
                                 Merge Cond: ((t3.a = t2.b) AND ((ltrim(t3.c, 'A'::text)) = t2.c))
                                 ->  Sort
                                       Output: t3.a, t3.b, t3.c, (ltrim(t3.c, 'A'::text))
                                       Sort Key: t3.a, (ltrim(t3.c, 'A'::text))
                                       ->  Seq Scan on pwj_extra.plt1_e_p1 t3
                                             Output: t3.a, t3.b, t3.c, ltrim(t3.c, 'A'::text)
                                             Filter: ((t3.a % 25) = 0)
                                 ->  Sort
                                       Output: t2.b, t2.c
                                       Sort Key: t2.b, t2.c
                                       ->  Seq Scan on pwj_extra.plt2_p1 t2
                                             Output: t2.b, t2.c
                     ->  Sort
                           Output: t1.a, t1.c
                           Sort Key: t1.a, t1.c
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
               ->  Merge Left Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Merge Cond: ((t2_1.b = t1_1.a) AND (t2_1.c = t1_1.c))
                     ->  Sort
                           Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                           Sort Key: t2_1.b, t2_1.c
                           ->  Merge Left Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                                 Merge Cond: ((t3_1.a = t2_1.b) AND ((ltrim(t3_1.c, 'A'::text)) = t2_1.c))
                                 ->  Sort
                                       Output: t3_1.a, t3_1.b, t3_1.c, (ltrim(t3_1.c, 'A'::text))
                                       Sort Key: t3_1.a, (ltrim(t3_1.c, 'A'::text))
                                       ->  Seq Scan on pwj_extra.plt1_e_p2 t3_1
                                             Output: t3_1.a, t3_1.b, t3_1.c, ltrim(t3_1.c, 'A'::text)
                                             Filter: ((t3_1.a % 25) = 0)
                                 ->  Sort
                                       Output: t2_1.b, t2_1.c
                                       Sort Key: t2_1.b, t2_1.c
                                       ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                             Output: t2_1.b, t2_1.c
                     ->  Sort
                           Output: t1_1.a, t1_1.c
                           Sort Key: t1_1.a, t1_1.c
                           ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                 Output: t1_1.a, t1_1.c
               ->  Merge Left Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Merge Cond: ((t2_2.b = t1_2.a) AND (t2_2.c = t1_2.c))
                     ->  Sort
                           Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                           Sort Key: t2_2.b, t2_2.c
                           ->  Merge Left Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                                 Merge Cond: ((t3_2.a = t2_2.b) AND ((ltrim(t3_2.c, 'A'::text)) = t2_2.c))
                                 ->  Sort
                                       Output: t3_2.a, t3_2.b, t3_2.c, (ltrim(t3_2.c, 'A'::text))
                                       Sort Key: t3_2.a, (ltrim(t3_2.c, 'A'::text))
                                       ->  Seq Scan on pwj_extra.plt1_e_p3 t3_2
                                             Output: t3_2.a, t3_2.b, t3_2.c, ltrim(t3_2.c, 'A'::text)
                                             Filter: ((t3_2.a % 25) = 0)
                                 ->  Sort
                                       Output: t2_2.b, t2_2.c
                                       Sort Key: t2_2.b, t2_2.c
                                       ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                             Output: t2_2.b, t2_2.c
                     ->  Sort
                           Output: t1_2.a, t1_2.c
                           Sort Key: t1_2.a, t1_2.c
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
(81 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
 150 | 0003 | 150 | 0003 |      300 | A0003
 300 | 0006 | 300 | 0006 |      600 | A0006
 450 | 0009 | 450 | 0009 |      900 | A0009
     |      |     |      |      100 | A0001
     |      |     |      |      200 | A0002
     |      |     |      |      400 | A0004
     |      |     |      |      500 | A0005
     |      |     |      |      700 | A0007
     |      |     |      |      800 | A0008
     |      |     |      |     1000 | A0010
     |      |     |      |     1100 | A0011
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uplt1 t1 RIGHT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN uplt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
 150 | 0003 | 150 | 0003 |      300 | A0003
 300 | 0006 | 300 | 0006 |      600 | A0006
 450 | 0009 | 450 | 0009 |      900 | A0009
     |      |     |      |      100 | A0001
     |      |     |      |      200 | A0002
     |      |     |      |      400 | A0004
     |      |     |      |      500 | A0005
     |      |     |      |      700 | A0007
     |      |     |      |      800 | A0008
     |      |     |      |     1000 | A0010
     |      |     |      |     1100 | A0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, ((plt1_e_p1.a + plt1_e_p1.b)), plt1_e_p1.c
   Sort Key: plt1_p1.a, plt2_p1.b, ((plt1_e_p1.a + plt1_e_p1.b))
   ->  Result
         Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, (plt1_e_p1.a + plt1_e_p1.b), plt1_e_p1.c
         ->  Append
               ->  Merge Full Join
                     Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c
                     Merge Cond: ((plt1_p1.a = plt1_e_p1.a) AND (plt1_p1.c = (ltrim(plt1_e_p1.c, 'A'::text))))
                     ->  Sort
                           Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
                           Sort Key: plt1_p1.a, plt1_p1.c
                           ->  Merge Full Join
                                 Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
                                 Merge Cond: ((plt1_p1.a = plt2_p1.b) AND (plt1_p1.c = plt2_p1.c))
                                 ->  Sort
                                       Output: plt1_p1.a, plt1_p1.c
                                       Sort Key: plt1_p1.a, plt1_p1.c
                                       ->  Seq Scan on pwj_extra.plt1_p1
                                             Output: plt1_p1.a, plt1_p1.c
                                             Filter: ((plt1_p1.a % 25) = 0)
                                 ->  Sort
                                       Output: plt2_p1.b, plt2_p1.c
                                       Sort Key: plt2_p1.b, plt2_p1.c
                                       ->  Seq Scan on pwj_extra.plt2_p1
                                             Output: plt2_p1.b, plt2_p1.c
                                             Filter: ((plt2_p1.b % 25) = 0)
                     ->  Sort
                           Output: plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c, (ltrim(plt1_e_p1.c, 'A'::text))
                           Sort Key: plt1_e_p1.a, (ltrim(plt1_e_p1.c, 'A'::text))
                           ->  Seq Scan on pwj_extra.plt1_e_p1
                                 Output: plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c, ltrim(plt1_e_p1.c, 'A'::text)
                                 Filter: ((plt1_e_p1.a % 25) = 0)
               ->  Merge Full Join
                     Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c, plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c
                     Merge Cond: ((plt1_p2.a = plt1_e_p2.a) AND (plt1_p2.c = (ltrim(plt1_e_p2.c, 'A'::text))))
                     ->  Sort
                           Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
                           Sort Key: plt1_p2.a, plt1_p2.c
                           ->  Merge Full Join
                                 Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
                                 Merge Cond: ((plt1_p2.a = plt2_p2.b) AND (plt1_p2.c = plt2_p2.c))
                                 ->  Sort
                                       Output: plt1_p2.a, plt1_p2.c
                                       Sort Key: plt1_p2.a, plt1_p2.c
                                       ->  Seq Scan on pwj_extra.plt1_p2
                                             Output: plt1_p2.a, plt1_p2.c
                                             Filter: ((plt1_p2.a % 25) = 0)
                                 ->  Sort
                                       Output: plt2_p2.b, plt2_p2.c
                                       Sort Key: plt2_p2.b, plt2_p2.c
                                       ->  Seq Scan on pwj_extra.plt2_p2
                                             Output: plt2_p2.b, plt2_p2.c
                                             Filter: ((plt2_p2.b % 25) = 0)
                     ->  Sort
                           Output: plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c, (ltrim(plt1_e_p2.c, 'A'::text))
                           Sort Key: plt1_e_p2.a, (ltrim(plt1_e_p2.c, 'A'::text))
                           ->  Seq Scan on pwj_extra.plt1_e_p2
                                 Output: plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c, ltrim(plt1_e_p2.c, 'A'::text)
                                 Filter: ((plt1_e_p2.a % 25) = 0)
               ->  Merge Full Join
                     Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c, plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c
                     Merge Cond: ((plt1_p3.a = plt1_e_p3.a) AND (plt1_p3.c = (ltrim(plt1_e_p3.c, 'A'::text))))
                     ->  Sort
                           Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
                           Sort Key: plt1_p3.a, plt1_p3.c
                           ->  Merge Full Join
                                 Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
                                 Merge Cond: ((plt1_p3.a = plt2_p3.b) AND (plt1_p3.c = plt2_p3.c))
                                 ->  Sort
                                       Output: plt1_p3.a, plt1_p3.c
                                       Sort Key: plt1_p3.a, plt1_p3.c
                                       ->  Seq Scan on pwj_extra.plt1_p3
                                             Output: plt1_p3.a, plt1_p3.c
                                             Filter: ((plt1_p3.a % 25) = 0)
                                 ->  Sort
                                       Output: plt2_p3.b, plt2_p3.c
                                       Sort Key: plt2_p3.b, plt2_p3.c
                                       ->  Seq Scan on pwj_extra.plt2_p3
                                             Output: plt2_p3.b, plt2_p3.c
                                             Filter: ((plt2_p3.b % 25) = 0)
                     ->  Sort
                           Output: plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c, (ltrim(plt1_e_p3.c, 'A'::text))
                           Sort Key: plt1_e_p3.a, (ltrim(plt1_e_p3.c, 'A'::text))
                           ->  Seq Scan on pwj_extra.plt1_e_p3
                                 Output: plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c, ltrim(plt1_e_p3.c, 'A'::text)
                                 Filter: ((plt1_e_p3.a % 25) = 0)
(87 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
     |      |  75 | 0001 |          | 
     |      | 225 | 0004 |          | 
     |      | 375 | 0007 |          | 
     |      | 525 | 0010 |          | 
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM uplt1 WHERE uplt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2 WHERE uplt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM uplt1_e WHERE uplt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
     |      |  75 | 0001 |          | 
     |      | 225 | 0004 |          | 
     |      | 375 | 0007 |          | 
     |      | 525 | 0010 |          | 
(16 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM plt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Merge Semi Join
               Output: t1.a, t1.b, t1.c
               Merge Cond: (t1.c = t1_3.c)
               ->  Sort
                     Output: t1.a, t1.b, t1.c
                     Sort Key: t1.c
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
               ->  Merge Semi Join
                     Output: t1_3.c, t1_6.c
                     Merge Cond: (t1_3.c = (ltrim(t1_6.c, 'A'::text)))
                     ->  Sort
                           Output: t1_3.c
                           Sort Key: t1_3.c
                           ->  Seq Scan on pwj_extra.plt2_p1 t1_3
                                 Output: t1_3.c
                     ->  Sort
                           Output: t1_6.c, (ltrim(t1_6.c, 'A'::text))
                           Sort Key: (ltrim(t1_6.c, 'A'::text))
                           ->  Seq Scan on pwj_extra.plt1_e_p1 t1_6
                                 Output: t1_6.c, ltrim(t1_6.c, 'A'::text)
                                 Filter: ((t1_6.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Merge Cond: (t1_1.c = t1_4.c)
               ->  Sort
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Sort Key: t1_1.c
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
               ->  Merge Semi Join
                     Output: t1_4.c, t1_7.c
                     Merge Cond: (t1_4.c = (ltrim(t1_7.c, 'A'::text)))
                     ->  Sort
                           Output: t1_4.c
                           Sort Key: t1_4.c
                           ->  Seq Scan on pwj_extra.plt2_p2 t1_4
                                 Output: t1_4.c
                     ->  Sort
                           Output: t1_7.c, (ltrim(t1_7.c, 'A'::text))
                           Sort Key: (ltrim(t1_7.c, 'A'::text))
                           ->  Seq Scan on pwj_extra.plt1_e_p2 t1_7
                                 Output: t1_7.c, ltrim(t1_7.c, 'A'::text)
                                 Filter: ((t1_7.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Merge Cond: (t1_2.c = t1_5.c)
               ->  Sort
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Sort Key: t1_2.c
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Merge Semi Join
                     Output: t1_5.c, t1_8.c
                     Merge Cond: (t1_5.c = (ltrim(t1_8.c, 'A'::text)))
                     ->  Sort
                           Output: t1_5.c
                           Sort Key: t1_5.c
                           ->  Seq Scan on pwj_extra.plt2_p3 t1_5
                                 Output: t1_5.c
                     ->  Sort
                           Output: t1_8.c, (ltrim(t1_8.c, 'A'::text))
                           Sort Key: (ltrim(t1_8.c, 'A'::text))
                           ->  Seq Scan on pwj_extra.plt1_e_p3 t1_8
                                 Output: t1_8.c, ltrim(t1_8.c, 'A'::text)
                                 Filter: ((t1_8.a % 25) = 0)
(73 rows)

SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM plt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

SELECT t1.* FROM uplt1 t1 WHERE t1.c IN (SELECT t1.c FROM uplt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM uplt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

SET enable_seqscan TO off;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c, ((t3.a + t3.b)), t3.c
   Sort Key: t1.a, t2.b, ((t3.a + t3.b))
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c, (t3.a + t3.b), t3.c
         ->  Append
               ->  Merge Left Join
                     Output: t3.a, t3.b, t3.c, t2.b, t2.c, t1.a, t1.c
                     Merge Cond: ((t2.b = t1.a) AND (t2.c = t1.c))
                     ->  Sort
                           Output: t3.a, t3.b, t3.c, t2.b, t2.c
                           Sort Key: t2.b, t2.c
                           ->  Merge Left Join
                                 Output: t3.a, t3.b, t3.c, t2.b, t2.c
                                 Merge Cond: (ltrim(t3.c, 'A'::text) = t2.c)
                                 Join Filter: (t2.b = t3.a)
                                 ->  Index Scan using iplt1_e_p1_c on pwj_extra.plt1_e_p1 t3
                                       Output: t3.a, t3.b, t3.c
                                       Filter: ((t3.a % 25) = 0)
                                 ->  Index Scan using iplt2_p1_c on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                     ->  Sort
                           Output: t1.a, t1.c
                           Sort Key: t1.a, t1.c
                           ->  Index Scan using iplt1_p1_c on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
               ->  Merge Left Join
                     Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Merge Cond: ((t2_1.b = t1_1.a) AND (t2_1.c = t1_1.c))
                     ->  Sort
                           Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                           Sort Key: t2_1.b, t2_1.c
                           ->  Merge Left Join
                                 Output: t3_1.a, t3_1.b, t3_1.c, t2_1.b, t2_1.c
                                 Merge Cond: (ltrim(t3_1.c, 'A'::text) = t2_1.c)
                                 Join Filter: (t2_1.b = t3_1.a)
                                 ->  Index Scan using iplt1_e_p2_c on pwj_extra.plt1_e_p2 t3_1
                                       Output: t3_1.a, t3_1.b, t3_1.c
                                       Filter: ((t3_1.a % 25) = 0)
                                 ->  Index Scan using iplt2_p2_c on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                     ->  Sort
                           Output: t1_1.a, t1_1.c
                           Sort Key: t1_1.a, t1_1.c
                           ->  Index Scan using iplt1_p2_c on pwj_extra.plt1_p2 t1_1
                                 Output: t1_1.a, t1_1.c
               ->  Merge Left Join
                     Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Merge Cond: ((t2_2.b = t1_2.a) AND (t2_2.c = t1_2.c))
                     ->  Sort
                           Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                           Sort Key: t2_2.b, t2_2.c
                           ->  Merge Left Join
                                 Output: t3_2.a, t3_2.b, t3_2.c, t2_2.b, t2_2.c
                                 Merge Cond: (ltrim(t3_2.c, 'A'::text) = t2_2.c)
                                 Join Filter: (t2_2.b = t3_2.a)
                                 ->  Index Scan using iplt1_e_p3_c on pwj_extra.plt1_e_p3 t3_2
                                       Output: t3_2.a, t3_2.b, t3_2.c
                                       Filter: ((t3_2.a % 25) = 0)
                                 ->  Index Scan using iplt2_p3_c on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                     ->  Sort
                           Output: t1_2.a, t1_2.c
                           Sort Key: t1_2.a, t1_2.c
                           ->  Index Scan using iplt1_p3_c on pwj_extra.plt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
(66 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (plt1 t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN plt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
 150 | 0003 | 150 | 0003 |      300 | A0003
 300 | 0006 | 300 | 0006 |      600 | A0006
 450 | 0009 | 450 | 0009 |      900 | A0009
     |      |     |      |      100 | A0001
     |      |     |      |      200 | A0002
     |      |     |      |      400 | A0004
     |      |     |      |      500 | A0005
     |      |     |      |      700 | A0007
     |      |     |      |      800 | A0008
     |      |     |      |     1000 | A0010
     |      |     |      |     1100 | A0011
(12 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (uplt1 t1 RIGHT JOIN uplt2 t2 ON t1.a = t2.b AND t1.c = t2.c) RIGHT JOIN uplt1_e t3 ON (t2.b = t3.a AND t2.c = ltrim(t3.c, 'A')) WHERE t3.a % 25 = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
 150 | 0003 | 150 | 0003 |      300 | A0003
 300 | 0006 | 300 | 0006 |      600 | A0006
 450 | 0009 | 450 | 0009 |      900 | A0009
     |      |     |      |      100 | A0001
     |      |     |      |      200 | A0002
     |      |     |      |      400 | A0004
     |      |     |      |      500 | A0005
     |      |     |      |      700 | A0007
     |      |     |      |      800 | A0008
     |      |     |      |     1000 | A0010
     |      |     |      |     1100 | A0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, ((plt1_e_p1.a + plt1_e_p1.b)), plt1_e_p1.c
   Sort Key: plt1_p1.a, plt2_p1.b, ((plt1_e_p1.a + plt1_e_p1.b))
   ->  Result
         Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, (plt1_e_p1.a + plt1_e_p1.b), plt1_e_p1.c
         ->  Append
               ->  Merge Full Join
                     Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c, plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c
                     Merge Cond: ((plt1_p1.a = plt1_e_p1.a) AND (plt1_p1.c = (ltrim(plt1_e_p1.c, 'A'::text))))
                     ->  Sort
                           Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
                           Sort Key: plt1_p1.a, plt1_p1.c
                           ->  Merge Full Join
                                 Output: plt1_p1.a, plt1_p1.c, plt2_p1.b, plt2_p1.c
                                 Merge Cond: ((plt1_p1.a = plt2_p1.b) AND (plt1_p1.c = plt2_p1.c))
                                 ->  Sort
                                       Output: plt1_p1.a, plt1_p1.c
                                       Sort Key: plt1_p1.a, plt1_p1.c
                                       ->  Index Scan using iplt1_p1_c on pwj_extra.plt1_p1
                                             Output: plt1_p1.a, plt1_p1.c
                                             Filter: ((plt1_p1.a % 25) = 0)
                                 ->  Sort
                                       Output: plt2_p1.b, plt2_p1.c
                                       Sort Key: plt2_p1.b, plt2_p1.c
                                       ->  Index Scan using iplt2_p1_c on pwj_extra.plt2_p1
                                             Output: plt2_p1.b, plt2_p1.c
                                             Filter: ((plt2_p1.b % 25) = 0)
                     ->  Sort
                           Output: plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c, (ltrim(plt1_e_p1.c, 'A'::text))
                           Sort Key: plt1_e_p1.a, (ltrim(plt1_e_p1.c, 'A'::text))
                           ->  Index Scan using iplt1_e_p1_c on pwj_extra.plt1_e_p1
                                 Output: plt1_e_p1.a, plt1_e_p1.b, plt1_e_p1.c, ltrim(plt1_e_p1.c, 'A'::text)
                                 Filter: ((plt1_e_p1.a % 25) = 0)
               ->  Merge Full Join
                     Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c, plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c
                     Merge Cond: ((plt1_p2.a = plt1_e_p2.a) AND (plt1_p2.c = (ltrim(plt1_e_p2.c, 'A'::text))))
                     ->  Sort
                           Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
                           Sort Key: plt1_p2.a, plt1_p2.c
                           ->  Merge Full Join
                                 Output: plt1_p2.a, plt1_p2.c, plt2_p2.b, plt2_p2.c
                                 Merge Cond: ((plt1_p2.a = plt2_p2.b) AND (plt1_p2.c = plt2_p2.c))
                                 ->  Sort
                                       Output: plt1_p2.a, plt1_p2.c
                                       Sort Key: plt1_p2.a, plt1_p2.c
                                       ->  Index Scan using iplt1_p2_c on pwj_extra.plt1_p2
                                             Output: plt1_p2.a, plt1_p2.c
                                             Filter: ((plt1_p2.a % 25) = 0)
                                 ->  Sort
                                       Output: plt2_p2.b, plt2_p2.c
                                       Sort Key: plt2_p2.b, plt2_p2.c
                                       ->  Index Scan using iplt2_p2_c on pwj_extra.plt2_p2
                                             Output: plt2_p2.b, plt2_p2.c
                                             Filter: ((plt2_p2.b % 25) = 0)
                     ->  Sort
                           Output: plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c, (ltrim(plt1_e_p2.c, 'A'::text))
                           Sort Key: plt1_e_p2.a, (ltrim(plt1_e_p2.c, 'A'::text))
                           ->  Index Scan using iplt1_e_p2_c on pwj_extra.plt1_e_p2
                                 Output: plt1_e_p2.a, plt1_e_p2.b, plt1_e_p2.c, ltrim(plt1_e_p2.c, 'A'::text)
                                 Filter: ((plt1_e_p2.a % 25) = 0)
               ->  Merge Full Join
                     Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c, plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c
                     Merge Cond: ((plt1_p3.a = plt1_e_p3.a) AND (plt1_p3.c = (ltrim(plt1_e_p3.c, 'A'::text))))
                     ->  Sort
                           Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
                           Sort Key: plt1_p3.a, plt1_p3.c
                           ->  Merge Full Join
                                 Output: plt1_p3.a, plt1_p3.c, plt2_p3.b, plt2_p3.c
                                 Merge Cond: ((plt1_p3.a = plt2_p3.b) AND (plt1_p3.c = plt2_p3.c))
                                 ->  Sort
                                       Output: plt1_p3.a, plt1_p3.c
                                       Sort Key: plt1_p3.a, plt1_p3.c
                                       ->  Index Scan using iplt1_p3_c on pwj_extra.plt1_p3
                                             Output: plt1_p3.a, plt1_p3.c
                                             Filter: ((plt1_p3.a % 25) = 0)
                                 ->  Sort
                                       Output: plt2_p3.b, plt2_p3.c
                                       Sort Key: plt2_p3.b, plt2_p3.c
                                       ->  Index Scan using iplt2_p3_c on pwj_extra.plt2_p3
                                             Output: plt2_p3.b, plt2_p3.c
                                             Filter: ((plt2_p3.b % 25) = 0)
                     ->  Sort
                           Output: plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c, (ltrim(plt1_e_p3.c, 'A'::text))
                           Sort Key: plt1_e_p3.a, (ltrim(plt1_e_p3.c, 'A'::text))
                           ->  Index Scan using iplt1_e_p3_c on pwj_extra.plt1_e_p3
                                 Output: plt1_e_p3.a, plt1_e_p3.b, plt1_e_p3.c, ltrim(plt1_e_p3.c, 'A'::text)
                                 Filter: ((plt1_e_p3.a % 25) = 0)
(87 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM plt1 WHERE plt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2 WHERE plt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM plt1_e WHERE plt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
     |      |  75 | 0001 |          | 
     |      | 225 | 0004 |          | 
     |      | 375 | 0007 |          | 
     |      | 525 | 0010 |          | 
(16 rows)

SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM ((SELECT * FROM uplt1 WHERE uplt1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2 WHERE uplt2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c)) FULL JOIN (SELECT * FROM uplt1_e WHERE uplt1_e.a % 25 = 0) t3 ON (t1.a = t3.a AND ltrim(t3.c, 'A') = t1.c) ORDER BY t1.a, t2.b, t3.a + t3.b;
  a  |  c   |  b  |  c   | ?column? |   c   
-----+------+-----+------+----------+-------
   0 | 0000 |   0 | 0000 |        0 | A0000
  50 | 0001 |     |      |      100 | A0001
 100 | 0002 |     |      |      200 | A0002
 150 | 0003 | 150 | 0003 |      300 | A0003
 200 | 0004 |     |      |      400 | A0004
 250 | 0005 |     |      |      500 | A0005
 300 | 0006 | 300 | 0006 |      600 | A0006
 350 | 0007 |     |      |      700 | A0007
 400 | 0008 |     |      |      800 | A0008
 450 | 0009 | 450 | 0009 |      900 | A0009
 500 | 0010 |     |      |     1000 | A0010
 550 | 0011 |     |      |     1100 | A0011
     |      |  75 | 0001 |          | 
     |      | 225 | 0004 |          | 
     |      | 375 | 0007 |          | 
     |      | 525 | 0010 |          | 
(16 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM plt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Merge Semi Join
               Output: t1.a, t1.b, t1.c
               Merge Cond: (t1.c = t1_3.c)
               ->  Index Scan using iplt1_p1_c on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Merge Semi Join
                     Output: t1_3.c, t1_6.c
                     Merge Cond: (t1_3.c = ltrim(t1_6.c, 'A'::text))
                     ->  Index Only Scan using iplt2_p1_c on pwj_extra.plt2_p1 t1_3
                           Output: t1_3.c
                     ->  Index Scan using iplt1_e_p1_c on pwj_extra.plt1_e_p1 t1_6
                           Output: t1_6.c
                           Filter: ((t1_6.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Merge Cond: (t1_1.c = t1_4.c)
               ->  Index Scan using iplt1_p2_c on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Merge Semi Join
                     Output: t1_4.c, t1_7.c
                     Merge Cond: (t1_4.c = ltrim(t1_7.c, 'A'::text))
                     ->  Index Only Scan using iplt2_p2_c on pwj_extra.plt2_p2 t1_4
                           Output: t1_4.c
                     ->  Index Scan using iplt1_e_p2_c on pwj_extra.plt1_e_p2 t1_7
                           Output: t1_7.c
                           Filter: ((t1_7.a % 25) = 0)
         ->  Merge Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Merge Cond: (t1_2.c = t1_5.c)
               ->  Index Scan using iplt1_p3_c on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Merge Semi Join
                     Output: t1_5.c, t1_8.c
                     Merge Cond: (t1_5.c = ltrim(t1_8.c, 'A'::text))
                     ->  Index Only Scan using iplt2_p3_c on pwj_extra.plt2_p3 t1_5
                           Output: t1_5.c
                     ->  Index Scan using iplt1_e_p3_c on pwj_extra.plt1_e_p3 t1_8
                           Output: t1_8.c
                           Filter: ((t1_8.a % 25) = 0)
(46 rows)

SELECT t1.* FROM plt1 t1 WHERE t1.c IN (SELECT t1.c FROM plt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM plt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

SELECT t1.* FROM uplt1 t1 WHERE t1.c IN (SELECT t1.c FROM uplt2 t1 WHERE t1.c IN (SELECT ltrim(t1.c, 'A') FROM uplt1_e t1 WHERE t1.a % 25 = 0)) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 100 | 100 | 0002
 150 | 150 | 0003
 200 | 200 | 0004
 250 | 250 | 0005
 300 | 300 | 0006
 350 | 350 | 0007
 400 | 400 | 0008
 450 | 450 | 0009
 500 | 500 | 0010
 550 | 550 | 0011
(12 rows)

-- lateral references and parameterized paths
EXPLAIN (VERBOSE, COSTS OFF)
SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.c AS t2c, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Unique
   Output: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
   ->  Sort
         Output: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
         Sort Key: t1.a, t1.b, t1.c, t2.c, (LEAST(t1.c, t2.c, t3.c))
         ->  Nested Loop Left Join
               Output: t1.a, t1.b, t1.c, t2.c, t3.c, (LEAST(t1.c, t2.c, t3.c))
               ->  Append
                     ->  Index Scan using iplt1_p1_c on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Index Scan using iplt1_p2_c on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Index Scan using iplt1_p3_c on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Append
                     ->  Merge Join
                           Output: t2.c, t3.c, LEAST(t1.c, t2.c, t3.c)
                           Merge Cond: (t2.c = t3.c)
                           ->  Index Only Scan using iplt1_p1_c on pwj_extra.plt1_p1 t2
                                 Output: t2.c
                                 Index Cond: (t2.c = t1.c)
                           ->  Materialize
                                 Output: t3.c
                                 ->  Index Only Scan using iplt2_p1_c on pwj_extra.plt2_p1 t3
                                       Output: t3.c
                     ->  Merge Join
                           Output: t2_1.c, t3_1.c, LEAST(t1.c, t2_1.c, t3_1.c)
                           Merge Cond: (t2_1.c = t3_1.c)
                           ->  Index Only Scan using iplt1_p2_c on pwj_extra.plt1_p2 t2_1
                                 Output: t2_1.c
                                 Index Cond: (t2_1.c = t1.c)
                           ->  Materialize
                                 Output: t3_1.c
                                 ->  Index Only Scan using iplt2_p2_c on pwj_extra.plt2_p2 t3_1
                                       Output: t3_1.c
                     ->  Merge Join
                           Output: t2_2.c, t3_2.c, LEAST(t1.c, t2_2.c, t3_2.c)
                           Merge Cond: (t2_2.c = t3_2.c)
                           ->  Index Only Scan using iplt1_p3_c on pwj_extra.plt1_p3 t2_2
                                 Output: t2_2.c
                                 Index Cond: (t2_2.c = t1.c)
                           ->  Materialize
                                 Output: t3_2.c
                                 ->  Index Only Scan using iplt2_p3_c on pwj_extra.plt2_p3 t3_2
                                       Output: t3_2.c
(48 rows)

SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.c AS t2c, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2c  | t3c  | least 
-----+-----+------+------+------+-------
   0 |   0 | 0000 | 0000 | 0000 | 0000
  50 |  50 | 0001 | 0001 | 0001 | 0001
 100 | 100 | 0002 | 0002 | 0002 | 0002
 150 | 150 | 0003 | 0003 | 0003 | 0003
 200 | 200 | 0004 | 0004 | 0004 | 0004
 250 | 250 | 0005 | 0005 | 0005 | 0005
 300 | 300 | 0006 | 0006 | 0006 | 0006
 350 | 350 | 0007 | 0007 | 0007 | 0007
 400 | 400 | 0008 | 0008 | 0008 | 0008
 450 | 450 | 0009 | 0009 | 0009 | 0009
 500 | 500 | 0010 | 0010 | 0010 | 0010
 550 | 550 | 0011 | 0011 | 0011 | 0011
(12 rows)

--TODO - this query need to remove once testing done.
SELECT distinct * FROM uplt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.c AS t2c, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM uplt1 t2 JOIN uplt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.c = ss.t2c WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2c  | t3c  | least 
-----+-----+------+------+------+-------
   0 |   0 | 0000 | 0000 | 0000 | 0000
  50 |  50 | 0001 | 0001 | 0001 | 0001
 100 | 100 | 0002 | 0002 | 0002 | 0002
 150 | 150 | 0003 | 0003 | 0003 | 0003
 200 | 200 | 0004 | 0004 | 0004 | 0004
 250 | 250 | 0005 | 0005 | 0005 | 0005
 300 | 300 | 0006 | 0006 | 0006 | 0006
 350 | 350 | 0007 | 0007 | 0007 | 0007
 400 | 400 | 0008 | 0008 | 0008 | 0008
 450 | 450 | 0009 | 0009 | 0009 | 0009
 500 | 500 | 0010 | 0010 | 0010 | 0010
 550 | 550 | 0011 | 0011 | 0011 | 0011
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Unique
   Output: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
   ->  Sort
         Output: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
         Sort Key: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
         ->  Nested Loop Left Join
               Output: t1.a, t1.b, t1.c, t2.a, t3.c, (LEAST(t1.c, t2.c, t3.c))
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Append
                     ->  Merge Join
                           Output: t2.a, t3.c, LEAST(t1.c, t2.c, t3.c)
                           Merge Cond: (t2.c = t3.c)
                           ->  Index Scan using iplt1_p1_c on pwj_extra.plt1_p1 t2
                                 Output: t2.a, t2.c
                                 Filter: (t1.b = t2.a)
                           ->  Index Only Scan using iplt2_p1_c on pwj_extra.plt2_p1 t3
                                 Output: t3.c
                     ->  Merge Join
                           Output: t2_1.a, t3_1.c, LEAST(t1.c, t2_1.c, t3_1.c)
                           Merge Cond: (t2_1.c = t3_1.c)
                           ->  Index Scan using iplt1_p2_c on pwj_extra.plt1_p2 t2_1
                                 Output: t2_1.a, t2_1.c
                                 Filter: (t1.b = t2_1.a)
                           ->  Index Only Scan using iplt2_p2_c on pwj_extra.plt2_p2 t3_1
                                 Output: t3_1.c
                     ->  Merge Join
                           Output: t2_2.a, t3_2.c, LEAST(t1.c, t2_2.c, t3_2.c)
                           Merge Cond: (t2_2.c = t3_2.c)
                           ->  Index Scan using iplt1_p3_c on pwj_extra.plt1_p3 t2_2
                                 Output: t2_2.a, t2_2.c
                                 Filter: (t1.b = t2_2.a)
                           ->  Index Only Scan using iplt2_p3_c on pwj_extra.plt2_p3 t3_2
                                 Output: t3_2.c
(42 rows)

SELECT distinct * FROM plt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM plt1 t2 JOIN plt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2a | t3c  | least 
-----+-----+------+-----+------+-------
   0 |   0 | 0000 |   0 | 0000 | 0000
  50 |  50 | 0001 |  50 | 0001 | 0001
 100 | 100 | 0002 | 100 | 0002 | 0002
 150 | 150 | 0003 | 150 | 0003 | 0003
 200 | 200 | 0004 | 200 | 0004 | 0004
 250 | 250 | 0005 | 250 | 0005 | 0005
 300 | 300 | 0006 | 300 | 0006 | 0006
 350 | 350 | 0007 | 350 | 0007 | 0007
 400 | 400 | 0008 | 400 | 0008 | 0008
 450 | 450 | 0009 | 450 | 0009 | 0009
 500 | 500 | 0010 | 500 | 0010 | 0010
 550 | 550 | 0011 | 550 | 0011 | 0011
(12 rows)

--TODO - this query need to remove once testing done.
SELECT distinct * FROM uplt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.c AS t3c, least(t1.c,t2.c,t3.c) FROM uplt1 t2 JOIN uplt2 t3 ON (t2.c = t3.c)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY 1,2,3,4,5,6;
  a  |  b  |  c   | t2a | t3c  | least 
-----+-----+------+-----+------+-------
   0 |   0 | 0000 |   0 | 0000 | 0000
  50 |  50 | 0001 |  50 | 0001 | 0001
 100 | 100 | 0002 | 100 | 0002 | 0002
 150 | 150 | 0003 | 150 | 0003 | 0003
 200 | 200 | 0004 | 200 | 0004 | 0004
 250 | 250 | 0005 | 250 | 0005 | 0005
 300 | 300 | 0006 | 300 | 0006 | 0006
 350 | 350 | 0007 | 350 | 0007 | 0007
 400 | 400 | 0008 | 400 | 0008 | 0008
 450 | 450 | 0009 | 450 | 0009 | 0009
 500 | 500 | 0010 | 500 | 0010 | 0010
 550 | 550 | 0011 | 550 | 0011 | 0011
(12 rows)

RESET enable_hashjoin;
RESET enable_nestloop;
RESET enable_seqscan;
--
-- negative testcases
--
-- joins where one of the relations is proven empty
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1, plt2 t2 WHERE t1.a = t2.b AND t1.a = 1 AND t1.a = 2;
            QUERY PLAN            
----------------------------------
 Result
   Output: t1.a, t1.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1 t1, plt2 t2 WHERE t1.a = t2.b AND t1.a = 1 AND t1.a = 2;
 a | c | b | c 
---+---+---+---
(0 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE a = 1 AND a = 2) t1 LEFT JOIN plt2 t2 ON t1.a = t2.b;
              QUERY PLAN              
--------------------------------------
 Result
   Output: plt1.a, plt1.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE a = 1 AND a = 2) t1 LEFT JOIN plt2 t2 ON t1.a = t2.b;
 a | c | b | c 
---+---+---+---
(0 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE a = 1 AND a = 2) t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                      QUERY PLAN                      
------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: (t2.b = a)
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
                     Filter: ((t2_2.a % 25) = 0)
         ->  Hash
               Output: a, c
               ->  Result
                     Output: a, c
                     One-Time Filter: false
(21 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE a = 1 AND a = 2) t1 RIGHT JOIN plt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1 WHERE a = 1 AND a = 2) t1 RIGHT JOIN uplt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE a = 1 AND a = 2) t1 FULL JOIN plt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                      QUERY PLAN                      
------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: (t2.b = a)
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
                     Filter: ((t2_2.a % 25) = 0)
         ->  Hash
               Output: a, c
               ->  Result
                     Output: a, c
                     One-Time Filter: false
(21 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1 WHERE a = 1 AND a = 2) t1 FULL JOIN plt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1 WHERE a = 1 AND a = 2) t1 FULL JOIN uplt2 t2 ON t1.a = t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

-- Cases with non-nullable expressions in subquery results;
-- make sure these go to null as expected
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM (SELECT 50 phv, * FROM prt1_l WHERE prt1_l.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2_l WHERE prt2_l.b % 25 = 0) t2 ON (t1.a = t2.b and t1.b = t2.a and t1.c = t2.c and t2.a + t2.b = t1.b + t1.a) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY 1,2,3,4,5,6,7,8;
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: (50), prt1_l_p1.a, prt1_l_p1.b, prt1_l_p1.c, (75), prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c
   Sort Key: (50), prt1_l_p1.a, prt1_l_p1.b, prt1_l_p1.c, (75), prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c
   ->  Hash Full Join
         Output: (50), prt1_l_p1.a, prt1_l_p1.b, prt1_l_p1.c, (75), prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c
         Hash Cond: ((prt1_l_p1.a = prt2_l_p1.b) AND (prt1_l_p1.b = prt2_l_p1.a) AND ((prt1_l_p1.c)::text = (prt2_l_p1.c)::text) AND ((prt1_l_p1.b + prt1_l_p1.a) = (prt2_l_p1.a + prt2_l_p1.b)))
         Filter: (((50) = prt1_l_p1.b) OR ((75) = prt2_l_p1.b))
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1
                     Output: prt1_l_p1.a, prt1_l_p1.b, prt1_l_p1.c, 50
                     Filter: ((prt1_l_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1
                     Output: prt1_l_p2_p1.a, prt1_l_p2_p1.b, prt1_l_p2_p1.c, 50
                     Filter: ((prt1_l_p2_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2
                     Output: prt1_l_p2_p2.a, prt1_l_p2_p2.b, prt1_l_p2_p2.c, 50
                     Filter: ((prt1_l_p2_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p1
                     Output: prt1_l_p3_p1.a, prt1_l_p3_p1.b, prt1_l_p3_p1.c, 50
                     Filter: ((prt1_l_p3_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p2
                     Output: prt1_l_p3_p2.a, prt1_l_p3_p2.b, prt1_l_p3_p2.c, 50
                     Filter: ((prt1_l_p3_p2.a % 25) = 0)
         ->  Hash
               Output: prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c, (75)
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1
                           Output: prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c, 75
                           Filter: ((prt2_l_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                           Output: prt2_l_p2_p1.a, prt2_l_p2_p1.b, prt2_l_p2_p1.c, 75
                           Filter: ((prt2_l_p2_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                           Output: prt2_l_p2_p2.a, prt2_l_p2_p2.b, prt2_l_p2_p2.c, 75
                           Filter: ((prt2_l_p2_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1
                           Output: prt2_l_p3_p1.a, prt2_l_p3_p1.b, prt2_l_p3_p1.c, 75
                           Filter: ((prt2_l_p3_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2
                           Output: prt2_l_p3_p2.a, prt2_l_p3_p2.b, prt2_l_p3_p2.c, 75
                           Filter: ((prt2_l_p3_p2.b % 25) = 0)
(41 rows)

SELECT * FROM (SELECT 50 phv, * FROM prt1_l WHERE prt1_l.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2_l WHERE prt2_l.b % 25 = 0) t2 ON (t1.a = t2.b and t1.b = t2.a and t1.c = t2.c and t2.a + t2.b = t1.b + t1.a) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY 1,2,3,4,5,6,7,8;
 phv | a  | b  |  c   | phv | a  | b  |  c   
-----+----+----+------+-----+----+----+------
  50 | 50 | 50 | 0050 |     |    |    | 
     |    |    |      |  75 | 75 | 75 | 0075
(2 rows)

--TODO - this query need to remove once testing done.
SELECT * FROM (SELECT 50 phv, * FROM uprt1_l WHERE uprt1_l.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM uprt2_l WHERE uprt2_l.b % 25 = 0) t2 ON (t1.a = t2.b and t1.b = t2.a and t1.c = t2.c and t2.a + t2.b = t1.b + t1.a) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY 1,2,3,4,5,6,7,8;
 phv | a  | b  |  c   | phv | a  | b  |  c   
-----+----+----+------+-----+----+----+------
  50 | 50 | 50 | 0050 |     |    |    | 
     |    |    |      |  75 | 75 | 75 | 0075
(2 rows)

-- Join with pruned partitions from joining relations
EXPLAIN (VERBOSE, COSTS OFF) 
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2
                           Output: t2.b, t2.c, t2.a
                           Filter: (t2.b > 250)
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_1
                           Output: t2_1.b, t2_1.c, t2_1.a
                           Filter: (t2_1.b > 250)
               ->  Hash
                     Output: t1.a, t1.c, t1.b
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1
                                 Output: t1.a, t1.c, t1.b
                                 Filter: ((t1.a < 450) AND ((t1.a % 25) = 0))
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_1
                                 Output: t1_1.a, t1_1.c, t1_1.b
                                 Filter: ((t1_1.a < 450) AND ((t1_1.a % 25) = 0))
(23 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
(1 row)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM uprt1_l t1, uprt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
(1 row)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_l_p1.a, prt1_l_p1.c, b, c
   Sort Key: prt1_l_p1.a, b
   ->  Append
         ->  Nested Loop Left Join
               Output: prt1_l_p1.a, prt1_l_p1.c, b, c
               Join Filter: ((prt1_l_p1.a = b) AND (prt1_l_p1.b = a) AND ((prt1_l_p1.c)::text = (c)::text) AND ((prt1_l_p1.b + prt1_l_p1.a) = (a + b)))
               ->  Seq Scan on pwj_extra.prt1_l_p1
                     Output: prt1_l_p1.a, prt1_l_p1.c, prt1_l_p1.b
                     Filter: ((prt1_l_p1.a < 450) AND ((prt1_l_p1.a % 25) = 0))
               ->  Result
                     Output: b, c, a
                     One-Time Filter: false
         ->  Hash Right Join
               Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt2_l_p2_p1.b, prt2_l_p2_p1.c
               Hash Cond: ((prt2_l_p2_p1.b = prt1_l_p2_p1.a) AND (prt2_l_p2_p1.a = prt1_l_p2_p1.b) AND ((prt2_l_p2_p1.c)::text = (prt1_l_p2_p1.c)::text) AND ((prt2_l_p2_p1.a + prt2_l_p2_p1.b) = (prt1_l_p2_p1.b + prt1_l_p2_p1.a)))
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                     Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c, prt2_l_p2_p1.a
                     Filter: (prt2_l_p2_p1.b > 250)
               ->  Hash
                     Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt1_l_p2_p1.b
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1
                           Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt1_l_p2_p1.b
                           Filter: ((prt1_l_p2_p1.a < 450) AND ((prt1_l_p2_p1.a % 25) = 0))
         ->  Hash Right Join
               Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c, prt2_l_p2_p2.b, prt2_l_p2_p2.c
               Hash Cond: ((prt2_l_p2_p2.b = prt1_l_p2_p2.a) AND (prt2_l_p2_p2.a = prt1_l_p2_p2.b) AND ((prt2_l_p2_p2.c)::text = (prt1_l_p2_p2.c)::text) AND ((prt2_l_p2_p2.a + prt2_l_p2_p2.b) = (prt1_l_p2_p2.b + prt1_l_p2_p2.a)))
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                     Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c, prt2_l_p2_p2.a
                     Filter: (prt2_l_p2_p2.b > 250)
               ->  Hash
                     Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c, prt1_l_p2_p2.b
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2
                           Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c, prt1_l_p2_p2.b
                           Filter: ((prt1_l_p2_p2.a < 450) AND ((prt1_l_p2_p2.a % 25) = 0))
(35 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
(9 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_l WHERE a < 450) t1 LEFT JOIN (SELECT * FROM uprt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
(9 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM prt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt2_l_p2_p1.b, prt2_l_p2_p1.c
   Sort Key: prt1_l_p2_p1.a, prt2_l_p2_p1.b
   ->  Result
         Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt2_l_p2_p1.b, prt2_l_p2_p1.c
         ->  Append
               ->  Hash Right Join
                     Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c, prt1_l_p2_p1.a, prt1_l_p2_p1.c
                     Hash Cond: ((prt1_l_p2_p1.a = prt2_l_p2_p1.b) AND (prt1_l_p2_p1.b = prt2_l_p2_p1.a) AND ((prt1_l_p2_p1.c)::text = (prt2_l_p2_p1.c)::text) AND ((prt1_l_p2_p1.b + prt1_l_p2_p1.a) = (prt2_l_p2_p1.a + prt2_l_p2_p1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1
                           Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt1_l_p2_p1.b
                           Filter: (prt1_l_p2_p1.a < 450)
                     ->  Hash
                           Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c, prt2_l_p2_p1.a
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                                 Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c, prt2_l_p2_p1.a
                                 Filter: ((prt2_l_p2_p1.b > 250) AND ((prt2_l_p2_p1.a % 25) = 0))
               ->  Hash Right Join
                     Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c, prt1_l_p2_p2.a, prt1_l_p2_p2.c
                     Hash Cond: ((prt1_l_p2_p2.a = prt2_l_p2_p2.b) AND (prt1_l_p2_p2.b = prt2_l_p2_p2.a) AND ((prt1_l_p2_p2.c)::text = (prt2_l_p2_p2.c)::text) AND ((prt1_l_p2_p2.b + prt1_l_p2_p2.a) = (prt2_l_p2_p2.a + prt2_l_p2_p2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2
                           Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c, prt1_l_p2_p2.b
                           Filter: (prt1_l_p2_p2.a < 450)
                     ->  Hash
                           Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c, prt2_l_p2_p2.a
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                                 Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c, prt2_l_p2_p2.a
                                 Filter: ((prt2_l_p2_p2.b > 250) AND ((prt2_l_p2_p2.a % 25) = 0))
               ->  Hash Left Join
                     Output: prt2_l_p3_p1.b, prt2_l_p3_p1.c, a, c
                     Hash Cond: ((prt2_l_p3_p1.b = a) AND (prt2_l_p3_p1.a = b) AND ((prt2_l_p3_p1.c)::text = (c)::text) AND ((prt2_l_p3_p1.a + prt2_l_p3_p1.b) = (b + a)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1
                                 Output: prt2_l_p3_p1.b, prt2_l_p3_p1.c, prt2_l_p3_p1.a
                                 Filter: ((prt2_l_p3_p1.b > 250) AND ((prt2_l_p3_p1.a % 25) = 0))
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2
                                 Output: prt2_l_p3_p2.b, prt2_l_p3_p2.c, prt2_l_p3_p2.a
                                 Filter: ((prt2_l_p3_p2.b > 250) AND ((prt2_l_p3_p2.a % 25) = 0))
                     ->  Hash
                           Output: a, c, b
                           ->  Result
                                 Output: a, c, b
                                 One-Time Filter: false
(43 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM prt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_l WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM uprt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0300 | 300 | 0300
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b ORDER BY t1.a, t2.b;
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_l_p1.a, prt1_l_p1.c, prt2_l_p2_p1.b, prt2_l_p2_p1.c
   Sort Key: prt1_l_p1.a, prt2_l_p2_p1.b
   ->  Hash Full Join
         Output: prt1_l_p1.a, prt1_l_p1.c, prt2_l_p2_p1.b, prt2_l_p2_p1.c
         Hash Cond: ((prt1_l_p1.a = prt2_l_p2_p1.b) AND (prt1_l_p1.b = prt2_l_p2_p1.a) AND ((prt1_l_p1.c)::text = (prt2_l_p2_p1.c)::text) AND ((prt1_l_p1.b + prt1_l_p1.a) = (prt2_l_p2_p1.a + prt2_l_p2_p1.b)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1
                     Output: prt1_l_p1.a, prt1_l_p1.c, prt1_l_p1.b
                     Filter: ((prt1_l_p1.a < 450) AND ((prt1_l_p1.a % 25) = 0))
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1
                     Output: prt1_l_p2_p1.a, prt1_l_p2_p1.c, prt1_l_p2_p1.b
                     Filter: ((prt1_l_p2_p1.a < 450) AND ((prt1_l_p2_p1.a % 25) = 0))
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2
                     Output: prt1_l_p2_p2.a, prt1_l_p2_p2.c, prt1_l_p2_p2.b
                     Filter: ((prt1_l_p2_p2.a < 450) AND ((prt1_l_p2_p2.a % 25) = 0))
         ->  Hash
               Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c, prt2_l_p2_p1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                           Output: prt2_l_p2_p1.b, prt2_l_p2_p1.c, prt2_l_p2_p1.a
                           Filter: ((prt2_l_p2_p1.b > 250) AND ((prt2_l_p2_p1.b % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                           Output: prt2_l_p2_p2.b, prt2_l_p2_p2.c, prt2_l_p2_p2.a
                           Filter: ((prt2_l_p2_p2.b > 250) AND ((prt2_l_p2_p2.b % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1
                           Output: prt2_l_p3_p1.b, prt2_l_p3_p1.c, prt2_l_p3_p1.a
                           Filter: ((prt2_l_p3_p1.b > 250) AND ((prt2_l_p3_p1.b % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2
                           Output: prt2_l_p3_p2.b, prt2_l_p3_p2.c, prt2_l_p3_p2.a
                           Filter: ((prt2_l_p3_p2.b > 250) AND ((prt2_l_p3_p2.b % 25) = 0))
(31 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(12 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_l WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM uprt2_l WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
     |      | 375 | 0375
     |      | 450 | 0450
     |      | 525 | 0525
(12 rows)

-- Semi-join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM prt1_l t1 WHERE t1.a IN (SELECT t1.b FROM prt2_l t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: (t1.a = t1_5.b)
               ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p1 t1_5
                     Output: t1_5.b
                     Filter: ((t1_5.b % 25) = 0)
         ->  Merge Semi Join
               Output: t1_1.a, t1_1.b, t1_1.c
               Merge Cond: (t1_1.a = t1_6.b)
               ->  Sort
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Sort Key: t1_1.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
               ->  Sort
                     Output: t1_6.b
                     Sort Key: t1_6.b
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t1_6
                                 Output: t1_6.b
                                 Filter: ((t1_6.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t1_7
                                 Output: t1_7.b
                                 Filter: ((t1_7.b % 25) = 0)
         ->  Merge Semi Join
               Output: t1_3.a, t1_3.b, t1_3.c
               Merge Cond: (t1_3.a = t1_8.b)
               ->  Sort
                     Output: t1_3.a, t1_3.b, t1_3.c
                     Sort Key: t1_3.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
               ->  Sort
                     Output: t1_8.b
                     Sort Key: t1_8.b
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t1_8
                                 Output: t1_8.b
                                 Filter: ((t1_8.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t1_9
                                 Output: t1_9.b
                                 Filter: ((t1_9.b % 25) = 0)
(59 rows)

SELECT t1.* FROM prt1_l t1 WHERE t1.a IN (SELECT t1.b FROM prt2_l t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.* FROM uprt1_l t1 WHERE t1.a IN (SELECT t1.b FROM uprt2_l t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0150
 300 | 300 | 0300
 450 | 450 | 0450
(4 rows)

--
-- negative testcases
--
-- joins where one of the relations is proven empty
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b AND t1.a = 1 AND t1.a = 2;
            QUERY PLAN            
----------------------------------
 Result
   Output: t1.a, t1.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b AND t1.a = 1 AND t1.a = 2;
 a | c | b | c 
---+---+---+---
(0 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b;
                QUERY PLAN                
------------------------------------------
 Result
   Output: prt1_l.a, prt1_l.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b;
 a | c | b | c 
---+---+---+---
(0 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                 QUERY PLAN                                                  
-------------------------------------------------------------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: ((t2.b = a) AND (t2.a = b) AND ((t2.c)::text = (c)::text) AND ((t2.a + t2.b) = (b + a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.c, t2.a
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
                     Filter: ((t2_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
                     Filter: ((t2_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
                     Filter: ((t2_4.a % 25) = 0)
         ->  Hash
               Output: a, c, b
               ->  Result
                     Output: a, c, b
                     One-Time Filter: false
(27 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0075
   |   | 150 | 0150
   |   | 225 | 0225
   |   | 300 | 0300
   |   | 375 | 0375
   |   | 450 | 0450
   |   | 525 | 0525
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN uprt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0075
   |   | 150 | 0150
   |   | 225 | 0225
   |   | 300 | 0300
   |   | 375 | 0375
   |   | 450 | 0450
   |   | 525 | 0525
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 FULL JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                 QUERY PLAN                                                  
-------------------------------------------------------------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: ((t2.b = a) AND (t2.a = b) AND ((t2.c)::text = (c)::text) AND ((t2.a + t2.b) = (b + a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.c, t2.a
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
                     Filter: ((t2_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
                     Filter: ((t2_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
                     Filter: ((t2_4.a % 25) = 0)
         ->  Hash
               Output: a, c, b
               ->  Result
                     Output: a, c, b
                     One-Time Filter: false
(27 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 FULL JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0075
   |   | 150 | 0150
   |   | 225 | 0225
   |   | 300 | 0300
   |   | 375 | 0375
   |   | 450 | 0450
   |   | 525 | 0525
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uprt1_l WHERE a = 1 AND a = 2) t1 FULL JOIN uprt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0075
   |   | 150 | 0150
   |   | 225 | 0225
   |   | 300 | 0300
   |   | 375 | 0375
   |   | 450 | 0450
   |   | 525 | 0525
(8 rows)

--creating test data set for multi-level list partitioning
CREATE TABLE plt1_l (a int, b int, c varchar) PARTITION BY LIST(c);
CREATE TABLE plt1_l_p1 PARTITION OF plt1_l FOR VALUES IN ('0000', '0003', '0004', '0010') PARTITION BY LIST (c);
CREATE TABLE plt1_l_p1_p1 PARTITION OF plt1_l_p1 FOR VALUES IN ('0000', '0003');
CREATE TABLE plt1_l_p1_p2 PARTITION OF plt1_l_p1 FOR VALUES IN ('0004', '0010');
CREATE TABLE plt1_l_p2 PARTITION OF plt1_l FOR VALUES IN ('0001', '0005', '0002', '0009') PARTITION BY LIST (c);
CREATE TABLE plt1_l_p2_p1 PARTITION OF plt1_l_p2 FOR VALUES IN ('0001', '0005');
CREATE TABLE plt1_l_p2_p2 PARTITION OF plt1_l_p2 FOR VALUES IN ('0002', '0009');
CREATE TABLE plt1_l_p3 PARTITION OF plt1_l FOR VALUES IN ('0006', '0007', '0008', '0011') PARTITION BY LIST (ltrim(c,'A'));
CREATE TABLE plt1_l_p3_p1 PARTITION OF plt1_l_p3 FOR VALUES IN ('0006', '0007');
CREATE TABLE plt1_l_p3_p2 PARTITION OF plt1_l_p3 FOR VALUES IN ('0008', '0011');
INSERT INTO plt1_l SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i;
ANALYZE plt1_l;
ANALYZE plt1_l_p1;
ANALYZE plt1_l_p1_p1;
ANALYZE plt1_l_p1_p2;
ANALYZE plt1_l_p2;
ANALYZE plt1_l_p2_p1;
ANALYZE plt1_l_p2_p2;
ANALYZE plt1_l_p3;
ANALYZE plt1_l_p3_p1;
ANALYZE plt1_l_p3_p2;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uplt1_l AS SELECT * FROM plt1_l;
CREATE TABLE plt2_l (a int, b int, c varchar) PARTITION BY LIST(c);
CREATE TABLE plt2_l_p1 PARTITION OF plt2_l FOR VALUES IN ('0000', '0003', '0004', '0010') PARTITION BY LIST (c);
CREATE TABLE plt2_l_p1_p1 PARTITION OF plt2_l_p1 FOR VALUES IN ('0000', '0003');
CREATE TABLE plt2_l_p1_p2 PARTITION OF plt2_l_p1 FOR VALUES IN ('0004', '0010');
CREATE TABLE plt2_l_p2 PARTITION OF plt2_l FOR VALUES IN ('0001', '0005', '0002', '0009') PARTITION BY LIST (c);
CREATE TABLE plt2_l_p2_p1 PARTITION OF plt2_l_p2 FOR VALUES IN ('0001', '0005');
CREATE TABLE plt2_l_p2_p2 PARTITION OF plt2_l_p2 FOR VALUES IN ('0002', '0009');
CREATE TABLE plt2_l_p3 PARTITION OF plt2_l FOR VALUES IN ('0006', '0007', '0008', '0011') PARTITION BY LIST (ltrim(c,'A'));
CREATE TABLE plt2_l_p3_p1 PARTITION OF plt2_l_p3 FOR VALUES IN ('0006', '0007');
CREATE TABLE plt2_l_p3_p2 PARTITION OF plt2_l_p3 FOR VALUES IN ('0008', '0011');
INSERT INTO plt2_l SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i;
ANALYZE plt2_l;
ANALYZE plt2_l_p1;
ANALYZE plt2_l_p1_p1;
ANALYZE plt2_l_p1_p2;
ANALYZE plt2_l_p2;
ANALYZE plt2_l_p2_p1;
ANALYZE plt2_l_p2_p2;
ANALYZE plt2_l_p3;
ANALYZE plt2_l_p3_p1;
ANALYZE plt2_l_p3_p2;
-- TODO: This table is created only for testing the results. Remove once
-- results are tested.
CREATE TABLE uplt2_l AS SELECT * FROM plt2_l;
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1, plt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
(40 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1, plt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_l t1, uplt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1 LEFT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Append
         ->  Hash Right Join
               Output: t1.a, t1.c, t2.b, t2.c
               Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Hash
                     Output: t1.a, t1.c, t1.b
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c
               Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.a = t1_1.b) AND ((t2_1.c)::text = (t1_1.c)::text) AND (ltrim((t2_1.c)::text, 'A'::text) = ltrim((t1_1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Hash
                     Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c
               Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.a = t1_2.b) AND ((t2_2.c)::text = (t1_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t1_2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Hash
                     Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_3.a, t1_3.c, t2_3.b, t2_3.c
               Hash Cond: ((t2_3.b = t1_3.a) AND (t2_3.a = t1_3.b) AND ((t2_3.c)::text = (t1_3.c)::text) AND (ltrim((t2_3.c)::text, 'A'::text) = ltrim((t1_3.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
               ->  Hash
                     Output: t1_3.a, t1_3.c, t1_3.b
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_4.a, t1_4.c, t2_4.b, t2_4.c
               Hash Cond: ((t2_4.b = t1_4.a) AND (t2_4.a = t1_4.b) AND ((t2_4.c)::text = (t1_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t1_4.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
               ->  Hash
                     Output: t1_4.a, t1_4.c, t1_4.b
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
         ->  Hash Right Join
               Output: t1_5.a, t1_5.c, t2_5.b, t2_5.c
               Hash Cond: ((t2_5.b = t1_5.a) AND (t2_5.a = t1_5.b) AND ((t2_5.c)::text = (t1_5.c)::text) AND (ltrim((t2_5.c)::text, 'A'::text) = ltrim((t1_5.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
               ->  Hash
                     Output: t1_5.a, t1_5.c, t1_5.b
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
(64 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1 LEFT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
(12 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_l t1 LEFT JOIN uplt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1 RIGHT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
(40 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1 RIGHT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_l t1 RIGHT JOIN uplt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE plt1_l.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2_l WHERE plt2_l.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) ORDER BY t1.a, t2.b;
                                                                                                                     QUERY PLAN                                                                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: plt1_l_p1_p1.a, plt2_l_p1_p1.b
   ->  Append
         ->  Hash Full Join
               Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
               Hash Cond: ((plt1_l_p1_p1.a = plt2_l_p1_p1.b) AND (plt1_l_p1_p1.b = plt2_l_p1_p1.a) AND ((plt1_l_p1_p1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((plt1_l_p1_p1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1
                     Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt1_l_p1_p1.b
                     Filter: ((plt1_l_p1_p1.a % 25) = 0)
               ->  Hash
                     Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                           Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                           Filter: ((plt2_l_p1_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt2_l_p1_p2.b, plt2_l_p1_p2.c
               Hash Cond: ((plt1_l_p1_p2.a = plt2_l_p1_p2.b) AND (plt1_l_p1_p2.b = plt2_l_p1_p2.a) AND ((plt1_l_p1_p2.c)::text = (plt2_l_p1_p2.c)::text) AND (ltrim((plt1_l_p1_p2.c)::text, 'A'::text) = ltrim((plt2_l_p1_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2
                     Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt1_l_p1_p2.b
                     Filter: ((plt1_l_p1_p2.a % 25) = 0)
               ->  Hash
                     Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                           Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                           Filter: ((plt2_l_p1_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt2_l_p2_p1.b, plt2_l_p2_p1.c
               Hash Cond: ((plt1_l_p2_p1.a = plt2_l_p2_p1.b) AND (plt1_l_p2_p1.b = plt2_l_p2_p1.a) AND ((plt1_l_p2_p1.c)::text = (plt2_l_p2_p1.c)::text) AND (ltrim((plt1_l_p2_p1.c)::text, 'A'::text) = ltrim((plt2_l_p2_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1
                     Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt1_l_p2_p1.b
                     Filter: ((plt1_l_p2_p1.a % 25) = 0)
               ->  Hash
                     Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                           Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                           Filter: ((plt2_l_p2_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt2_l_p2_p2.b, plt2_l_p2_p2.c
               Hash Cond: ((plt1_l_p2_p2.a = plt2_l_p2_p2.b) AND (plt1_l_p2_p2.b = plt2_l_p2_p2.a) AND ((plt1_l_p2_p2.c)::text = (plt2_l_p2_p2.c)::text) AND (ltrim((plt1_l_p2_p2.c)::text, 'A'::text) = ltrim((plt2_l_p2_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2
                     Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt1_l_p2_p2.b
                     Filter: ((plt1_l_p2_p2.a % 25) = 0)
               ->  Hash
                     Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                           Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                           Filter: ((plt2_l_p2_p2.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt2_l_p3_p1.b, plt2_l_p3_p1.c
               Hash Cond: ((plt1_l_p3_p1.a = plt2_l_p3_p1.b) AND (plt1_l_p3_p1.b = plt2_l_p3_p1.a) AND ((plt1_l_p3_p1.c)::text = (plt2_l_p3_p1.c)::text) AND (ltrim((plt1_l_p3_p1.c)::text, 'A'::text) = ltrim((plt2_l_p3_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1
                     Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt1_l_p3_p1.b
                     Filter: ((plt1_l_p3_p1.a % 25) = 0)
               ->  Hash
                     Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                           Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                           Filter: ((plt2_l_p3_p1.b % 25) = 0)
         ->  Hash Full Join
               Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt2_l_p3_p2.b, plt2_l_p3_p2.c
               Hash Cond: ((plt1_l_p3_p2.a = plt2_l_p3_p2.b) AND (plt1_l_p3_p2.b = plt2_l_p3_p2.a) AND ((plt1_l_p3_p2.c)::text = (plt2_l_p3_p2.c)::text) AND (ltrim((plt1_l_p3_p2.c)::text, 'A'::text) = ltrim((plt2_l_p3_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2
                     Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt1_l_p3_p2.b
                     Filter: ((plt1_l_p3_p2.a % 25) = 0)
               ->  Hash
                     Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                           Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                           Filter: ((plt2_l_p3_p2.b % 25) = 0)
(70 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE plt1_l.a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2_l WHERE plt2_l.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
     |      |  75 | 0001
     |      | 225 | 0004
     |      | 375 | 0007
     |      | 525 | 0010
(16 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_l t1 WHERE t1.a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2_l t2 WHERE t2.b % 25 = 0) t2 ON (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 | 150 | 0003
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
 450 | 0009 | 450 | 0009
 500 | 0010 |     | 
 550 | 0011 |     | 
     |      |  75 | 0001
     |      | 225 | 0004
     |      | 375 | 0007
     |      | 525 | 0010
(16 rows)

-- lateral reference
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM plt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.c,t2.c,t3.c) FROM plt1_l t2 JOIN plt2_l t3 ON (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A'))) ss
			  ON t1.a = ss.t2a AND t1.b = ss.t2a AND t1.c = ss.t2c AND ltrim(t1.c,'A') = ltrim(ss.t2c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.c, t2.c, t3.c)), t1.a
   Sort Key: t1.a
   ->  Result
         Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.c, t2.c, t3.c)), t1.a
         ->  Append
               ->  Nested Loop Left Join
                     Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.c, t2.c, t3.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2.a, t2.c, t2.b, t3.a, LEAST(t1.c, t2.c, t3.c)
                           Hash Cond: ((t3.b = t2.a) AND (t3.a = t2.b) AND ((t3.c)::text = (t2.c)::text) AND (ltrim((t3.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t3
                                 Output: t3.a, t3.b, t3.c
                           ->  Hash
                                 Output: t2.a, t2.c, t2.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t2
                                       Output: t2.a, t2.c, t2.b
                                       Filter: ((t1.a = t2.a) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t2_1.c, t2_1.b, t3_1.a, (LEAST(t1_1.c, t2_1.c, t3_1.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_1.a, t2_1.c, t2_1.b, t3_1.a, LEAST(t1_1.c, t2_1.c, t3_1.c)
                           Hash Cond: ((t3_1.b = t2_1.a) AND (t3_1.a = t2_1.b) AND ((t3_1.c)::text = (t2_1.c)::text) AND (ltrim((t3_1.c)::text, 'A'::text) = ltrim((t2_1.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t3_1
                                 Output: t3_1.a, t3_1.b, t3_1.c
                           ->  Hash
                                 Output: t2_1.a, t2_1.c, t2_1.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t2_1
                                       Output: t2_1.a, t2_1.c, t2_1.b
                                       Filter: ((t1_1.a = t2_1.a) AND (t1_1.b = t2_1.a) AND ((t1_1.c)::text = (t2_1.c)::text) AND (ltrim((t1_1.c)::text, 'A'::text) = ltrim((t2_1.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t2_2.c, t2_2.b, t3_2.a, (LEAST(t1_2.c, t2_2.c, t3_2.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_2.a, t2_2.c, t2_2.b, t3_2.a, LEAST(t1_2.c, t2_2.c, t3_2.c)
                           Hash Cond: ((t3_2.b = t2_2.a) AND (t3_2.a = t2_2.b) AND ((t3_2.c)::text = (t2_2.c)::text) AND (ltrim((t3_2.c)::text, 'A'::text) = ltrim((t2_2.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t3_2
                                 Output: t3_2.a, t3_2.b, t3_2.c
                           ->  Hash
                                 Output: t2_2.a, t2_2.c, t2_2.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t2_2
                                       Output: t2_2.a, t2_2.c, t2_2.b
                                       Filter: ((t1_2.a = t2_2.a) AND (t1_2.b = t2_2.a) AND ((t1_2.c)::text = (t2_2.c)::text) AND (ltrim((t1_2.c)::text, 'A'::text) = ltrim((t2_2.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_3.a, t1_3.b, t1_3.c, t2_3.a, t2_3.c, t2_3.b, t3_3.a, (LEAST(t1_3.c, t2_3.c, t3_3.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_3.a, t2_3.c, t2_3.b, t3_3.a, LEAST(t1_3.c, t2_3.c, t3_3.c)
                           Hash Cond: ((t3_3.b = t2_3.a) AND (t3_3.a = t2_3.b) AND ((t3_3.c)::text = (t2_3.c)::text) AND (ltrim((t3_3.c)::text, 'A'::text) = ltrim((t2_3.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Hash
                                 Output: t2_3.a, t2_3.c, t2_3.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t2_3
                                       Output: t2_3.a, t2_3.c, t2_3.b
                                       Filter: ((t1_3.a = t2_3.a) AND (t1_3.b = t2_3.a) AND ((t1_3.c)::text = (t2_3.c)::text) AND (ltrim((t1_3.c)::text, 'A'::text) = ltrim((t2_3.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_4.a, t1_4.b, t1_4.c, t2_4.a, t2_4.c, t2_4.b, t3_4.a, (LEAST(t1_4.c, t2_4.c, t3_4.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_4.a, t2_4.c, t2_4.b, t3_4.a, LEAST(t1_4.c, t2_4.c, t3_4.c)
                           Hash Cond: ((t3_4.b = t2_4.a) AND (t3_4.a = t2_4.b) AND ((t3_4.c)::text = (t2_4.c)::text) AND (ltrim((t3_4.c)::text, 'A'::text) = ltrim((t2_4.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                           ->  Hash
                                 Output: t2_4.a, t2_4.c, t2_4.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t2_4
                                       Output: t2_4.a, t2_4.c, t2_4.b
                                       Filter: ((t1_4.a = t2_4.a) AND (t1_4.b = t2_4.a) AND ((t1_4.c)::text = (t2_4.c)::text) AND (ltrim((t1_4.c)::text, 'A'::text) = ltrim((t2_4.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_5.a, t1_5.b, t1_5.c, t2_5.a, t2_5.c, t2_5.b, t3_5.a, (LEAST(t1_5.c, t2_5.c, t3_5.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.b, t1_5.c
                           Filter: ((t1_5.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_5.a, t2_5.c, t2_5.b, t3_5.a, LEAST(t1_5.c, t2_5.c, t3_5.c)
                           Hash Cond: ((t3_5.b = t2_5.a) AND (t3_5.a = t2_5.b) AND ((t3_5.c)::text = (t2_5.c)::text) AND (ltrim((t3_5.c)::text, 'A'::text) = ltrim((t2_5.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t3_5
                                 Output: t3_5.a, t3_5.b, t3_5.c
                           ->  Hash
                                 Output: t2_5.a, t2_5.c, t2_5.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t2_5
                                       Output: t2_5.a, t2_5.c, t2_5.b
                                       Filter: ((t1_5.a = t2_5.a) AND (t1_5.b = t2_5.a) AND ((t1_5.c)::text = (t2_5.c)::text) AND (ltrim((t1_5.c)::text, 'A'::text) = ltrim((t2_5.c)::text, 'A'::text)))
(96 rows)

SELECT * FROM plt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.c,t2.c,t3.c) FROM plt1_l t2 JOIN plt2_l t3 ON (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A'))) ss
			  ON t1.a = ss.t2a AND t1.b = ss.t2a AND t1.c = ss.t2c AND ltrim(t1.c,'A') = ltrim(ss.t2c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |     |      |     |     | 
 100 | 100 | 0002 |     |      |     |     | 
 150 | 150 | 0003 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 |     |      |     |     | 
 250 | 250 | 0005 |     |      |     |     | 
 300 | 300 | 0006 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 |     |      |     |     | 
 400 | 400 | 0008 |     |      |     |     | 
 450 | 450 | 0009 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 |     |      |     |     | 
 550 | 550 | 0011 |     |      |     |     | 
(12 rows)

--TODO - this query need to remove once testing done.
SELECT * FROM uplt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.c,t2.c,t3.c) FROM uplt1_l t2 JOIN uplt2_l t3 ON (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A'))) ss
			  ON t1.a = ss.t2a AND t1.b = ss.t2a AND t1.c = ss.t2c AND ltrim(t1.c,'A') = ltrim(ss.t2c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |     |      |     |     | 
 100 | 100 | 0002 |     |      |     |     | 
 150 | 150 | 0003 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 |     |      |     |     | 
 250 | 250 | 0005 |     |      |     |     | 
 300 | 300 | 0006 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 |     |      |     |     | 
 400 | 400 | 0008 |     |      |     |     | 
 450 | 450 | 0009 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 |     |      |     |     | 
 550 | 550 | 0011 |     |      |     |     | 
(12 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM plt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.c,t2.c,t3.c) FROM plt1_l t2 JOIN plt2_l t3 ON (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A'))) ss
			  ON t1.b = ss.t2a AND t1.b = ss.t2a AND t1.c = ss.t2c AND ltrim(t1.c,'A') = ltrim(ss.t2c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.c, t2.c, t3.c)), t1.a
   Sort Key: t1.a
   ->  Result
         Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.c, t2.c, t3.c)), t1.a
         ->  Append
               ->  Nested Loop Left Join
                     Output: t1.a, t1.b, t1.c, t2.a, t2.c, t2.b, t3.a, (LEAST(t1.c, t2.c, t3.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2.a, t2.c, t2.b, t3.a, LEAST(t1.c, t2.c, t3.c)
                           Hash Cond: ((t3.b = t2.a) AND (t3.a = t2.b) AND ((t3.c)::text = (t2.c)::text) AND (ltrim((t3.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t3
                                 Output: t3.a, t3.b, t3.c
                           ->  Hash
                                 Output: t2.a, t2.c, t2.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t2
                                       Output: t2.a, t2.c, t2.b
                                       Filter: ((t1.b = t2.a) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t2_1.c, t2_1.b, t3_1.a, (LEAST(t1_1.c, t2_1.c, t3_1.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_1.a, t2_1.c, t2_1.b, t3_1.a, LEAST(t1_1.c, t2_1.c, t3_1.c)
                           Hash Cond: ((t3_1.b = t2_1.a) AND (t3_1.a = t2_1.b) AND ((t3_1.c)::text = (t2_1.c)::text) AND (ltrim((t3_1.c)::text, 'A'::text) = ltrim((t2_1.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t3_1
                                 Output: t3_1.a, t3_1.b, t3_1.c
                           ->  Hash
                                 Output: t2_1.a, t2_1.c, t2_1.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t2_1
                                       Output: t2_1.a, t2_1.c, t2_1.b
                                       Filter: ((t1_1.b = t2_1.a) AND (t1_1.b = t2_1.a) AND ((t1_1.c)::text = (t2_1.c)::text) AND (ltrim((t1_1.c)::text, 'A'::text) = ltrim((t2_1.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t2_2.c, t2_2.b, t3_2.a, (LEAST(t1_2.c, t2_2.c, t3_2.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_2.a, t2_2.c, t2_2.b, t3_2.a, LEAST(t1_2.c, t2_2.c, t3_2.c)
                           Hash Cond: ((t3_2.b = t2_2.a) AND (t3_2.a = t2_2.b) AND ((t3_2.c)::text = (t2_2.c)::text) AND (ltrim((t3_2.c)::text, 'A'::text) = ltrim((t2_2.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t3_2
                                 Output: t3_2.a, t3_2.b, t3_2.c
                           ->  Hash
                                 Output: t2_2.a, t2_2.c, t2_2.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t2_2
                                       Output: t2_2.a, t2_2.c, t2_2.b
                                       Filter: ((t1_2.b = t2_2.a) AND (t1_2.b = t2_2.a) AND ((t1_2.c)::text = (t2_2.c)::text) AND (ltrim((t1_2.c)::text, 'A'::text) = ltrim((t2_2.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_3.a, t1_3.b, t1_3.c, t2_3.a, t2_3.c, t2_3.b, t3_3.a, (LEAST(t1_3.c, t2_3.c, t3_3.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_3.a, t2_3.c, t2_3.b, t3_3.a, LEAST(t1_3.c, t2_3.c, t3_3.c)
                           Hash Cond: ((t3_3.b = t2_3.a) AND (t3_3.a = t2_3.b) AND ((t3_3.c)::text = (t2_3.c)::text) AND (ltrim((t3_3.c)::text, 'A'::text) = ltrim((t2_3.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Hash
                                 Output: t2_3.a, t2_3.c, t2_3.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t2_3
                                       Output: t2_3.a, t2_3.c, t2_3.b
                                       Filter: ((t1_3.b = t2_3.a) AND (t1_3.b = t2_3.a) AND ((t1_3.c)::text = (t2_3.c)::text) AND (ltrim((t1_3.c)::text, 'A'::text) = ltrim((t2_3.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_4.a, t1_4.b, t1_4.c, t2_4.a, t2_4.c, t2_4.b, t3_4.a, (LEAST(t1_4.c, t2_4.c, t3_4.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_4.a, t2_4.c, t2_4.b, t3_4.a, LEAST(t1_4.c, t2_4.c, t3_4.c)
                           Hash Cond: ((t3_4.b = t2_4.a) AND (t3_4.a = t2_4.b) AND ((t3_4.c)::text = (t2_4.c)::text) AND (ltrim((t3_4.c)::text, 'A'::text) = ltrim((t2_4.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                           ->  Hash
                                 Output: t2_4.a, t2_4.c, t2_4.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t2_4
                                       Output: t2_4.a, t2_4.c, t2_4.b
                                       Filter: ((t1_4.b = t2_4.a) AND (t1_4.b = t2_4.a) AND ((t1_4.c)::text = (t2_4.c)::text) AND (ltrim((t1_4.c)::text, 'A'::text) = ltrim((t2_4.c)::text, 'A'::text)))
               ->  Nested Loop Left Join
                     Output: t1_5.a, t1_5.b, t1_5.c, t2_5.a, t2_5.c, t2_5.b, t3_5.a, (LEAST(t1_5.c, t2_5.c, t3_5.c))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.b, t1_5.c
                           Filter: ((t1_5.a % 25) = 0)
                     ->  Hash Join
                           Output: t2_5.a, t2_5.c, t2_5.b, t3_5.a, LEAST(t1_5.c, t2_5.c, t3_5.c)
                           Hash Cond: ((t3_5.b = t2_5.a) AND (t3_5.a = t2_5.b) AND ((t3_5.c)::text = (t2_5.c)::text) AND (ltrim((t3_5.c)::text, 'A'::text) = ltrim((t2_5.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t3_5
                                 Output: t3_5.a, t3_5.b, t3_5.c
                           ->  Hash
                                 Output: t2_5.a, t2_5.c, t2_5.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t2_5
                                       Output: t2_5.a, t2_5.c, t2_5.b
                                       Filter: ((t1_5.b = t2_5.a) AND (t1_5.b = t2_5.a) AND ((t1_5.c)::text = (t2_5.c)::text) AND (ltrim((t1_5.c)::text, 'A'::text) = ltrim((t2_5.c)::text, 'A'::text)))
(96 rows)

SELECT * FROM plt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.c,t2.c,t3.c) FROM plt1_l t2 JOIN plt2_l t3 ON (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A'))) ss
			  ON t1.b = ss.t2a AND t1.b = ss.t2a AND t1.c = ss.t2c AND ltrim(t1.c,'A') = ltrim(ss.t2c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |     |      |     |     | 
 100 | 100 | 0002 |     |      |     |     | 
 150 | 150 | 0003 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 |     |      |     |     | 
 250 | 250 | 0005 |     |      |     |     | 
 300 | 300 | 0006 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 |     |      |     |     | 
 400 | 400 | 0008 |     |      |     |     | 
 450 | 450 | 0009 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 |     |      |     |     | 
 550 | 550 | 0011 |     |      |     |     | 
(12 rows)

--TODO - this query need to remove once testing done.
SELECT * FROM uplt1_l t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.a AS t3a, least(t1.c,t2.c,t3.c) FROM uplt1_l t2 JOIN uplt2_l t3 ON (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A'))) ss
			  ON t1.b = ss.t2a AND t1.b = ss.t2a AND t1.c = ss.t2c AND ltrim(t1.c,'A') = ltrim(ss.t2c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   | t2a | t2c  | t2b | t3a | least 
-----+-----+------+-----+------+-----+-----+-------
   0 |   0 | 0000 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |     |      |     |     | 
 100 | 100 | 0002 |     |      |     |     | 
 150 | 150 | 0003 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 |     |      |     |     | 
 250 | 250 | 0005 |     |      |     |     | 
 300 | 300 | 0006 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 |     |      |     |     | 
 400 | 400 | 0008 |     |      |     |     | 
 450 | 450 | 0009 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 |     |      |     |     | 
 550 | 550 | 0011 |     |      |     |     | 
(12 rows)

-- Cases with non-nullable expressions in subquery results;
-- make sure these go to null as expected
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM (SELECT 50 phv, * FROM plt1_l WHERE plt1_l.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM plt2_l WHERE plt2_l.b % 25 = 0) t2 ON (t1.a = t2.b and t1.b = t2.a and t1.c = t2.c and ltrim(t2.c,'A') = ltrim(t1.c,'A')) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY 1,2,3,4,5,6,7,8;
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: (50), plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c, (75), plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: (50), plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c, (75), plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   ->  Hash Full Join
         Output: (50), plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c, (75), plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
         Hash Cond: ((plt1_l_p1_p1.a = plt2_l_p1_p1.b) AND (plt1_l_p1_p1.b = plt2_l_p1_p1.a) AND ((plt1_l_p1_p1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((plt1_l_p1_p1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
         Filter: (((50) = plt1_l_p1_p1.b) OR ((75) = plt2_l_p1_p1.b))
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1
                     Output: plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c, 50
                     Filter: ((plt1_l_p1_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2
                     Output: plt1_l_p1_p2.a, plt1_l_p1_p2.b, plt1_l_p1_p2.c, 50
                     Filter: ((plt1_l_p1_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1
                     Output: plt1_l_p2_p1.a, plt1_l_p2_p1.b, plt1_l_p2_p1.c, 50
                     Filter: ((plt1_l_p2_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2
                     Output: plt1_l_p2_p2.a, plt1_l_p2_p2.b, plt1_l_p2_p2.c, 50
                     Filter: ((plt1_l_p2_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1
                     Output: plt1_l_p3_p1.a, plt1_l_p3_p1.b, plt1_l_p3_p1.c, 50
                     Filter: ((plt1_l_p3_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2
                     Output: plt1_l_p3_p2.a, plt1_l_p3_p2.b, plt1_l_p3_p2.c, 50
                     Filter: ((plt1_l_p3_p2.a % 25) = 0)
         ->  Hash
               Output: plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c, (75)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                           Output: plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c, 75
                           Filter: ((plt2_l_p1_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                           Output: plt2_l_p1_p2.a, plt2_l_p1_p2.b, plt2_l_p1_p2.c, 75
                           Filter: ((plt2_l_p1_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                           Output: plt2_l_p2_p1.a, plt2_l_p2_p1.b, plt2_l_p2_p1.c, 75
                           Filter: ((plt2_l_p2_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                           Output: plt2_l_p2_p2.a, plt2_l_p2_p2.b, plt2_l_p2_p2.c, 75
                           Filter: ((plt2_l_p2_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                           Output: plt2_l_p3_p1.a, plt2_l_p3_p1.b, plt2_l_p3_p1.c, 75
                           Filter: ((plt2_l_p3_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                           Output: plt2_l_p3_p2.a, plt2_l_p3_p2.b, plt2_l_p3_p2.c, 75
                           Filter: ((plt2_l_p3_p2.b % 25) = 0)
(47 rows)

SELECT * FROM (SELECT 50 phv, * FROM plt1_l WHERE plt1_l.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM plt2_l WHERE plt2_l.b % 25 = 0) t2 ON (t1.a = t2.b and t1.b = t2.a and t1.c = t2.c and ltrim(t2.c,'A') = ltrim(t1.c,'A')) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY 1,2,3,4,5,6,7,8;
 phv | a  | b  |  c   | phv | a  | b  |  c   
-----+----+----+------+-----+----+----+------
  50 | 50 | 50 | 0001 |     |    |    | 
     |    |    |      |  75 | 75 | 75 | 0001
(2 rows)

--TODO - this query need to remove once testing done.
SELECT * FROM (SELECT 50 phv, * FROM uplt1_l WHERE uplt1_l.a % 25 = 0) t1 FULL JOIN (SELECT 75 phv, * FROM uplt2_l WHERE uplt2_l.b % 25 = 0) t2 ON (t1.a = t2.b and t1.b = t2.a and t1.c = t2.c and ltrim(t2.c,'A') = ltrim(t1.c,'A')) WHERE t1.phv = t1.b OR t2.phv = t2.b ORDER BY 1,2,3,4,5,6,7,8;
 phv | a  | b  |  c   | phv | a  | b  |  c   
-----+----+----+------+-----+----+----+------
  50 | 50 | 50 | 0001 |     |    |    | 
     |    |    |      |  75 | 75 | 75 | 0001
(2 rows)

-- Join with pruned partitions from joining relations
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1, plt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
                     Filter: (t2.b > 250)
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
                     Filter: (t2_1.b > 250)
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
                     Filter: (t2_2.b > 250)
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
                     Filter: (t2_3.b > 250)
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
                     Filter: (t2_4.b > 250)
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
                     Filter: (t2_5.b > 250)
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a < 450) AND ((t1.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a < 450) AND ((t1_1.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a < 450) AND ((t1_2.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.a < 450) AND ((t1_3.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.a < 450) AND ((t1_4.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.a < 450) AND ((t1_5.a % 25) = 0))
(46 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1, plt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0006 | 300 | 0006
(1 row)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM uplt1_l t1, uplt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a < 450 AND t2.b > 250 AND t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0006 | 300 | 0006
(1 row)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a < 450) t1 LEFT JOIN (SELECT * FROM plt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                                                                      QUERY PLAN                                                                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: plt1_l_p1_p1.a, plt2_l_p1_p1.b
   ->  Append
         ->  Nested Loop Left Join
               Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
               Join Filter: ((plt1_l_p1_p1.a = plt2_l_p1_p1.b) AND (plt1_l_p1_p1.b = plt2_l_p1_p1.a) AND ((plt1_l_p1_p1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((plt1_l_p1_p1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1
                     Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt1_l_p1_p1.b
                     Filter: ((plt1_l_p1_p1.a < 450) AND ((plt1_l_p1_p1.a % 25) = 0))
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                     Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                     Filter: (plt2_l_p1_p1.b > 250)
         ->  Hash Right Join
               Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt2_l_p1_p2.b, plt2_l_p1_p2.c
               Hash Cond: ((plt2_l_p1_p2.b = plt1_l_p1_p2.a) AND (plt2_l_p1_p2.a = plt1_l_p1_p2.b) AND ((plt2_l_p1_p2.c)::text = (plt1_l_p1_p2.c)::text) AND (ltrim((plt2_l_p1_p2.c)::text, 'A'::text) = ltrim((plt1_l_p1_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                     Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                     Filter: (plt2_l_p1_p2.b > 250)
               ->  Hash
                     Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt1_l_p1_p2.b
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2
                           Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt1_l_p1_p2.b
                           Filter: ((plt1_l_p1_p2.a < 450) AND ((plt1_l_p1_p2.a % 25) = 0))
         ->  Hash Left Join
               Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt2_l_p2_p1.b, plt2_l_p2_p1.c
               Hash Cond: ((plt1_l_p2_p1.a = plt2_l_p2_p1.b) AND (plt1_l_p2_p1.b = plt2_l_p2_p1.a) AND ((plt1_l_p2_p1.c)::text = (plt2_l_p2_p1.c)::text) AND (ltrim((plt1_l_p2_p1.c)::text, 'A'::text) = ltrim((plt2_l_p2_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1
                     Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt1_l_p2_p1.b
                     Filter: ((plt1_l_p2_p1.a < 450) AND ((plt1_l_p2_p1.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                           Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                           Filter: (plt2_l_p2_p1.b > 250)
         ->  Hash Right Join
               Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt2_l_p2_p2.b, plt2_l_p2_p2.c
               Hash Cond: ((plt2_l_p2_p2.b = plt1_l_p2_p2.a) AND (plt2_l_p2_p2.a = plt1_l_p2_p2.b) AND ((plt2_l_p2_p2.c)::text = (plt1_l_p2_p2.c)::text) AND (ltrim((plt2_l_p2_p2.c)::text, 'A'::text) = ltrim((plt1_l_p2_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                     Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                     Filter: (plt2_l_p2_p2.b > 250)
               ->  Hash
                     Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt1_l_p2_p2.b
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2
                           Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt1_l_p2_p2.b
                           Filter: ((plt1_l_p2_p2.a < 450) AND ((plt1_l_p2_p2.a % 25) = 0))
         ->  Hash Right Join
               Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt2_l_p3_p1.b, plt2_l_p3_p1.c
               Hash Cond: ((plt2_l_p3_p1.b = plt1_l_p3_p1.a) AND (plt2_l_p3_p1.a = plt1_l_p3_p1.b) AND ((plt2_l_p3_p1.c)::text = (plt1_l_p3_p1.c)::text) AND (ltrim((plt2_l_p3_p1.c)::text, 'A'::text) = ltrim((plt1_l_p3_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                     Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                     Filter: (plt2_l_p3_p1.b > 250)
               ->  Hash
                     Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt1_l_p3_p1.b
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1
                           Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt1_l_p3_p1.b
                           Filter: ((plt1_l_p3_p1.a < 450) AND ((plt1_l_p3_p1.a % 25) = 0))
         ->  Hash Right Join
               Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt2_l_p3_p2.b, plt2_l_p3_p2.c
               Hash Cond: ((plt2_l_p3_p2.b = plt1_l_p3_p2.a) AND (plt2_l_p3_p2.a = plt1_l_p3_p2.b) AND ((plt2_l_p3_p2.c)::text = (plt1_l_p3_p2.c)::text) AND (ltrim((plt2_l_p3_p2.c)::text, 'A'::text) = ltrim((plt1_l_p3_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                     Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                     Filter: (plt2_l_p3_p2.b > 250)
               ->  Hash
                     Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt1_l_p3_p2.b
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2
                           Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt1_l_p3_p2.b
                           Filter: ((plt1_l_p3_p2.a < 450) AND ((plt1_l_p3_p2.a % 25) = 0))
(68 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a < 450) t1 LEFT JOIN (SELECT * FROM plt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 |     | 
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
(9 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_l WHERE a < 450) t1 LEFT JOIN (SELECT * FROM uplt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 |     | 
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
(9 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM plt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                                                                        QUERY PLAN                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: plt1_l_p1_p1.a, plt2_l_p1_p1.b
   ->  Result
         Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
         ->  Append
               ->  Hash Right Join
                     Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt1_l_p1_p1.a, plt1_l_p1_p1.c
                     Hash Cond: ((plt1_l_p1_p1.a = plt2_l_p1_p1.b) AND (plt1_l_p1_p1.b = plt2_l_p1_p1.a) AND ((plt1_l_p1_p1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((plt1_l_p1_p1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1
                           Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt1_l_p1_p1.b
                           Filter: (plt1_l_p1_p1.a < 450)
                     ->  Hash
                           Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                                 Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                                 Filter: ((plt2_l_p1_p1.b > 250) AND ((plt2_l_p1_p1.a % 25) = 0))
               ->  Hash Right Join
                     Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt1_l_p1_p2.a, plt1_l_p1_p2.c
                     Hash Cond: ((plt1_l_p1_p2.a = plt2_l_p1_p2.b) AND (plt1_l_p1_p2.b = plt2_l_p1_p2.a) AND ((plt1_l_p1_p2.c)::text = (plt2_l_p1_p2.c)::text) AND (ltrim((plt1_l_p1_p2.c)::text, 'A'::text) = ltrim((plt2_l_p1_p2.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2
                           Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt1_l_p1_p2.b
                           Filter: (plt1_l_p1_p2.a < 450)
                     ->  Hash
                           Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                                 Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                                 Filter: ((plt2_l_p1_p2.b > 250) AND ((plt2_l_p1_p2.a % 25) = 0))
               ->  Hash Right Join
                     Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt1_l_p2_p1.a, plt1_l_p2_p1.c
                     Hash Cond: ((plt1_l_p2_p1.a = plt2_l_p2_p1.b) AND (plt1_l_p2_p1.b = plt2_l_p2_p1.a) AND ((plt1_l_p2_p1.c)::text = (plt2_l_p2_p1.c)::text) AND (ltrim((plt1_l_p2_p1.c)::text, 'A'::text) = ltrim((plt2_l_p2_p1.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1
                           Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt1_l_p2_p1.b
                           Filter: (plt1_l_p2_p1.a < 450)
                     ->  Hash
                           Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                                 Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                                 Filter: ((plt2_l_p2_p1.b > 250) AND ((plt2_l_p2_p1.a % 25) = 0))
               ->  Hash Right Join
                     Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt1_l_p2_p2.a, plt1_l_p2_p2.c
                     Hash Cond: ((plt1_l_p2_p2.a = plt2_l_p2_p2.b) AND (plt1_l_p2_p2.b = plt2_l_p2_p2.a) AND ((plt1_l_p2_p2.c)::text = (plt2_l_p2_p2.c)::text) AND (ltrim((plt1_l_p2_p2.c)::text, 'A'::text) = ltrim((plt2_l_p2_p2.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2
                           Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt1_l_p2_p2.b
                           Filter: (plt1_l_p2_p2.a < 450)
                     ->  Hash
                           Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                                 Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                                 Filter: ((plt2_l_p2_p2.b > 250) AND ((plt2_l_p2_p2.a % 25) = 0))
               ->  Hash Right Join
                     Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt1_l_p3_p1.a, plt1_l_p3_p1.c
                     Hash Cond: ((plt1_l_p3_p1.a = plt2_l_p3_p1.b) AND (plt1_l_p3_p1.b = plt2_l_p3_p1.a) AND ((plt1_l_p3_p1.c)::text = (plt2_l_p3_p1.c)::text) AND (ltrim((plt1_l_p3_p1.c)::text, 'A'::text) = ltrim((plt2_l_p3_p1.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1
                           Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt1_l_p3_p1.b
                           Filter: (plt1_l_p3_p1.a < 450)
                     ->  Hash
                           Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                                 Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                                 Filter: ((plt2_l_p3_p1.b > 250) AND ((plt2_l_p3_p1.a % 25) = 0))
               ->  Hash Right Join
                     Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt1_l_p3_p2.a, plt1_l_p3_p2.c
                     Hash Cond: ((plt1_l_p3_p2.a = plt2_l_p3_p2.b) AND (plt1_l_p3_p2.b = plt2_l_p3_p2.a) AND ((plt1_l_p3_p2.c)::text = (plt2_l_p3_p2.c)::text) AND (ltrim((plt1_l_p3_p2.c)::text, 'A'::text) = ltrim((plt2_l_p3_p2.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2
                           Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt1_l_p3_p2.b
                           Filter: (plt1_l_p3_p2.a < 450)
                     ->  Hash
                           Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                                 Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                                 Filter: ((plt2_l_p3_p2.b > 250) AND ((plt2_l_p3_p2.a % 25) = 0))
(72 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM plt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0006 | 300 | 0006
     |      | 375 | 0007
     |      | 450 | 0009
     |      | 525 | 0010
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_l WHERE a < 450) t1 RIGHT JOIN (SELECT * FROM uplt2_l WHERE b > 250) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
 300 | 0006 | 300 | 0006
     |      | 375 | 0007
     |      | 450 | 0009
     |      | 525 | 0010
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2_l WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') ORDER BY t1.a, t2.b;
                                                                                                                     QUERY PLAN                                                                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: plt1_l_p1_p1.a, plt2_l_p1_p1.b
   ->  Append
         ->  Hash Full Join
               Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt2_l_p1_p1.b, plt2_l_p1_p1.c
               Hash Cond: ((plt1_l_p1_p1.a = plt2_l_p1_p1.b) AND (plt1_l_p1_p1.b = plt2_l_p1_p1.a) AND ((plt1_l_p1_p1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((plt1_l_p1_p1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1
                     Output: plt1_l_p1_p1.a, plt1_l_p1_p1.c, plt1_l_p1_p1.b
                     Filter: ((plt1_l_p1_p1.a < 450) AND ((plt1_l_p1_p1.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                           Output: plt2_l_p1_p1.b, plt2_l_p1_p1.c, plt2_l_p1_p1.a
                           Filter: ((plt2_l_p1_p1.b > 250) AND ((plt2_l_p1_p1.b % 25) = 0))
         ->  Hash Full Join
               Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt2_l_p1_p2.b, plt2_l_p1_p2.c
               Hash Cond: ((plt1_l_p1_p2.a = plt2_l_p1_p2.b) AND (plt1_l_p1_p2.b = plt2_l_p1_p2.a) AND ((plt1_l_p1_p2.c)::text = (plt2_l_p1_p2.c)::text) AND (ltrim((plt1_l_p1_p2.c)::text, 'A'::text) = ltrim((plt2_l_p1_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2
                     Output: plt1_l_p1_p2.a, plt1_l_p1_p2.c, plt1_l_p1_p2.b
                     Filter: ((plt1_l_p1_p2.a < 450) AND ((plt1_l_p1_p2.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                           Output: plt2_l_p1_p2.b, plt2_l_p1_p2.c, plt2_l_p1_p2.a
                           Filter: ((plt2_l_p1_p2.b > 250) AND ((plt2_l_p1_p2.b % 25) = 0))
         ->  Hash Full Join
               Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt2_l_p2_p1.b, plt2_l_p2_p1.c
               Hash Cond: ((plt1_l_p2_p1.a = plt2_l_p2_p1.b) AND (plt1_l_p2_p1.b = plt2_l_p2_p1.a) AND ((plt1_l_p2_p1.c)::text = (plt2_l_p2_p1.c)::text) AND (ltrim((plt1_l_p2_p1.c)::text, 'A'::text) = ltrim((plt2_l_p2_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1
                     Output: plt1_l_p2_p1.a, plt1_l_p2_p1.c, plt1_l_p2_p1.b
                     Filter: ((plt1_l_p2_p1.a < 450) AND ((plt1_l_p2_p1.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                           Output: plt2_l_p2_p1.b, plt2_l_p2_p1.c, plt2_l_p2_p1.a
                           Filter: ((plt2_l_p2_p1.b > 250) AND ((plt2_l_p2_p1.b % 25) = 0))
         ->  Hash Full Join
               Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt2_l_p2_p2.b, plt2_l_p2_p2.c
               Hash Cond: ((plt1_l_p2_p2.a = plt2_l_p2_p2.b) AND (plt1_l_p2_p2.b = plt2_l_p2_p2.a) AND ((plt1_l_p2_p2.c)::text = (plt2_l_p2_p2.c)::text) AND (ltrim((plt1_l_p2_p2.c)::text, 'A'::text) = ltrim((plt2_l_p2_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2
                     Output: plt1_l_p2_p2.a, plt1_l_p2_p2.c, plt1_l_p2_p2.b
                     Filter: ((plt1_l_p2_p2.a < 450) AND ((plt1_l_p2_p2.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                           Output: plt2_l_p2_p2.b, plt2_l_p2_p2.c, plt2_l_p2_p2.a
                           Filter: ((plt2_l_p2_p2.b > 250) AND ((plt2_l_p2_p2.b % 25) = 0))
         ->  Hash Full Join
               Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt2_l_p3_p1.b, plt2_l_p3_p1.c
               Hash Cond: ((plt1_l_p3_p1.a = plt2_l_p3_p1.b) AND (plt1_l_p3_p1.b = plt2_l_p3_p1.a) AND ((plt1_l_p3_p1.c)::text = (plt2_l_p3_p1.c)::text) AND (ltrim((plt1_l_p3_p1.c)::text, 'A'::text) = ltrim((plt2_l_p3_p1.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1
                     Output: plt1_l_p3_p1.a, plt1_l_p3_p1.c, plt1_l_p3_p1.b
                     Filter: ((plt1_l_p3_p1.a < 450) AND ((plt1_l_p3_p1.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                           Output: plt2_l_p3_p1.b, plt2_l_p3_p1.c, plt2_l_p3_p1.a
                           Filter: ((plt2_l_p3_p1.b > 250) AND ((plt2_l_p3_p1.b % 25) = 0))
         ->  Hash Full Join
               Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt2_l_p3_p2.b, plt2_l_p3_p2.c
               Hash Cond: ((plt1_l_p3_p2.a = plt2_l_p3_p2.b) AND (plt1_l_p3_p2.b = plt2_l_p3_p2.a) AND ((plt1_l_p3_p2.c)::text = (plt2_l_p3_p2.c)::text) AND (ltrim((plt1_l_p3_p2.c)::text, 'A'::text) = ltrim((plt2_l_p3_p2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2
                     Output: plt1_l_p3_p2.a, plt1_l_p3_p2.c, plt1_l_p3_p2.b
                     Filter: ((plt1_l_p3_p2.a < 450) AND ((plt1_l_p3_p2.a % 25) = 0))
               ->  Hash
                     Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                           Output: plt2_l_p3_p2.b, plt2_l_p3_p2.c, plt2_l_p3_p2.a
                           Filter: ((plt2_l_p3_p2.b > 250) AND ((plt2_l_p3_p2.b % 25) = 0))
(70 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM plt2_l WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 |     | 
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
     |      | 375 | 0007
     |      | 450 | 0009
     |      | 525 | 0010
(12 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_l WHERE a < 450 AND a % 25 = 0) t1 FULL JOIN (SELECT * FROM uplt2_l WHERE b > 250 AND b % 25 = 0) t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0001 |     | 
 100 | 0002 |     | 
 150 | 0003 |     | 
 200 | 0004 |     | 
 250 | 0005 |     | 
 300 | 0006 | 300 | 0006
 350 | 0007 |     | 
 400 | 0008 |     | 
     |      | 375 | 0007
     |      | 450 | 0009
     |      | 525 | 0010
(12 rows)

-- Semi-join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.* FROM plt1_l t1 WHERE t1.c IN (SELECT t1.c FROM plt2_l t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop Semi Join
               Output: t1.a, t1.b, t1.c
               Join Filter: ((t1.c)::text = (t1_6.c)::text)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
               ->  Materialize
                     Output: t1_6.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t1_6
                                 Output: t1_6.c
                                 Filter: ((t1_6.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t1_7
                                 Output: t1_7.c
                                 Filter: ((t1_7.b % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_2.a, t1_2.b, t1_2.c
               Join Filter: ((t1_2.c)::text = (t1_8.c)::text)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
               ->  Materialize
                     Output: t1_8.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t1_8
                                 Output: t1_8.c
                                 Filter: ((t1_8.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t1_9
                                 Output: t1_9.c
                                 Filter: ((t1_9.b % 25) = 0)
         ->  Nested Loop Semi Join
               Output: t1_4.a, t1_4.b, t1_4.c
               Join Filter: ((t1_4.c)::text = (t1_10.c)::text)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.b, t1_5.c
                           Filter: ((t1_5.a % 25) = 0)
               ->  Materialize
                     Output: t1_10.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t1_10
                                 Output: t1_10.c
                                 Filter: ((t1_10.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t1_11
                                 Output: t1_11.c
                                 Filter: ((t1_11.b % 25) = 0)
(61 rows)

SELECT t1.* FROM plt1_l t1 WHERE t1.c IN (SELECT t1.c FROM plt2_l t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 150 | 150 | 0003
 200 | 200 | 0004
 300 | 300 | 0006
 350 | 350 | 0007
 450 | 450 | 0009
 500 | 500 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.* FROM uplt1_l t1 WHERE t1.c IN (SELECT t1.c FROM uplt2_l t1 WHERE t1.b % 25 = 0) AND t1.a % 25 = 0 ORDER BY t1.a;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0001
 150 | 150 | 0003
 200 | 200 | 0004
 300 | 300 | 0006
 350 | 350 | 0007
 450 | 450 | 0009
 500 | 500 | 0010
(8 rows)

--
-- negative testcases
--
-- joins where one of the relations is proven empty
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1, plt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a = 1 AND t1.a = 2;
            QUERY PLAN            
----------------------------------
 Result
   Output: t1.a, t1.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM plt1_l t1, plt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') AND t1.a = 1 AND t1.a = 2;
 a | c | b | c 
---+---+---+---
(0 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a = 1 AND a = 2) t1 LEFT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A');
                QUERY PLAN                
------------------------------------------
 Result
   Output: plt1_l.a, plt1_l.c, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a = 1 AND a = 2) t1 LEFT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A');
 a | c | b | c 
---+---+---+---
(0 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                    QUERY PLAN                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: ((t2.b = a) AND (t2.a = b) AND ((t2.c)::text = (c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
                     Filter: ((t2_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
                     Filter: ((t2_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
                     Filter: ((t2_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
                     Filter: ((t2_5.a % 25) = 0)
         ->  Hash
               Output: a, c, b
               ->  Result
                     Output: a, c, b
                     One-Time Filter: false
(30 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN uplt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a = 1 AND a = 2) t1 FULL JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
                                                                    QUERY PLAN                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: a, c, t2.b, t2.c
   Sort Key: a, t2.b
   ->  Hash Left Join
         Output: a, c, t2.b, t2.c
         Hash Cond: ((t2.b = a) AND (t2.a = b) AND ((t2.c)::text = (c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
                     Filter: ((t2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
                     Filter: ((t2_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
                     Filter: ((t2_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
                     Filter: ((t2_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
                     Filter: ((t2_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
                     Filter: ((t2_5.a % 25) = 0)
         ->  Hash
               Output: a, c, b
               ->  Result
                     Output: a, c, b
                     One-Time Filter: false
(30 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM plt1_l WHERE a = 1 AND a = 2) t1 FULL JOIN plt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM uplt1_l WHERE a = 1 AND a = 2) t1 FULL JOIN uplt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') WHERE t2.a % 25 = 0 ORDER BY t1.a, t2.b;
 a | c |  b  |  c   
---+---+-----+------
   |   |   0 | 0000
   |   |  75 | 0001
   |   | 150 | 0003
   |   | 225 | 0004
   |   | 300 | 0006
   |   | 375 | 0007
   |   | 450 | 0009
   |   | 525 | 0010
(8 rows)

--=========================================================================================================================================================
--added test cases based on join.sql file
--creating test dataset
create temp table tplt1 (x1 int, x2 int) partition by list(x1);
CREATE temp TABLE tplt1_p1 PARTITION OF tplt1 FOR VALUES IN (1,2,3);
CREATE temp TABLE tplt1_p2 PARTITION OF tplt1 FOR VALUES IN (4,5);
insert into tplt1 values (1,11);
insert into tplt1 values (2,22);
insert into tplt1 values (3,null);
insert into tplt1 values (4,44);
insert into tplt1 values (5,null);
create temp table tplt2 (y1 int, y2 int) partition by list(y1);
CREATE temp TABLE tplt2_p1 PARTITION OF tplt2 FOR VALUES IN (1,2,3);
CREATE temp TABLE tplt2_p2 PARTITION OF tplt2 FOR VALUES IN (4,5);
insert into tplt2 values (1,111);
insert into tplt2 values (2,222);
insert into tplt2 values (3,333);
insert into tplt2 values (4,null);
-- test with temp table and for propagation of nullability constraints into sub-joins
EXPLAIN (COSTS OFF)
select * from (tplt1 left join tplt2 on (x1 = y1)) left join tplt1 xx(xx1,xx2) 
on (x1 = xx1 and xx2 is not null);
                        QUERY PLAN                         
-----------------------------------------------------------
 Append
   ->  Merge Right Join
         Merge Cond: (tplt2_p1.y1 = tplt1_p1.x1)
         ->  Sort
               Sort Key: tplt2_p1.y1
               ->  Seq Scan on tplt2_p1
         ->  Materialize
               ->  Merge Left Join
                     Merge Cond: (tplt1_p1.x1 = xx.xx1)
                     ->  Sort
                           Sort Key: tplt1_p1.x1
                           ->  Seq Scan on tplt1_p1
                     ->  Sort
                           Sort Key: xx.xx1
                           ->  Seq Scan on tplt1_p1 xx
                                 Filter: (xx2 IS NOT NULL)
   ->  Merge Right Join
         Merge Cond: (tplt2_p2.y1 = tplt1_p2.x1)
         ->  Sort
               Sort Key: tplt2_p2.y1
               ->  Seq Scan on tplt2_p2
         ->  Materialize
               ->  Merge Left Join
                     Merge Cond: (tplt1_p2.x1 = xx_1.xx1)
                     ->  Sort
                           Sort Key: tplt1_p2.x1
                           ->  Seq Scan on tplt1_p2
                     ->  Sort
                           Sort Key: xx_1.xx1
                           ->  Seq Scan on tplt1_p2 xx_1
                                 Filter: (xx2 IS NOT NULL)
(31 rows)

select * from (tplt1 left join tplt2 on (x1 = y1)) left join tplt1 xx(xx1,xx2) 
on (x1 = xx1 and xx2 is not null);
 x1 | x2 | y1 | y2  | xx1 | xx2 
----+----+----+-----+-----+-----
  1 | 11 |  1 | 111 |   1 |  11
  2 | 22 |  2 | 222 |   2 |  22
  3 |    |  3 | 333 |     |    
  4 | 44 |  4 |     |   4 |  44
  5 |    |    |     |     |    
(5 rows)

-- test with temp table and for propagation of nullability constraints into sub-joins
EXPLAIN (COSTS OFF)
select * from (tplt1 left join tplt2 on (x1 = y1)) left join tplt1 xx(xx1,xx2) 
on (x1 = xx1) where (xx2 is not null);
                        QUERY PLAN                         
-----------------------------------------------------------
 Append
   ->  Merge Right Join
         Merge Cond: (tplt2_p1.y1 = tplt1_p1.x1)
         ->  Sort
               Sort Key: tplt2_p1.y1
               ->  Seq Scan on tplt2_p1
         ->  Materialize
               ->  Merge Join
                     Merge Cond: (xx.xx1 = tplt1_p1.x1)
                     ->  Sort
                           Sort Key: xx.xx1
                           ->  Seq Scan on tplt1_p1 xx
                                 Filter: (xx2 IS NOT NULL)
                     ->  Sort
                           Sort Key: tplt1_p1.x1
                           ->  Seq Scan on tplt1_p1
   ->  Merge Right Join
         Merge Cond: (tplt2_p2.y1 = tplt1_p2.x1)
         ->  Sort
               Sort Key: tplt2_p2.y1
               ->  Seq Scan on tplt2_p2
         ->  Materialize
               ->  Merge Join
                     Merge Cond: (xx_1.xx1 = tplt1_p2.x1)
                     ->  Sort
                           Sort Key: xx_1.xx1
                           ->  Seq Scan on tplt1_p2 xx_1
                                 Filter: (xx2 IS NOT NULL)
                     ->  Sort
                           Sort Key: tplt1_p2.x1
                           ->  Seq Scan on tplt1_p2
(31 rows)

select * from (tplt1 left join tplt2 on (x1 = y1)) left join tplt1 xx(xx1,xx2) 
on (x1 = xx1) where (xx2 is not null);
 x1 | x2 | y1 | y2  | xx1 | xx2 
----+----+----+-----+-----+-----
  1 | 11 |  1 | 111 |   1 |  11
  2 | 22 |  2 | 222 |   2 |  22
  4 | 44 |  4 |     |   4 |  44
(3 rows)

-- CORRELATION NAMES
EXPLAIN (VERBOSE, COSTS OFF)
SELECT '' AS "xxx", * FROM plt1 t1 (a, b, c) JOIN plt2 t2 (a, b, c) USING (c) 
WHERE t1.a % 25 = 0 and t2.b % 25 = 0 ORDER BY t1.a, t2.a;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Sort
   Output: ''::text, t1.c, t1.a, t1.b, t2.a, t2.b, t1.a, t2.a
   Sort Key: t1.a, t2.a
   ->  Nested Loop
         Output: ''::text, t1.c, t1.a, t1.b, t2.a, t2.b, t1.a, t2.a
         Join Filter: (t1.c = t2.c)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.c, t1.a, t1.b
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.c, t1_1.a, t1_1.b
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.c, t1_2.a, t1_2.b
                     Filter: ((t1_2.a % 25) = 0)
         ->  Materialize
               Output: t2.a, t2.b, t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.a, t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.a, t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.a, t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
(28 rows)

SELECT '' AS "xxx", * FROM plt1 t1 (a, b, c) JOIN plt2 t2 (a, b, c) USING (c) 
WHERE t1.a % 25 = 0 and t2.b % 25 = 0 ORDER BY t1.a, t2.a;
 xxx |  c   |  a  |  b  |  a  |  b  
-----+------+-----+-----+-----+-----
     | 0000 |   0 |   0 |   0 |   0
     | 0001 |  50 |  50 |  75 |  75
     | 0003 | 150 | 150 | 150 | 150
     | 0004 | 200 | 200 | 225 | 225
     | 0006 | 300 | 300 | 300 | 300
     | 0007 | 350 | 350 | 375 | 375
     | 0009 | 450 | 450 | 450 | 450
     | 0010 | 500 | 500 | 525 | 525
(8 rows)

--TODO - this query need to remove once testing done.
SELECT '' AS "xxx", * FROM uplt1 t1 (a, b, c) JOIN uplt2 t2 (a, b, c) USING (c) 
WHERE t1.a % 25 = 0 and t2.b % 25 = 0 ORDER BY t1.a, t2.a;
 xxx |  c   |  a  |  b  |  a  |  b  
-----+------+-----+-----+-----+-----
     | 0000 |   0 |   0 |   0 |   0
     | 0001 |  50 |  50 |  75 |  75
     | 0003 | 150 | 150 | 150 | 150
     | 0004 | 200 | 200 | 225 | 225
     | 0006 | 300 | 300 | 300 | 300
     | 0007 | 350 | 350 | 375 | 375
     | 0009 | 450 | 450 | 450 | 450
     | 0010 | 500 | 500 | 525 | 525
(8 rows)

--equi-joins +  Non-equi-joins
EXPLAIN (VERBOSE, COSTS OFF)
SELECT '' AS "xxx", * FROM prt1 t1 JOIN prt2 t2 ON (t1.a = t2.b) AND (t1.a <= t2.b) 
WHERE t1.a % 25 = 0 order by 1,2,3,4;
                          QUERY PLAN                          
--------------------------------------------------------------
 Sort
   Output: ''::text, t1.a, t1.b, t1.c, t2.a, t2.b, t2.c
   Sort Key: t1.a, t1.b, t1.c
   ->  Hash Join
         Output: ''::text, t1.a, t1.b, t1.c, t2.a, t2.b, t2.c
         Hash Cond: (t2.b = t1.a)
         Join Filter: (t1.a <= t2.b)
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.a, t2.b, t2.c
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.a, t2_1.b, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.a, t2_2.b, t2_2.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(26 rows)

SELECT '' AS "xxx", * FROM prt1 t1 JOIN prt2 t2 ON (t1.a = t2.b) AND (t1.a <= t2.b) 
WHERE t1.a % 25 = 0 order by 1,2,3,4;
 xxx |  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+-----+------+-----+-----+------
     |   0 |   0 | 0000 |   0 |   0 | 0000
     | 150 | 150 | 0150 | 150 | 150 | 0150
     | 300 | 300 | 0300 | 300 | 300 | 0300
     | 450 | 450 | 0450 | 450 | 450 | 0450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT '' AS "xxx", * FROM uprt1 t1 JOIN uprt2 t2 ON (t1.a = t2.b) AND (t1.a <= t2.b) 
WHERE t1.a % 25 = 0 order by 1,2,3,4;
 xxx |  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+-----+------+-----+-----+------
     |   0 |   0 | 0000 |   0 |   0 | 0000
     | 150 | 150 | 0150 | 150 | 150 | 0150
     | 300 | 300 | 0300 | 300 | 300 | 0300
     | 450 | 450 | 0450 | 450 | 450 | 0450
(4 rows)

--full join using
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM plt1 t1 FULL JOIN plt2 t2 USING (c) FULL JOIN plt1 t3 USING (c) 
where t1.a %150 =0 and t2.b % 150 = 0 and t3.a % 150 = 0 order by 1,2,3;
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Sort
   Output: (COALESCE(COALESCE(t1.c, t2.c), t3.c)), t1.a, t1.b, t2.a, t2.b, t3.a, t3.b
   Sort Key: (COALESCE(COALESCE(t1.c, t2.c), t3.c)), t1.a, t1.b
   ->  Nested Loop
         Output: COALESCE(COALESCE(t1.c, t2.c), t3.c), t1.a, t1.b, t2.a, t2.b, t3.a, t3.b
         Join Filter: (COALESCE(t1.c, t2.c) = t3.c)
         ->  Nested Loop
               Output: t1.c, t1.a, t1.b, t2.c, t2.a, t2.b
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.c, t1.a, t1.b
                           Filter: ((t1.a % 150) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.c, t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 150) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.c, t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 150) = 0)
               ->  Materialize
                     Output: t2.c, t2.a, t2.b
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.c, t2.a, t2.b
                                 Filter: ((t2.b % 150) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.c, t2_1.a, t2_1.b
                                 Filter: ((t2_1.b % 150) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.c, t2_2.a, t2_2.b
                                 Filter: ((t2_2.b % 150) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c, t3.a, t3.b
                     Filter: ((t3.a % 150) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c, t3_1.a, t3_1.b
                     Filter: ((t3_1.a % 150) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c, t3_2.a, t3_2.b
                     Filter: ((t3_2.a % 150) = 0)
(41 rows)

SELECT * FROM plt1 t1 FULL JOIN plt2 t2 USING (c) FULL JOIN plt1 t3 USING (c) 
where t1.a %150 =0 and t2.b % 150 = 0 and t3.a % 150 = 0 order by 1,2,3;
  c   |  a  |  b  |  a  |  b  |  a  |  b  
------+-----+-----+-----+-----+-----+-----
 0000 |   0 |   0 |   0 |   0 |   0 |   0
 0003 | 150 | 150 | 150 | 150 | 150 | 150
 0006 | 300 | 300 | 300 | 300 | 300 | 300
 0009 | 450 | 450 | 450 | 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT * FROM uplt1 t1 FULL JOIN uplt2 t2 USING (c) FULL JOIN plt1 t3 USING (c) 
where t1.a %150 =0 and t2.b % 150 = 0 and t3.a % 150 = 0 order by 1,2,3;
  c   |  a  |  b  |  a  |  b  |  a  |  b  
------+-----+-----+-----+-----+-----+-----
 0000 |   0 |   0 |   0 |   0 |   0 |   0
 0003 | 150 | 150 | 150 | 150 | 150 | 150
 0006 | 300 | 300 | 300 | 300 | 300 | 300
 0009 | 450 | 450 | 450 | 450 | 450 | 450
(4 rows)

--natural join with subquery
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM (SELECT c, a as s1_n FROM plt1) as s1 NATURAL FULL JOIN (SELECT * FROM 
(SELECT c, b as s2_n, 2 as s2_2 FROM plt2 where a % 25 = 0 and b % 25 =0) as s2 
NATURAL FULL JOIN(SELECT c, a as s3_n FROM plt1 where a % 25 = 0 and b % 25 =0 ) as s3 ) ss2 
where s1_n % 25 = 0 ORDER by 1,2,3,4,5;
                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: (COALESCE(plt1_p1.c, (COALESCE(plt2_p1.c, plt1_p1_1.c)))), plt1_p1.a, plt2_p1.b, (2), plt1_p1_1.a
   Sort Key: (COALESCE(plt1_p1.c, (COALESCE(plt2_p1.c, plt1_p1_1.c)))), plt1_p1.a, plt2_p1.b, (2), plt1_p1_1.a
   ->  Nested Loop Left Join
         Output: COALESCE(plt1_p1.c, (COALESCE(plt2_p1.c, plt1_p1_1.c))), plt1_p1.a, plt2_p1.b, (2), plt1_p1_1.a
         Join Filter: (plt1_p1.c = COALESCE(plt2_p1.c, plt1_p1_1.c))
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1
                     Output: plt1_p1.c, plt1_p1.a
                     Filter: ((plt1_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2
                     Output: plt1_p2.c, plt1_p2.a
                     Filter: ((plt1_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3
                     Output: plt1_p3.c, plt1_p3.a
                     Filter: ((plt1_p3.a % 25) = 0)
         ->  Materialize
               Output: plt2_p1.b, plt2_p1.c, plt1_p1_1.a, plt1_p1_1.c, (COALESCE(plt2_p1.c, plt1_p1_1.c)), (2)
               ->  Append
                     ->  Hash Full Join
                           Output: plt2_p1.b, plt2_p1.c, plt1_p1_1.a, plt1_p1_1.c, COALESCE(plt2_p1.c, plt1_p1_1.c), (2)
                           Hash Cond: (plt1_p1_1.c = plt2_p1.c)
                           ->  Seq Scan on pwj_extra.plt1_p1 plt1_p1_1
                                 Output: plt1_p1_1.a, plt1_p1_1.c
                                 Filter: (((plt1_p1_1.a % 25) = 0) AND ((plt1_p1_1.b % 25) = 0))
                           ->  Hash
                                 Output: plt2_p1.b, plt2_p1.c, (2)
                                 ->  Seq Scan on pwj_extra.plt2_p1
                                       Output: plt2_p1.b, plt2_p1.c, 2
                                       Filter: (((plt2_p1.a % 25) = 0) AND ((plt2_p1.b % 25) = 0))
                     ->  Hash Full Join
                           Output: plt2_p2.b, plt2_p2.c, plt1_p2_1.a, plt1_p2_1.c, COALESCE(plt2_p2.c, plt1_p2_1.c), (2)
                           Hash Cond: (plt1_p2_1.c = plt2_p2.c)
                           ->  Seq Scan on pwj_extra.plt1_p2 plt1_p2_1
                                 Output: plt1_p2_1.a, plt1_p2_1.c
                                 Filter: (((plt1_p2_1.a % 25) = 0) AND ((plt1_p2_1.b % 25) = 0))
                           ->  Hash
                                 Output: plt2_p2.b, plt2_p2.c, (2)
                                 ->  Seq Scan on pwj_extra.plt2_p2
                                       Output: plt2_p2.b, plt2_p2.c, 2
                                       Filter: (((plt2_p2.a % 25) = 0) AND ((plt2_p2.b % 25) = 0))
                     ->  Hash Full Join
                           Output: plt2_p3.b, plt2_p3.c, plt1_p3_1.a, plt1_p3_1.c, COALESCE(plt2_p3.c, plt1_p3_1.c), (2)
                           Hash Cond: (plt1_p3_1.c = plt2_p3.c)
                           ->  Seq Scan on pwj_extra.plt1_p3 plt1_p3_1
                                 Output: plt1_p3_1.a, plt1_p3_1.c
                                 Filter: (((plt1_p3_1.a % 25) = 0) AND ((plt1_p3_1.b % 25) = 0))
                           ->  Hash
                                 Output: plt2_p3.b, plt2_p3.c, (2)
                                 ->  Seq Scan on pwj_extra.plt2_p3
                                       Output: plt2_p3.b, plt2_p3.c, 2
                                       Filter: (((plt2_p3.a % 25) = 0) AND ((plt2_p3.b % 25) = 0))
(52 rows)

SELECT * FROM (SELECT c, a as s1_n FROM plt1) as s1 NATURAL FULL JOIN (SELECT * FROM 
(SELECT c, b as s2_n, 2 as s2_2 FROM plt2 where a % 25 = 0 and b % 25 =0) as s2 
NATURAL FULL JOIN(SELECT c, a as s3_n FROM plt1 where a % 25 = 0 and b % 25 =0 ) as s3 ) ss2 
where s1_n % 25 = 0 ORDER by 1,2,3,4,5;
  c   | s1_n | s2_n | s2_2 | s3_n 
------+------+------+------+------
 0000 |    0 |    0 |    2 |    0
 0001 |   50 |   75 |    2 |   50
 0002 |  100 |      |      |  100
 0003 |  150 |  150 |    2 |  150
 0004 |  200 |  225 |    2 |  200
 0005 |  250 |      |      |  250
 0006 |  300 |  300 |    2 |  300
 0007 |  350 |  375 |    2 |  350
 0008 |  400 |      |      |  400
 0009 |  450 |  450 |    2 |  450
 0010 |  500 |  525 |    2 |  500
 0011 |  550 |      |      |  550
(12 rows)

--TODO - this query need to remove once testing done.
SELECT * FROM (SELECT c, a as s1_n FROM uplt1) as s1 NATURAL FULL JOIN (SELECT * FROM 
(SELECT c, b as s2_n, 2 as s2_2 FROM uplt2 where a % 25 = 0 and b % 25 =0) as s2 
NATURAL FULL JOIN(SELECT c, a as s3_n FROM uplt1 where a % 25 = 0 and b % 25 =0 ) as s3 ) ss2 
where s1_n % 25 = 0 ORDER by 1,2,3,4,5;
  c   | s1_n | s2_n | s2_2 | s3_n 
------+------+------+------+------
 0000 |    0 |    0 |    2 |    0
 0001 |   50 |   75 |    2 |   50
 0002 |  100 |      |      |  100
 0003 |  150 |  150 |    2 |  150
 0004 |  200 |  225 |    2 |  200
 0005 |  250 |      |      |  250
 0006 |  300 |  300 |    2 |  300
 0007 |  350 |  375 |    2 |  350
 0008 |  400 |      |      |  400
 0009 |  450 |  450 |    2 |  450
 0010 |  500 |  525 |    2 |  500
 0011 |  550 |      |      |  550
(12 rows)

--check for failure to generate a plan with multiple degenerate IN clauses
EXPLAIN (VERBOSE, COSTS OFF)
select count(*) from prt1 x where (x.a,x.b) in (select t1.a,t2.b from prt1 t1,prt2 t2 where t1.a=t2.b) 
and (x.c) in (select t3.c from plt1 t3,plt2 t4 where t3.c=t4.c);
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Aggregate
   Output: count(*)
   ->  Nested Loop Semi Join
         ->  Append
               ->  Nested Loop Semi Join
                     Output: x.c
                     ->  Seq Scan on pwj_extra.prt1_p1 x
                           Output: x.a, x.b, x.c
                           Filter: (x.a = x.b)
                     ->  Nested Loop
                           Output: t1.a, t2.b
                           ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
                                 Output: t1.a
                                 Index Cond: (t1.a = x.a)
                           ->  Index Only Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Index Cond: (t2.b = t1.a)
               ->  Nested Loop Semi Join
                     Output: x_1.c
                     ->  Seq Scan on pwj_extra.prt1_p2 x_1
                           Output: x_1.a, x_1.b, x_1.c
                           Filter: (x_1.a = x_1.b)
                     ->  Nested Loop
                           Output: t1_1.a, t2_1.b
                           ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a
                                 Index Cond: (t1_1.a = x_1.a)
                           ->  Index Only Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Index Cond: (t2_1.b = t1_1.a)
               ->  Nested Loop Semi Join
                     Output: x_2.c
                     Join Filter: (x_2.a = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt1_p3 x_2
                           Output: x_2.a, x_2.b, x_2.c
                           Filter: (x_2.a = x_2.b)
                     ->  Hash Join
                           Output: t1_2.a, t2_2.b
                           Hash Cond: (t1_2.a = t2_2.b)
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a
                           ->  Hash
                                 Output: t2_2.b
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b
         ->  Hash Join
               Output: t3.c, t4.c
               Hash Cond: (t3.c = t4.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t3
                           Output: t3.c
                           Filter: ((x.c)::text = t3.c)
                     ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                           Output: t3_1.c
                           Filter: ((x.c)::text = t3_1.c)
                     ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                           Output: t3_2.c
                           Filter: ((x.c)::text = t3_2.c)
               ->  Hash
                     Output: t4.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t4
                                 Output: t4.c
                                 Filter: ((x.c)::text = t4.c)
                           ->  Seq Scan on pwj_extra.plt2_p2 t4_1
                                 Output: t4_1.c
                                 Filter: ((x.c)::text = t4_1.c)
                           ->  Seq Scan on pwj_extra.plt2_p3 t4_2
                                 Output: t4_2.c
                                 Filter: ((x.c)::text = t4_2.c)
(70 rows)

select count(*) from prt1 x where (x.a,x.b) in (select t1.a,t2.b from prt1 t1,prt2 t2 where t1.a=t2.b) 
and (x.c) in (select t3.c from plt1 t3,plt2 t4 where t3.c=t4.c);
 count 
-------
     2
(1 row)

--TODO - this query need to remove once testing done.
select count(*) from uprt1 x where (x.a,x.b) in (select t1.a,t2.b from uprt1 t1,uprt2 t2 where t1.a=t2.b) 
and (x.c) in (select t3.c from uplt1 t3,uplt2 t4 where t3.c=t4.c);
 count 
-------
     2
(1 row)

--check handling of outer joins within semijoin and anti joins
EXPLAIN (VERBOSE, COSTS OFF)
select * from prt1 t1 where exists (select 1 from prt1 t2 left join prt2 t3 on t2.a = t3.b 
where not exists (select 1 from prt1 t4 left join prt2 t5 on t4.a = t5.b where t1.a % 25 <> 0));
                               QUERY PLAN                               
------------------------------------------------------------------------
 Nested Loop Semi Join
   Output: t1.a, t1.b, t1.c
   ->  Nested Loop Anti Join
         Output: t1.a, t1.b, t1.c
         Join Filter: ((t1.a % 25) <> 0)
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
         ->  Materialize
               ->  Append
                     ->  Hash Left Join
                           Hash Cond: (t4.a = t5.b)
                           ->  Seq Scan on pwj_extra.prt1_p1 t4
                                 Output: t4.a
                           ->  Hash
                                 Output: t5.b
                                 ->  Seq Scan on pwj_extra.prt2_p1 t5
                                       Output: t5.b
                     ->  Hash Left Join
                           Hash Cond: (t4_1.a = t5_1.b)
                           ->  Seq Scan on pwj_extra.prt1_p2 t4_1
                                 Output: t4_1.a
                           ->  Hash
                                 Output: t5_1.b
                                 ->  Seq Scan on pwj_extra.prt2_p2 t5_1
                                       Output: t5_1.b
                     ->  Hash Left Join
                           Hash Cond: (t4_2.a = t5_2.b)
                           ->  Seq Scan on pwj_extra.prt1_p3 t4_2
                                 Output: t4_2.a
                           ->  Hash
                                 Output: t5_2.b
                                 ->  Seq Scan on pwj_extra.prt2_p3 t5_2
                                       Output: t5_2.b
   ->  Materialize
         ->  Append
               ->  Hash Left Join
                     Hash Cond: (t2.a = t3.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t2
                           Output: t2.a
                     ->  Hash
                           Output: t3.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t3
                                 Output: t3.b
               ->  Hash Left Join
                     Hash Cond: (t2_1.a = t3_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t2_1
                           Output: t2_1.a
                     ->  Hash
                           Output: t3_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t3_1
                                 Output: t3_1.b
               ->  Hash Left Join
                     Hash Cond: (t2_2.a = t3_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t2_2
                           Output: t2_2.a
                     ->  Hash
                           Output: t3_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t3_2
                                 Output: t3_2.b
(64 rows)

select * from prt1 t1 where exists (select 1 from prt1 t2 left join prt2 t3 on t2.a = t3.b 
where not exists (select 1 from prt1 t4 left join prt2 t5 on t4.a = t5.b where t1.a % 25 <> 0));
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0050
 100 | 100 | 0100
 150 | 150 | 0150
 200 | 200 | 0200
 250 | 250 | 0250
 300 | 300 | 0300
 350 | 350 | 0350
 400 | 400 | 0400
 450 | 450 | 0450
 500 | 500 | 0500
 550 | 550 | 0550
(12 rows)

--TODO - this query need to remove once testing done.
select * from uprt1 t1 where exists (select 1 from uprt1 t2 left join uprt2 t3 on t2.a = t3.b 
where not exists (select 1 from uprt1 t4 left join uprt2 t5 on t4.a = t5.b where t1.a % 25 <> 0));
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0050
 100 | 100 | 0100
 150 | 150 | 0150
 200 | 200 | 0200
 250 | 250 | 0250
 300 | 300 | 0300
 350 | 350 | 0350
 400 | 400 | 0400
 450 | 450 | 0450
 500 | 500 | 0500
 550 | 550 | 0550
(12 rows)

-- test placement of movable quals in a parameterized join tree
EXPLAIN (VERBOSE, COSTS OFF)
select * from prt1 t1 left join (prt2 t2 join prt1 t3 on t2.b = t3.a) on t1.a = t2.b and t1.a = t3.a where t1.a %25 = 0;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Append
   ->  Nested Loop Left Join
         Output: t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c
         ->  Seq Scan on pwj_extra.prt1_p1 t1
               Output: t1.a, t1.b, t1.c
               Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t2.a, t2.b, t2.c, t3.a, t3.b, t3.c
               Join Filter: (t1.a = t2.b)
               ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t3
                     Output: t3.a, t3.b, t3.c
                     Index Cond: (t1.a = t3.a)
               ->  Index Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2
                     Output: t2.a, t2.b, t2.c
                     Index Cond: (t2.b = t3.a)
   ->  Nested Loop Left Join
         Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
         ->  Seq Scan on pwj_extra.prt1_p2 t1_1
               Output: t1_1.a, t1_1.b, t1_1.c
               Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t2_1.a, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
               Join Filter: (t1_1.a = t2_1.b)
               ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t3_1
                     Output: t3_1.a, t3_1.b, t3_1.c
                     Index Cond: (t1_1.a = t3_1.a)
               ->  Index Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.a, t2_1.b, t2_1.c
                     Index Cond: (t2_1.b = t3_1.a)
   ->  Hash Right Join
         Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
         Hash Cond: ((t2_2.b = t1_2.a) AND (t3_2.a = t1_2.a))
         ->  Hash Join
               Output: t2_2.a, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
               Hash Cond: (t3_2.a = t2_2.b)
               ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                     Output: t3_2.a, t3_2.b, t3_2.c
               ->  Hash
                     Output: t2_2.a, t2_2.b, t2_2.c
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.a, t2_2.b, t2_2.c
         ->  Hash
               Output: t1_2.a, t1_2.b, t1_2.c
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
(46 rows)

select * from prt1 t1 left join (prt2 t2 join prt1 t3 on t2.b = t3.a) on t1.a = t2.b and t1.a = t3.a where t1.a %25 = 0;
  a  |  b  |  c   |  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0050 |     |     |      |     |     | 
 100 | 100 | 0100 |     |     |      |     |     | 
 150 | 150 | 0150 | 150 | 150 | 0150 | 150 | 150 | 0150
 200 | 200 | 0200 |     |     |      |     |     | 
 250 | 250 | 0250 |     |     |      |     |     | 
 300 | 300 | 0300 | 300 | 300 | 0300 | 300 | 300 | 0300
 350 | 350 | 0350 |     |     |      |     |     | 
 400 | 400 | 0400 |     |     |      |     |     | 
 450 | 450 | 0450 | 450 | 450 | 0450 | 450 | 450 | 0450
 550 | 550 | 0550 |     |     |      |     |     | 
 500 | 500 | 0500 |     |     |      |     |     | 
(12 rows)

--TODO - this query need to remove once testing done.
select * from uprt1 t1 left join (uprt2 t2 join uprt1 t3 on t2.b = t3.a) on t1.a = t2.b and t1.a = t3.a where t1.a %25 = 0;
  a  |  b  |  c   |  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0050 |     |     |      |     |     | 
 100 | 100 | 0100 |     |     |      |     |     | 
 150 | 150 | 0150 | 150 | 150 | 0150 | 150 | 150 | 0150
 200 | 200 | 0200 |     |     |      |     |     | 
 250 | 250 | 0250 |     |     |      |     |     | 
 300 | 300 | 0300 | 300 | 300 | 0300 | 300 | 300 | 0300
 350 | 350 | 0350 |     |     |      |     |     | 
 400 | 400 | 0400 |     |     |      |     |     | 
 450 | 450 | 0450 | 450 | 450 | 0450 | 450 | 450 | 0450
 500 | 500 | 0500 |     |     |      |     |     | 
 550 | 550 | 0550 |     |     |      |     |     | 
(12 rows)

-- test placement of movable quals in a parameterized join tree
EXPLAIN (VERBOSE, COSTS OFF)
select b.b from prt1 a join prt2 b on a.a = b.b left join plt1 c on b.a % 25 = 0 and c.c = a.c join prt1 i1 on b.b = i1.a
right join prt2 i2 on i2.b = b.b where b.a % 25 = 0 order by 1;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: b.b
   Sort Key: b.b
   ->  Nested Loop Left Join
         Output: b.b
         Join Filter: ((b.a % 25) = 0)
         ->  Nested Loop
               Output: a.c, b.b, b.a
               ->  Append
                     ->  Nested Loop
                           Output: a.a, a.c, b.b, b.a, i2.b
                           Join Filter: (b.b = a.a)
                           ->  Hash Join
                                 Output: b.b, b.a, i2.b
                                 Hash Cond: (i2.b = b.b)
                                 ->  Seq Scan on pwj_extra.prt2_p1 i2
                                       Output: i2.b
                                 ->  Hash
                                       Output: b.b, b.a
                                       ->  Seq Scan on pwj_extra.prt2_p1 b
                                             Output: b.b, b.a
                                             Filter: ((b.a % 25) = 0)
                           ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 a
                                 Output: a.a, a.c
                                 Index Cond: (a.a = i2.b)
                     ->  Nested Loop
                           Output: a_1.a, a_1.c, b_1.b, b_1.a, i2_1.b
                           Join Filter: (b_1.b = a_1.a)
                           ->  Hash Join
                                 Output: b_1.b, b_1.a, i2_1.b
                                 Hash Cond: (i2_1.b = b_1.b)
                                 ->  Seq Scan on pwj_extra.prt2_p2 i2_1
                                       Output: i2_1.b
                                 ->  Hash
                                       Output: b_1.b, b_1.a
                                       ->  Seq Scan on pwj_extra.prt2_p2 b_1
                                             Output: b_1.b, b_1.a
                                             Filter: ((b_1.a % 25) = 0)
                           ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 a_1
                                 Output: a_1.a, a_1.c
                                 Index Cond: (a_1.a = i2_1.b)
                     ->  Nested Loop
                           Output: a_2.a, a_2.c, b_2.b, b_2.a, i2_2.b
                           Join Filter: (b_2.b = a_2.a)
                           ->  Hash Join
                                 Output: b_2.b, b_2.a, i2_2.b
                                 Hash Cond: (i2_2.b = b_2.b)
                                 ->  Seq Scan on pwj_extra.prt2_p3 i2_2
                                       Output: i2_2.b
                                 ->  Hash
                                       Output: b_2.b, b_2.a
                                       ->  Seq Scan on pwj_extra.prt2_p3 b_2
                                             Output: b_2.b, b_2.a
                                             Filter: ((b_2.a % 25) = 0)
                           ->  Index Scan using iprt1_p3_a on pwj_extra.prt1_p3 a_2
                                 Output: a_2.a, a_2.c
                                 Index Cond: (a_2.a = i2_2.b)
               ->  Append
                     ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 i1
                           Output: i1.a
                           Index Cond: (i1.a = a.a)
                     ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 i1_1
                           Output: i1_1.a
                           Index Cond: (i1_1.a = a.a)
                     ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 i1_2
                           Output: i1_2.a
                           Index Cond: (i1_2.a = a.a)
         ->  Append
               ->  Index Only Scan using iplt1_p1_c on pwj_extra.plt1_p1 c
                     Output: c.c
                     Index Cond: (c.c = (a.c)::text)
               ->  Index Only Scan using iplt1_p2_c on pwj_extra.plt1_p2 c_1
                     Output: c_1.c
                     Index Cond: (c_1.c = (a.c)::text)
               ->  Index Only Scan using iplt1_p3_c on pwj_extra.plt1_p3 c_2
                     Output: c_2.c
                     Index Cond: (c_2.c = (a.c)::text)
(77 rows)

select b.b from prt1 a join prt2 b on a.a = b.b left join plt1 c on b.a % 25 = 0 and c.c = a.c join prt1 i1 on b.b = i1.a
right join prt2 i2 on i2.b = b.b where b.a % 25 = 0 order by 1;
  b  
-----
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
 150
 300
 450
(28 rows)

--TODO - this query need to remove once testing done.
select b.b from uprt1 a join uprt2 b on a.a = b.b left join uplt1 c on b.a % 25 = 0 and c.c = a.c join uprt1 i1 on b.b = i1.a
right join uprt2 i2 on i2.b = b.b where b.a % 25 = 0 order by 1;
  b  
-----
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
 150
 300
 450
(28 rows)

-- lateral with VALUES
EXPLAIN (VERBOSE, COSTS OFF)
select count(*) from prt1 a, prt2 b join lateral (values(a.a)) ss(x) on b.b = ss.x;
                        QUERY PLAN                         
-----------------------------------------------------------
 Aggregate
   Output: count(*)
   ->  Append
         ->  Hash Join
               Hash Cond: (a.a = b.b)
               ->  Seq Scan on pwj_extra.prt1_p1 a
                     Output: a.a
               ->  Hash
                     Output: b.b
                     ->  Seq Scan on pwj_extra.prt2_p1 b
                           Output: b.b
         ->  Hash Join
               Hash Cond: (a_1.a = b_1.b)
               ->  Seq Scan on pwj_extra.prt1_p2 a_1
                     Output: a_1.a
               ->  Hash
                     Output: b_1.b
                     ->  Seq Scan on pwj_extra.prt2_p2 b_1
                           Output: b_1.b
         ->  Hash Join
               Hash Cond: (a_2.a = b_2.b)
               ->  Seq Scan on pwj_extra.prt1_p3 a_2
                     Output: a_2.a
               ->  Hash
                     Output: b_2.b
                     ->  Seq Scan on pwj_extra.prt2_p3 b_2
                           Output: b_2.b
(27 rows)

select count(*) from prt1 a, prt2 b join lateral (values(a.a)) ss(x) on b.b = ss.x;
 count 
-------
   100
(1 row)

--TODO - this query need to remove once testing done.
select count(*) from uprt1 a, uprt2 b join lateral (values(a.a)) ss(x) on b.b = ss.x;
 count 
-------
   100
(1 row)

--========================================================================================================================================================
-- added test cases for sql objects
--creating data set for range partition
create view prt1_view as select * from prt1;
create view prt2_view as select * from prt2;
create view prt1_prt2_view as select t1.a,t2.b,t1.c from prt1 t1 inner join prt2 t2 on (t1.a = t2.b);
--cross join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1 t1 cross join prt2 t2 where t1.a % 150 = 0 and t2.b % 150 = 0 order by 1,2;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t2.b
   Sort Key: t1.a, t2.b
   ->  Nested Loop
         Output: t1.a, t2.b
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 150) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 150) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 150) = 0)
         ->  Materialize
               Output: t2.b
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.b
                           Filter: ((t2.b % 150) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b
                           Filter: ((t2_1.b % 150) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b
                           Filter: ((t2_2.b % 150) = 0)
(27 rows)

select t1.a,t2.b from prt1 t1 cross join prt2 t2 where t1.a % 150 = 0 and t2.b % 150 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
   0 | 150
   0 | 300
   0 | 450
 150 |   0
 150 | 150
 150 | 300
 150 | 450
 300 |   0
 300 | 150
 300 | 300
 300 | 450
 450 |   0
 450 | 150
 450 | 300
 450 | 450
(16 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1 t1 cross join uprt2 t2 where t1.a % 150 = 0 and t2.b % 150 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
   0 | 150
   0 | 300
   0 | 450
 150 |   0
 150 | 150
 150 | 300
 150 | 450
 300 |   0
 300 | 150
 300 | 300
 300 | 450
 450 |   0
 450 | 150
 450 | 300
 450 | 450
(16 rows)

--inner join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from uprt1 t1 inner join prt2 t2 on (t1.a = t2.b) inner join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 order by 1,2,3;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         Join Filter: (t1.a = t3.a)
         ->  Hash Join
               Output: t1.a, t2.b
               Hash Cond: (t2.b = t1.a)
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.b
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b
               ->  Hash
                     Output: t1.a
                     ->  Seq Scan on pwj_extra.uprt1 t1
                           Output: t1.a
                           Filter: ((t1.a % 25) = 0)
         ->  Append
               ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t3
                     Output: t3.a
                     Index Cond: (t3.a = t2.b)
               ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t3_1
                     Output: t3_1.a
                     Index Cond: (t3_1.a = t2.b)
               ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t3_2
                     Output: t3_2.a
                     Index Cond: (t3_2.a = t2.b)
(31 rows)

select t1.a,t2.b,t3.a from uprt1 t1 inner join prt2 t2 on (t1.a = t2.b) inner join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--left outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 left outer join prt2 t2 on (t1.a = t2.b) left outer join uprt1 t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Seq Scan on pwj_extra.uprt1 t3
               Output: t3.a, t3.b, t3.c
               Filter: ((t3.a % 125) = 0)
         ->  Materialize
               Output: t1.a, t2.b
               ->  Append
                     ->  Nested Loop
                           Output: t1.a, t2.b
                           Join Filter: (t1.a = t2.b)
                           ->  Seq Scan on pwj_extra.prt1_p1 t1
                                 Output: t1.a
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b, t2.a
                                 Filter: (t2.b = t2.a)
                     ->  Nested Loop
                           Output: t1_1.a, t2_1.b
                           Join Filter: (t1_1.a = t2_1.b)
                           ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b, t2_1.a
                                 Filter: (t2_1.b = t2_1.a)
                     ->  Nested Loop
                           Output: t1_2.a, t2_2.b
                           Join Filter: (t1_2.a = t2_2.b)
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.a
                                 Filter: (t2_2.b = t2_2.a)
(38 rows)

select t1.a,t2.b,t3.a from prt1 t1 left outer join prt2 t2 on (t1.a = t2.b) left outer join uprt1 t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 |   0 | 250
   0 |   0 | 500
 150 | 150 |   0
 150 | 150 | 250
 150 | 150 | 500
 300 | 300 |   0
 300 | 300 | 250
 300 | 300 | 500
 450 | 450 |   0
 450 | 450 | 250
 450 | 450 | 500
(12 rows)

--right outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
 select t1.a,t2.b,t3.a from prt1 t1 right outer join prt2 t2 on (t1.a = t2.b) right outer join uprt1 t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Seq Scan on pwj_extra.uprt1 t3
               Output: t3.a, t3.b, t3.c
               Filter: ((t3.a % 125) = 0)
         ->  Materialize
               Output: t1.a, t2.b
               ->  Append
                     ->  Nested Loop
                           Output: t1.a, t2.b
                           Join Filter: (t1.a = t2.b)
                           ->  Seq Scan on pwj_extra.prt1_p1 t1
                                 Output: t1.a
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b, t2.a
                                 Filter: (t2.b = t2.a)
                     ->  Nested Loop
                           Output: t1_1.a, t2_1.b
                           Join Filter: (t1_1.a = t2_1.b)
                           ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b, t2_1.a
                                 Filter: (t2_1.b = t2_1.a)
                     ->  Nested Loop
                           Output: t1_2.a, t2_2.b
                           Join Filter: (t1_2.a = t2_2.b)
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.a
                                 Filter: (t2_2.b = t2_2.a)
(38 rows)

 select t1.a,t2.b,t3.a from prt1 t1 right outer join prt2 t2 on (t1.a = t2.b) right outer join uprt1 t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 |   0 | 250
   0 |   0 | 500
 150 | 150 |   0
 150 | 150 | 250
 150 | 150 | 500
 300 | 300 |   0
 300 | 300 | 250
 300 | 300 | 500
 450 | 450 |   0
 450 | 450 | 250
 450 | 450 | 500
(12 rows)

--full outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 full outer join prt2 t2 on (t1.a = t2.b) full outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 order by 1,2,3;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b, t3.a
   ->  Hash Right Join
         Output: t1.a, t2.b, t3.a
         Hash Cond: (t3.a = t2.b)
         ->  Seq Scan on pwj_extra.uprt1 t3
               Output: t3.a, t3.b, t3.c
         ->  Hash
               Output: t1.a, t2.b
               ->  Append
                     ->  Hash Right Join
                           Output: t1.a, t2.b
                           Hash Cond: (t2.b = t1.a)
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                           ->  Hash
                                 Output: t1.a
                                 ->  Seq Scan on pwj_extra.prt1_p1 t1
                                       Output: t1.a
                                       Filter: ((t1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_1.a, t2_1.b
                           Hash Cond: (t2_1.b = t1_1.a)
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                           ->  Hash
                                 Output: t1_1.a
                                 ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                       Output: t1_1.a
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_2.a, t2_2.b
                           Hash Cond: (t2_2.b = t1_2.a)
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                           ->  Hash
                                 Output: t1_2.a
                                 ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                       Output: t1_2.a
                                       Filter: ((t1_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.a from prt1 t1 full outer join prt2 t2 on (t1.a = t2.b) full outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
  50 |     |    
 100 |     |    
 150 | 150 | 150
 200 |     |    
 250 |     |    
 300 | 300 | 300
 350 |     |    
 400 |     |    
 450 | 450 | 450
 500 |     |    
 550 |     |    
(12 rows)

-- natural join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1 t1 natural join prt2 t2 where t1.a % 25 = 0 order by 1,2;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b
   Sort Key: t1.a, t2.b
   ->  Hash Join
         Output: t1.a, t2.b
         Hash Cond: ((t2.a = t1.a) AND (t2.b = t1.b) AND ((t2.c)::text = (t1.c)::text))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
(25 rows)

select t1.a,t2.b from prt1 t1 natural join prt2 t2 where t1.a % 25 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1 t1 natural join uprt2 t2 where t1.a % 25 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

-- semi join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.a from prt1 t1 where exists (select 1 from prt2 t2 where t1.a = t2.b) and t1.a % 25 = 0 order by 1,2;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.a
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.a
         ->  Append
               ->  Nested Loop Semi Join
                     Output: t1.a, t1.b
                     Join Filter: (t1.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.b
               ->  Nested Loop Semi Join
                     Output: t1_1.a, t1_1.b
                     Join Filter: (t1_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b
               ->  Nested Loop Semi Join
                     Output: t1_2.a, t1_2.b
                     Join Filter: (t1_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b
(30 rows)

select t1.a,t1.b,t1.a from prt1 t1 where exists (select 1 from prt2 t2 where t1.a = t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.a from uprt1 t1 where exists (select 1 from uprt2 t2 where t1.a = t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- anti join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.a from prt1 t1 where not exists (select 1 from prt2 t2 where t1.a = t2.b) and t1.a % 25 = 0 order by 1,2;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.a
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.a
         ->  Append
               ->  Nested Loop Anti Join
                     Output: t1.a, t1.b
                     Join Filter: (t1.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.b
               ->  Nested Loop Anti Join
                     Output: t1_1.a, t1_1.b
                     Join Filter: (t1_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b
               ->  Nested Loop Anti Join
                     Output: t1_2.a, t1_2.b
                     Join Filter: (t1_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b
(30 rows)

select t1.a,t1.b,t1.a from prt1 t1 where not exists (select 1 from prt2 t2 where t1.a = t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
  50 |  50 |  50
 100 | 100 | 100
 200 | 200 | 200
 250 | 250 | 250
 350 | 350 | 350
 400 | 400 | 400
 500 | 500 | 500
 550 | 550 | 550
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.a from uprt1 t1 where not exists (select 1 from uprt2 t2 where t1.a = t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
  50 |  50 |  50
 100 | 100 | 100
 200 | 200 | 200
 250 | 250 | 250
 350 | 350 | 350
 400 | 400 | 400
 500 | 500 | 500
 550 | 550 | 550
(8 rows)

-- self join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b as t1_b,t2.b as t2_b from prt1 t1, prt2 t2 where t1.a = t2.b and t1.a % 25 = 0 order by 1,2,3;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b
   Sort Key: t1.a, t1.b
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.b, t2.b
               Hash Cond: (t2.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b
               ->  Hash
                     Output: t1.a, t1.b
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, t1_1.b, t2_1.b
               Hash Cond: (t2_1.b = t1_1.a)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b
               ->  Hash
                     Output: t1_1.a, t1_1.b
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, t1_2.b, t2_2.b
               Hash Cond: (t2_2.b = t1_2.a)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b
               ->  Hash
                     Output: t1_2.a, t1_2.b
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

select t1.a,t1.b as t1_b,t2.b as t2_b from prt1 t1, prt2 t2 where t1.a = t2.b and t1.a % 25 = 0 order by 1,2,3;
  a  | t1_b | t2_b 
-----+------+------
   0 |    0 |    0
 150 |  150 |  150
 300 |  300 |  300
 450 |  450 |  450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b as t1_b,t2.b as t2_b from uprt1 t1, uprt2 t2 where t1.a = t2.b and t1.a % 25 = 0 order by 1,2,3;
  a  | t1_b | t2_b 
-----+------+------
   0 |    0 |    0
 150 |  150 |  150
 300 |  300 |  300
 450 |  450 |  450
(4 rows)

-- join with CTE
EXPLAIN (VERBOSE, COSTS OFF)
with ED as (select t1.b,t2.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b)) select b,a from ED where a % 25 = 0 order by 1,2;
                          QUERY PLAN                          
--------------------------------------------------------------
 Sort
   Output: ed.b, ed.a
   Sort Key: ed.b, ed.a
   CTE ed
     ->  Append
           ->  Hash Join
                 Output: t1.b, t2.a
                 Hash Cond: (t1.a = t2.b)
                 ->  Seq Scan on pwj_extra.prt1_p1 t1
                       Output: t1.b, t1.a
                 ->  Hash
                       Output: t2.a, t2.b
                       ->  Seq Scan on pwj_extra.prt2_p1 t2
                             Output: t2.a, t2.b
           ->  Hash Join
                 Output: t1_1.b, t2_1.a
                 Hash Cond: (t1_1.a = t2_1.b)
                 ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                       Output: t1_1.b, t1_1.a
                 ->  Hash
                       Output: t2_1.a, t2_1.b
                       ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                             Output: t2_1.a, t2_1.b
           ->  Hash Join
                 Output: t1_2.b, t2_2.a
                 Hash Cond: (t1_2.a = t2_2.b)
                 ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                       Output: t1_2.b, t1_2.a
                 ->  Hash
                       Output: t2_2.a, t2_2.b
                       ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                             Output: t2_2.a, t2_2.b
   ->  CTE Scan on ed
         Output: ed.b, ed.a
         Filter: ((ed.a % 25) = 0)
(35 rows)

with ED as (select t1.b,t2.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b)) select b,a from ED where a % 25 = 0 order by 1,2;
  b  |  a  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
with ED as (select t1.b,t2.a from uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b)) select b,a from ED where a % 25 = 0 order by 1,2;
  b  |  a  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--Join combinations
--cross and inner join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 inner join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
(48 rows)

select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 inner join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 cross join uprt2 t2 inner join uprt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--cross and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 left outer join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
(48 rows)

select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 left outer join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 cross join uprt2 t2 left outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--cross and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 right outer join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
(48 rows)

select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 right outer join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 cross join uprt2 t2 right outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--cross and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 full outer join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
(48 rows)

select t1.a,t2.b,t3.a from prt1 t1 cross join prt2 t2 full outer join prt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 cross join uprt2 t2 full outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--inner and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) left outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t2.b, t3.a
               Join Filter: (t2.b = t1.a)
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_1.a, t2_1.b, t3_1.a
               Join Filter: (t2_1.b = t1_1.a)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_2.a, t2_2.b, t3_2.a
               Join Filter: (t2_2.b = t1_2.a)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 25) = 0)
(52 rows)

select t1.a,t2.b,t3.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) left outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) left outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--inner and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) right outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t2.b, t3.a
               Join Filter: (t2.b = t1.a)
               ->  Hash Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Index Cond: (t1.a = t3.a)
                     Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_1.a, t2_1.b, t3_1.a
               Join Filter: (t2_1.b = t1_1.a)
               ->  Hash Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Index Cond: (t1_1.a = t3_1.a)
                     Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_2.a, t2_2.b, t3_2.a
               Join Filter: (t2_2.b = t1_2.a)
               ->  Hash Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Index Cond: (t1_2.a = t3_2.a)
                     Filter: ((t1_2.a % 25) = 0)
(55 rows)

select t1.a,t2.b,t3.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) right outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) right outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--inner and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) full outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t2.b, t3.a
               Join Filter: (t2.b = t1.a)
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_1.a, t2_1.b, t3_1.a
               Join Filter: (t2_1.b = t1_1.a)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_2.a, t2_2.b, t3_2.a
               Join Filter: (t2_2.b = t1_2.a)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 25) = 0)
(52 rows)

select t1.a,t2.b,t3.a from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) full outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) full outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--left outer and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 left outer join prt2 t2 on (t1.a = t2.b) right outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t2.b, t3.a
               Join Filter: (t2.b = t1.a)
               ->  Hash Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Index Cond: (t1.a = t3.a)
                     Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_1.a, t2_1.b, t3_1.a
               Join Filter: (t2_1.b = t1_1.a)
               ->  Hash Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Index Cond: (t1_1.a = t3_1.a)
                     Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_2.a, t2_2.b, t3_2.a
               Join Filter: (t2_2.b = t1_2.a)
               ->  Hash Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Index Cond: (t1_2.a = t3_2.a)
                     Filter: ((t1_2.a % 25) = 0)
(55 rows)

select t1.a,t2.b,t3.a from prt1 t1 left outer join prt2 t2 on (t1.a = t2.b) right outer join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 left outer join uprt2 t2 on (t1.a = t2.b) right outer join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--left outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 left outer join prt2 t2 on (t1.a = t2.b) full join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t2.b, t3.a
               Join Filter: (t2.b = t1.a)
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_1.a, t2_1.b, t3_1.a
               Join Filter: (t2_1.b = t1_1.a)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_2.a, t2_2.b, t3_2.a
               Join Filter: (t2_2.b = t1_2.a)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 25) = 0)
(52 rows)

select t1.a,t2.b,t3.a from prt1 t1 left outer join prt2 t2 on (t1.a = t2.b) full join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 left outer join uprt2 t2 on (t1.a = t2.b) full join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--right outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1 t1 right join prt2 t2 on (t1.a = t2.b) full join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t2.b, t3.a
               Join Filter: (t2.b = t1.a)
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: (t3.a = t2.b)
                     ->  Seq Scan on pwj_extra.prt1_p1 t3
                           Output: t3.a
                     ->  Hash
                           Output: t2.b
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_1.a, t2_1.b, t3_1.a
               Join Filter: (t2_1.b = t1_1.a)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: (t3_1.a = t2_1.b)
                     ->  Seq Scan on pwj_extra.prt1_p2 t3_1
                           Output: t3_1.a
                     ->  Hash
                           Output: t2_1.b
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t1_2.a, t2_2.b, t3_2.a
               Join Filter: (t2_2.b = t1_2.a)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: (t3_2.a = t2_2.b)
                     ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                           Output: t3_2.a
                     ->  Hash
                           Output: t2_2.b
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 25) = 0)
(52 rows)

select t1.a,t2.b,t3.a from prt1 t1 right join prt2 t2 on (t1.a = t2.b) full join prt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1 t1 right join uprt2 t2 on (t1.a = t2.b) full join uprt1 t3 on (t2.b = t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- Join with views
--join of two partition table simple views
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1_view t1 inner join prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
                        QUERY PLAN                        
----------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt2_p1.a, prt2_p1.b
   Sort Key: prt1_p1.a, prt2_p1.a
   ->  Append
         ->  Hash Join
               Output: prt1_p1.a, prt2_p1.a, prt2_p1.b
               Hash Cond: (prt2_p1.b = prt1_p1.a)
               ->  Seq Scan on pwj_extra.prt2_p1
                     Output: prt2_p1.a, prt2_p1.b
               ->  Hash
                     Output: prt1_p1.a
                     ->  Seq Scan on pwj_extra.prt1_p1
                           Output: prt1_p1.a
                           Filter: ((prt1_p1.a % 25) = 0)
         ->  Hash Join
               Output: prt1_p2.a, prt2_p2.a, prt2_p2.b
               Hash Cond: (prt2_p2.b = prt1_p2.a)
               ->  Seq Scan on pwj_extra.prt2_p2
                     Output: prt2_p2.a, prt2_p2.b
               ->  Hash
                     Output: prt1_p2.a
                     ->  Seq Scan on pwj_extra.prt1_p2
                           Output: prt1_p2.a
                           Filter: ((prt1_p2.a % 25) = 0)
         ->  Hash Join
               Output: prt1_p3.a, prt2_p3.a, prt2_p3.b
               Hash Cond: (prt2_p3.b = prt1_p3.a)
               ->  Seq Scan on pwj_extra.prt2_p3
                     Output: prt2_p3.a, prt2_p3.b
               ->  Hash
                     Output: prt1_p3.a
                     ->  Seq Scan on pwj_extra.prt1_p3
                           Output: prt1_p3.a
                           Filter: ((prt1_p3.a % 25) = 0)
(34 rows)

select t1.a,t2.a,t2.b from prt1_view t1 inner join prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--join of one partition table and one partition table simple view
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1 t1 inner join prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, prt2_p1.a, prt2_p1.b
   Sort Key: t1.a, prt2_p1.a
   ->  Append
         ->  Hash Join
               Output: t1.a, prt2_p1.a, prt2_p1.b
               Hash Cond: (prt2_p1.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p1
                     Output: prt2_p1.a, prt2_p1.b
               ->  Hash
                     Output: t1.a
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, prt2_p2.a, prt2_p2.b
               Hash Cond: (prt2_p2.b = t1_1.a)
               ->  Seq Scan on pwj_extra.prt2_p2
                     Output: prt2_p2.a, prt2_p2.b
               ->  Hash
                     Output: t1_1.a
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, prt2_p3.a, prt2_p3.b
               Hash Cond: (prt2_p3.b = t1_2.a)
               ->  Seq Scan on pwj_extra.prt2_p3
                     Output: prt2_p3.a, prt2_p3.b
               ->  Hash
                     Output: t1_2.a
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

select t1.a,t2.a,t2.b from prt1 t1 inner join prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--join of two partition table complex views
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1_prt2_view t1 inner join prt1_prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1_3.a, t2_3.b
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t1_3.a, t2_3.b
               Join Filter: (t1.a = t2_3.b)
               ->  Nested Loop
                     Output: t1.a, t2.b, t1_3.a
                     Join Filter: (t1.a = t1_3.a)
                     ->  Hash Join
                           Output: t1.a, t2.b
                           Hash Cond: (t2.b = t1.a)
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                           ->  Hash
                                 Output: t1.a
                                 ->  Seq Scan on pwj_extra.prt1_p1 t1
                                       Output: t1.a
                                       Filter: ((t1.a % 25) = 0)
                     ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1_3
                           Output: t1_3.a
                           Index Cond: (t1_3.a = t2.b)
               ->  Index Only Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2_3
                     Output: t2_3.b
                     Index Cond: (t2_3.b = t1_3.a)
         ->  Nested Loop
               Output: t1_1.a, t1_4.a, t2_4.b
               Join Filter: (t1_1.a = t2_4.b)
               ->  Nested Loop
                     Output: t1_1.a, t2_1.b, t1_4.a
                     Join Filter: (t1_1.a = t1_4.a)
                     ->  Hash Join
                           Output: t1_1.a, t2_1.b
                           Hash Cond: (t2_1.b = t1_1.a)
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                           ->  Hash
                                 Output: t1_1.a
                                 ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                       Output: t1_1.a
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_4
                           Output: t1_4.a
                           Index Cond: (t1_4.a = t2_1.b)
               ->  Index Only Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_4
                     Output: t2_4.b
                     Index Cond: (t2_4.b = t1_4.a)
         ->  Nested Loop
               Output: t1_2.a, t1_5.a, t2_5.b
               Join Filter: (t1_2.a = t2_5.b)
               ->  Nested Loop
                     Output: t1_2.a, t2_2.b, t1_5.a
                     Join Filter: (t1_2.a = t1_5.a)
                     ->  Hash Join
                           Output: t1_2.a, t2_2.b
                           Hash Cond: (t2_2.b = t1_2.a)
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b
                           ->  Hash
                                 Output: t1_2.a
                                 ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                       Output: t1_2.a
                                       Filter: ((t1_2.a % 25) = 0)
                     ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_5
                           Output: t1_5.a
                           Index Cond: (t1_5.a = t2_2.b)
               ->  Index Only Scan using iprt2_p3_b on pwj_extra.prt2_p3 t2_5
                     Output: t2_5.b
                     Index Cond: (t2_5.b = t1_5.a)
(70 rows)

select t1.a,t2.a,t2.b from prt1_prt2_view t1 inner join prt1_prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--join of one partition table and other partition table complex view
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1 t1 inner join prt1_prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1_3.a, t2.b
   Sort Key: t1.a
   ->  Append
         ->  Nested Loop
               Output: t1.a, t1_3.a, t2.b
               ->  Hash Join
                     Output: t1.a, t2.b
                     Hash Cond: (t2.b = t1.a)
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.b
                     ->  Hash
                           Output: t1.a
                           ->  Seq Scan on pwj_extra.prt1_p1 t1
                                 Output: t1.a
                                 Filter: ((t1.a % 25) = 0)
               ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1_3
                     Output: t1_3.a
                     Index Cond: (t1_3.a = t2.b)
         ->  Nested Loop
               Output: t1_1.a, t1_4.a, t2_1.b
               ->  Hash Join
                     Output: t1_1.a, t2_1.b
                     Hash Cond: (t2_1.b = t1_1.a)
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.b
                     ->  Hash
                           Output: t1_1.a
                           ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a
                                 Filter: ((t1_1.a % 25) = 0)
               ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_4
                     Output: t1_4.a
                     Index Cond: (t1_4.a = t2_1.b)
         ->  Nested Loop
               Output: t1_2.a, t1_5.a, t2_2.b
               ->  Hash Join
                     Output: t1_2.a, t2_2.b
                     Hash Cond: (t2_2.b = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.b
                     ->  Hash
                           Output: t1_2.a
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a
                                 Filter: ((t1_2.a % 25) = 0)
               ->  Index Only Scan using iprt1_p3_a on pwj_extra.prt1_p3 t1_5
                     Output: t1_5.a
                     Index Cond: (t1_5.a = t2_2.b)
(49 rows)

select t1.a,t2.a,t2.b from prt1 t1 inner join prt1_prt2_view t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- join with expressions and system functions
-- join with like operator
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t2.b from prt1 t1 inner join prt2 t2 on t1.a = t2.b and t1.c like '0%0' and t1.a % 25 = 0 order by 1,2,3;
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b
   Sort Key: t1.a, t1.b
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.b, t2.b
               Hash Cond: (t2.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b
               ->  Hash
                     Output: t1.a, t1.b
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b
                           Filter: (((t1.c)::text ~~ '0%0'::text) AND ((t1.a % 25) = 0))
         ->  Hash Join
               Output: t1_1.a, t1_1.b, t2_1.b
               Hash Cond: (t2_1.b = t1_1.a)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b
               ->  Hash
                     Output: t1_1.a, t1_1.b
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b
                           Filter: (((t1_1.c)::text ~~ '0%0'::text) AND ((t1_1.a % 25) = 0))
         ->  Hash Join
               Output: t1_2.a, t1_2.b, t2_2.b
               Hash Cond: (t2_2.b = t1_2.a)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b
               ->  Hash
                     Output: t1_2.a, t1_2.b
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b
                           Filter: (((t1_2.c)::text ~~ '0%0'::text) AND ((t1_2.a % 25) = 0))
(34 rows)

select t1.a,t1.b,t2.b from prt1 t1 inner join prt2 t2 on t1.a = t2.b and t1.c like '0%0' and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t2.b from uprt1 t1 inner join uprt2 t2 on t1.a = t2.b and t1.c like '0%0' and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- join with rank
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b, (rank() OVER (?))
   Sort Key: t1.a, t1.b
   ->  WindowAgg
         Output: t1.a, t1.b, t2.b, rank() OVER (?)
         ->  Sort
               Output: t2.b, t1.a, t1.b
               Sort Key: t2.b DESC
               ->  Result
                     Output: t2.b, t1.a, t1.b
                     ->  Append
                           ->  Hash Join
                                 Output: t1.a, t1.b, t2.b
                                 Hash Cond: (t2.b = t1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p1 t2
                                       Output: t2.b
                                 ->  Hash
                                       Output: t1.a, t1.b
                                       ->  Seq Scan on pwj_extra.prt1_p1 t1
                                             Output: t1.a, t1.b
                                             Filter: ((t1.a % 25) = 0)
                           ->  Hash Join
                                 Output: t1_1.a, t1_1.b, t2_1.b
                                 Hash Cond: (t2_1.b = t1_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b
                                 ->  Hash
                                       Output: t1_1.a, t1_1.b
                                       ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                             Output: t1_1.a, t1_1.b
                                             Filter: ((t1_1.a % 25) = 0)
                           ->  Hash Join
                                 Output: t1_2.a, t1_2.b, t2_2.b
                                 Hash Cond: (t2_2.b = t1_2.a)
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b
                                 ->  Hash
                                       Output: t1_2.a, t1_2.b
                                       ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                             Output: t1_2.a, t1_2.b
                                             Filter: ((t1_2.a % 25) = 0)
(41 rows)

SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    4
 150 | 150 | 150 |    3
 300 | 300 | 300 |    2
 450 | 450 | 450 |    1
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    4
 150 | 150 | 150 |    3
 300 | 300 | 300 |    2
 450 | 450 | 450 |    1
(4 rows)

-- join with array expression
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a,t1.b,t2.b FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b
   Sort Key: t1.a, t1.b
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.b, t2.b
               Hash Cond: (t2.b = t1.a)
               Join Filter: (t1.a = ANY (ARRAY[t2.b, 1, (t2.b + 0)]))
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b
               ->  Hash
                     Output: t1.a, t1.b
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, t1_1.b, t2_1.b
               Hash Cond: (t2_1.b = t1_1.a)
               Join Filter: (t1_1.a = ANY (ARRAY[t2_1.b, 1, (t2_1.b + 0)]))
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b
               ->  Hash
                     Output: t1_1.a, t1_1.b
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, t1_2.b, t2_2.b
               Hash Cond: (t2_2.b = t1_2.a)
               Join Filter: (t1_2.a = ANY (ARRAY[t2_2.b, 1, (t2_2.b + 0)]))
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b
               ->  Hash
                     Output: t1_2.a, t1_2.b
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(37 rows)

SELECT t1.a,t1.b,t2.b FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a,t1.b,t2.b FROM uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- join with group by and having
EXPLAIN (VERBOSE, COSTS OFF)
select t2.b,sum(t1.a) from prt1 t1 inner join prt2 t2 on(t1.a = t2.b) where t1.a % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 1,2;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Sort
   Output: t2.b, (sum(t1.a))
   Sort Key: t2.b, (sum(t1.a))
   ->  GroupAggregate
         Output: t2.b, sum(t1.a)
         Group Key: t2.b
         Filter: (sum(t1.a) > 2)
         ->  Sort
               Output: t2.b, t1.a
               Sort Key: t2.b
               ->  Result
                     Output: t2.b, t1.a
                     ->  Append
                           ->  Hash Join
                                 Output: t1.a, t2.b
                                 Hash Cond: (t2.b = t1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p1 t2
                                       Output: t2.b
                                 ->  Hash
                                       Output: t1.a
                                       ->  Seq Scan on pwj_extra.prt1_p1 t1
                                             Output: t1.a
                                             Filter: ((t1.a % 25) = 0)
                           ->  Hash Join
                                 Output: t1_1.a, t2_1.b
                                 Hash Cond: (t2_1.b = t1_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                       Output: t2_1.b
                                 ->  Hash
                                       Output: t1_1.a
                                       ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                             Output: t1_1.a
                                             Filter: ((t1_1.a % 25) = 0)
                           ->  Hash Join
                                 Output: t1_2.a, t2_2.b
                                 Hash Cond: (t2_2.b = t1_2.a)
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b
                                 ->  Hash
                                       Output: t1_2.a
                                       ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                             Output: t1_2.a
                                             Filter: ((t1_2.a % 25) = 0)
(43 rows)

select t2.b,sum(t1.a) from prt1 t1 inner join prt2 t2 on(t1.a = t2.b) where t1.a % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 1,2;
  b  | sum 
-----+-----
 150 | 150
 300 | 300
 450 | 450
(3 rows)

--TODO - this query need to remove once testing done.
select t2.b,sum(t1.a) from uprt1 t1 inner join uprt2 t2 on(t1.a = t2.b) where t1.a % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 1,2;
  b  | sum 
-----+-----
 150 | 150
 300 | 300
 450 | 450
(3 rows)

--join with prepare statement 
PREPARE ij(int) AS select t1.a,t2.b from prt1 t1 inner join prt2 t2 on (t1.a = t2.b and t1.a % $1 = 0) ORDER BY 1,2;
EXPLAIN (VERBOSE, COSTS OFF) EXECUTE ij(25);
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t2.b
   Sort Key: t1.a
   ->  Append
         ->  Hash Join
               Output: t1.a, t2.b
               Hash Cond: (t2.b = t1.a)
               ->  Seq Scan on pwj_extra.prt2_p1 t2
                     Output: t2.b
               ->  Hash
                     Output: t1.a
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, t2_1.b
               Hash Cond: (t2_1.b = t1_1.a)
               ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.b
               ->  Hash
                     Output: t1_1.a
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, t2_2.b
               Hash Cond: (t2_2.b = t1_2.a)
               ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                     Output: t2_2.b
               ->  Hash
                     Output: t1_2.a
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 25) = 0)
(34 rows)

EXECUTE ij(25);
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

DEALLOCATE ij;
--join with for share clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2 FOR SHARE;
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 LockRows
   Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Sort
         Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Sort Key: t1.a
         ->  Result
               Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
               ->  Append
                     ->  Hash Join
                           Output: t1.a, t1.ctid, t1.tableoid, t2.b, t2.ctid, t2.tableoid
                           Hash Cond: (t2.b = t1.a)
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b, t2.ctid, t2.tableoid
                           ->  Hash
                                 Output: t1.a, t1.ctid, t1.tableoid
                                 ->  Seq Scan on pwj_extra.prt1_p1 t1
                                       Output: t1.a, t1.ctid, t1.tableoid
                                       Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t1_1.a, t1_1.ctid, t1_1.tableoid, t2_1.b, t2_1.ctid, t2_1.tableoid
                           Hash Cond: (t2_1.b = t1_1.a)
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b, t2_1.ctid, t2_1.tableoid
                           ->  Hash
                                 Output: t1_1.a, t1_1.ctid, t1_1.tableoid
                                 ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                       Output: t1_1.a, t1_1.ctid, t1_1.tableoid
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t1_2.a, t1_2.ctid, t1_2.tableoid, t2_2.b, t2_2.ctid, t2_2.tableoid
                           Hash Cond: (t2_2.b = t1_2.a)
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.ctid, t2_2.tableoid
                           ->  Hash
                                 Output: t1_2.a, t1_2.ctid, t1_2.tableoid
                                 ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                       Output: t1_2.a, t1_2.ctid, t1_2.tableoid
                                       Filter: ((t1_2.a % 25) = 0)
(38 rows)

select t1.a,t2.b from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2 FOR SHARE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2 FOR SHARE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--join with for update clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2 FOR UPDATE;
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 LockRows
   Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Sort
         Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Sort Key: t1.a
         ->  Result
               Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
               ->  Append
                     ->  Hash Join
                           Output: t1.a, t1.ctid, t1.tableoid, t2.b, t2.ctid, t2.tableoid
                           Hash Cond: (t2.b = t1.a)
                           ->  Seq Scan on pwj_extra.prt2_p1 t2
                                 Output: t2.b, t2.ctid, t2.tableoid
                           ->  Hash
                                 Output: t1.a, t1.ctid, t1.tableoid
                                 ->  Seq Scan on pwj_extra.prt1_p1 t1
                                       Output: t1.a, t1.ctid, t1.tableoid
                                       Filter: ((t1.a % 25) = 0)
                     ->  Hash Join
                           Output: t1_1.a, t1_1.ctid, t1_1.tableoid, t2_1.b, t2_1.ctid, t2_1.tableoid
                           Hash Cond: (t2_1.b = t1_1.a)
                           ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b, t2_1.ctid, t2_1.tableoid
                           ->  Hash
                                 Output: t1_1.a, t1_1.ctid, t1_1.tableoid
                                 ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                       Output: t1_1.a, t1_1.ctid, t1_1.tableoid
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Join
                           Output: t1_2.a, t1_2.ctid, t1_2.tableoid, t2_2.b, t2_2.ctid, t2_2.tableoid
                           Hash Cond: (t2_2.b = t1_2.a)
                           ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                 Output: t2_2.b, t2_2.ctid, t2_2.tableoid
                           ->  Hash
                                 Output: t1_2.a, t1_2.ctid, t1_2.tableoid
                                 ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                       Output: t1_2.a, t1_2.ctid, t1_2.tableoid
                                       Filter: ((t1_2.a % 25) = 0)
(38 rows)

select t1.a,t2.b from prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2 FOR UPDATE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1 t1 inner join uprt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2 FOR UPDATE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

-- join in cursor
BEGIN;
DECLARE ffc CURSOR FOR SELECT t1.a,t2.b FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0;
FETCH ALL from ffc;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

END;
-- join in function
CREATE FUNCTION fun_fft() RETURNS refcursor AS $$
DECLARE
        ref_cursor REFCURSOR := 'cur_fft';
BEGIN
        OPEN ref_cursor FOR SELECT t1.a,t2.b FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0;
        RETURN (ref_cursor);    
END;
$$ LANGUAGE plpgsql;
BEGIN;
SELECT fun_fft();
 fun_fft 
---------
 cur_fft
(1 row)

FETCH ALL from cur_fft; 
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

COMMIT;
DROP FUNCTION fun_fft();
-- join in user defined functions
CREATE FUNCTION pwj_range_sum(int,int) RETURNS int AS $$
BEGIN
RETURN $1 + $2;
END
$$ LANGUAGE plpgsql IMMUTABLE;
SELECT t1.a, t2.b, pwj_range_sum(t1.a,t2.b) FROM prt1 t1 inner join prt2 t2 on (t1.a = t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  | pwj_range_sum 
-----+-----+---------------
   0 |   0 |             0
 150 | 150 |           300
 300 | 300 |           600
 450 | 450 |           900
(4 rows)

DROP FUNCTION pwj_range_sum(int,int) ;
--creating data set for list partition
create view plt1_view as select * from plt1;
create view plt2_view as select * from plt2;
create view plt1_plt2_view as select t1.a,t2.b,t1.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c);
--cross join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.c,t2.b,t2.c from plt1 t1 cross join plt2 t2 where t1.a % 125 = 0 and t2.b % 125 = 0 order by 1,2,3,4;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t1.c, t2.b, t2.c
   ->  Nested Loop
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.c
                     Filter: ((t1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.c
                     Filter: ((t1_1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.c
                     Filter: ((t1_2.a % 125) = 0)
         ->  Materialize
               Output: t2.b, t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 125) = 0)
(27 rows)

select t1.a,t1.c,t2.b,t2.c from plt1 t1 cross join plt2 t2 where t1.a % 125 = 0 and t2.b % 125 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
   0 | 0000 | 375 | 0007
 250 | 0005 |   0 | 0000
 250 | 0005 | 375 | 0007
 500 | 0010 |   0 | 0000
 500 | 0010 | 375 | 0007
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.c,t2.b,t2.c from uplt1 t1 cross join uplt2 t2 where t1.a % 125 = 0 and t2.b % 125 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
   0 | 0000 | 375 | 0007
 250 | 0005 |   0 | 0000
 250 | 0005 | 375 | 0007
 500 | 0010 |   0 | 0000
 500 | 0010 | 375 | 0007
(6 rows)

--inner join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) inner join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.a % 125 = 0 and t3.a % 125 = 0 order by 1,2,3,4;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t2.b, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 125) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.a % 125) = 0)
         ->  Seq Scan on pwj_extra.uplt1 t3
               Output: t3.a, t3.b, t3.c
               Filter: ((t3.a % 125) = 0)
(34 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) inner join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.a % 125 = 0 and t3.a % 125 = 0 order by 1,2,3,4;
 a | b |  c   |  c   |  c   
---+---+------+------+------
 0 | 0 | 0000 | 0000 | 0000
(1 row)

--left outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 left outer join plt2 t2 on (t1.c = t2.c) left outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 125 = 0 and t3.a % 125 = 0 order by 1,2,3,4;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t2.b, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 125) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 125) = 0)
         ->  Seq Scan on pwj_extra.uplt1 t3
               Output: t3.a, t3.b, t3.c
               Filter: ((t3.a % 125) = 0)
(34 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 left outer join plt2 t2 on (t1.c = t2.c) left outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 125 = 0 and t3.a % 125 = 0 order by 1,2,3,4;
 a | b |  c   |  c   |  c   
---+---+------+------+------
 0 | 0 | 0000 | 0000 | 0000
(1 row)

--right outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 right outer join plt2 t2 on (t1.c = t2.c) right outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 125 = 0 and t3.a % 125 = 0 order by 1,2,3,4;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t2.b, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 125) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 125) = 0)
         ->  Seq Scan on pwj_extra.uplt1 t3
               Output: t3.a, t3.b, t3.c
               Filter: ((t3.a % 125) = 0)
(34 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 right outer join plt2 t2 on (t1.c = t2.c) right outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 125 = 0 and t3.a % 125 = 0 order by 1,2,3,4;
 a | b |  c   |  c   |  c   
---+---+------+------+------
 0 | 0 | 0000 | 0000 | 0000
(1 row)

--full outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 full outer join plt2 t2 on (t1.c = t2.c) full outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3,4;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t2.b, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Seq Scan on pwj_extra.uplt1 t3
               Output: t3.a, t3.b, t3.c
               Filter: ((t3.a % 25) = 0)
(34 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1 t1 full outer join plt2 t2 on (t1.c = t2.c) full outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3,4;
  a  |  b  |  c   |  c   |  c   
-----+-----+------+------+------
   0 |   0 | 0000 | 0000 | 0000
  50 |  75 | 0001 | 0001 | 0001
 150 | 150 | 0003 | 0003 | 0003
 200 | 225 | 0004 | 0004 | 0004
 300 | 300 | 0006 | 0006 | 0006
 350 | 375 | 0007 | 0007 | 0007
 450 | 450 | 0009 | 0009 | 0009
 500 | 525 | 0010 | 0010 | 0010
(8 rows)

-- natural join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.c,t2.b,t2.c from plt1 t1 natural join plt2 t2 where t1.a % 25 = 0 order by 1,2,3,4;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t1.c, t2.b
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.a = t1.a) AND (t2.b = t1.b) AND (t2.c = t1.c))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(25 rows)

select t1.a,t1.c,t2.b,t2.c from plt1 t1 natural join plt2 t2 where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.c,t2.b,t2.c from uplt1 t1 natural join uplt2 t2 where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

-- semi join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.b from plt1 t1 where exists (select 1 from plt2 t2 where t1.c = t2.c) and t1.a % 25 = 0 order by 1,2,3;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.b
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.b
         ->  Append
               ->  Nested Loop Semi Join
                     Output: t1.a, t1.b
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Index Only Scan using iplt2_p1_c on pwj_extra.plt2_p1 t2
                           Output: t2.c
                           Index Cond: (t2.c = t1.c)
               ->  Nested Loop Semi Join
                     Output: t1_1.a, t1_1.b
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Index Only Scan using iplt2_p2_c on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.c
                           Index Cond: (t2_1.c = t1_1.c)
               ->  Nested Loop Semi Join
                     Output: t1_2.a, t1_2.b
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Index Only Scan using iplt2_p3_c on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.c
                           Index Cond: (t2_2.c = t1_2.c)
(30 rows)

select t1.a,t1.b,t1.b from plt1 t1 where exists (select 1 from plt2 t2 where t1.c = t2.c) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
  50 |  50 |  50
 100 | 100 | 100
 150 | 150 | 150
 200 | 200 | 200
 250 | 250 | 250
 300 | 300 | 300
 350 | 350 | 350
 400 | 400 | 400
 450 | 450 | 450
 500 | 500 | 500
 550 | 550 | 550
(12 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.b from uplt1 t1 where exists (select 1 from uplt2 t2 where t1.c = t2.c) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
  50 |  50 |  50
 100 | 100 | 100
 150 | 150 | 150
 200 | 200 | 200
 250 | 250 | 250
 300 | 300 | 300
 350 | 350 | 350
 400 | 400 | 400
 450 | 450 | 450
 500 | 500 | 500
 550 | 550 | 550
(12 rows)

-- anti join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.b from plt1 t1 where not exists (select 1 from plt2 t2 where t1.c = t2.c) and t1.a % 25 = 0 order by 1,2,3;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.b
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.b
         ->  Append
               ->  Nested Loop Anti Join
                     Output: t1.a, t1.b
                     Join Filter: (t1.c = t2.c)
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.c
               ->  Nested Loop Anti Join
                     Output: t1_1.a, t1_1.b
                     Join Filter: (t1_1.c = t2_1.c)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.c
               ->  Nested Loop Anti Join
                     Output: t1_2.a, t1_2.b
                     Join Filter: (t1_2.c = t2_2.c)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.c
(30 rows)

select t1.a,t1.b,t1.b from plt1 t1 where not exists (select 1 from plt2 t2 where t1.c = t2.c) and t1.a % 25 = 0 order by 1,2,3;
 a | b | b 
---+---+---
(0 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.b from uplt1 t1 where not exists (select 1 from uplt2 t2 where t1.c = t2.c) and t1.a % 25 = 0 order by 1,2,3;
 a | b | b 
---+---+---
(0 rows)

-- self join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c as t1_c,t2.c as t2_C from plt1 t1, plt2 t2 where t1.c = t2.c and t1.a % 25 = 0 and t2. b  % 25 = 0  order by 1,2,3,4;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c
   Sort Key: t1.a, t2.b, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c
         Join Filter: (t1.c = t2.c)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
         ->  Materialize
               Output: t2.b, t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
(28 rows)

select t1.a,t2.b,t1.c as t1_c,t2.c as t2_C from plt1 t1, plt2 t2 where t1.c = t2.c and t1.a % 25 = 0 and t2. b  % 25 = 0  order by 1,2,3,4;
  a  |  b  | t1_c | t2_c 
-----+-----+------+------
   0 |   0 | 0000 | 0000
  50 |  75 | 0001 | 0001
 150 | 150 | 0003 | 0003
 200 | 225 | 0004 | 0004
 300 | 300 | 0006 | 0006
 350 | 375 | 0007 | 0007
 450 | 450 | 0009 | 0009
 500 | 525 | 0010 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t1.c as t1_c,t2.c as t2_C from uplt1 t1, uplt2 t2 where t1.c = t2.c and t1.a % 25 = 0 and t2. b  % 25 = 0  order by 1,2,3,4;
  a  |  b  | t1_c | t2_c 
-----+-----+------+------
   0 |   0 | 0000 | 0000
  50 |  75 | 0001 | 0001
 150 | 150 | 0003 | 0003
 200 | 225 | 0004 | 0004
 300 | 300 | 0006 | 0006
 350 | 375 | 0007 | 0007
 450 | 450 | 0009 | 0009
 500 | 525 | 0010 | 0010
(8 rows)

-- join with CTE
EXPLAIN (VERBOSE, COSTS OFF)
with ED as (select t1.b,t1.c,t2.a from plt1 t1 inner join plt2 t2 on (t1.c = t2.c)) select b,c,a from ED where b % 25 = 0 and a % 25 = 0 ;
                          QUERY PLAN                          
--------------------------------------------------------------
 CTE Scan on ed
   Output: ed.b, ed.c, ed.a
   Filter: (((ed.b % 25) = 0) AND ((ed.a % 25) = 0))
   CTE ed
     ->  Append
           ->  Hash Join
                 Output: t1.b, t1.c, t2.a
                 Hash Cond: (t1.c = t2.c)
                 ->  Seq Scan on pwj_extra.plt1_p1 t1
                       Output: t1.b, t1.c
                 ->  Hash
                       Output: t2.a, t2.c
                       ->  Seq Scan on pwj_extra.plt2_p1 t2
                             Output: t2.a, t2.c
           ->  Hash Join
                 Output: t1_1.b, t1_1.c, t2_1.a
                 Hash Cond: (t1_1.c = t2_1.c)
                 ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                       Output: t1_1.b, t1_1.c
                 ->  Hash
                       Output: t2_1.a, t2_1.c
                       ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                             Output: t2_1.a, t2_1.c
           ->  Hash Join
                 Output: t1_2.b, t1_2.c, t2_2.a
                 Hash Cond: (t1_2.c = t2_2.c)
                 ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                       Output: t1_2.b, t1_2.c
                 ->  Hash
                       Output: t2_2.a, t2_2.c
                       ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                             Output: t2_2.a, t2_2.c
(32 rows)

with ED as (select t1.b,t1.c,t2.a from plt1 t1 inner join plt2 t2 on (t1.c = t2.c)) select b,c,a from ED where b % 25 = 0 and a % 25 = 0 ;
  b  |  c   |  a  
-----+------+-----
   0 | 0000 |   0
 150 | 0003 | 150
 200 | 0004 | 225
 500 | 0010 | 525
  50 | 0001 |  75
 450 | 0009 | 450
 300 | 0006 | 300
 350 | 0007 | 375
(8 rows)

--TODO - this query need to remove once testing done.
with ED as (select t1.b,t1.c,t2.a from uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c)) select b,c,a from ED where b % 25 = 0 and a % 25 = 0 ;
  b  |  c   |  a  
-----+------+-----
   0 | 0000 |   0
  50 | 0001 |  75
 150 | 0003 | 150
 200 | 0004 | 225
 300 | 0006 | 300
 350 | 0007 | 375
 450 | 0009 | 450
 500 | 0010 | 525
(8 rows)

--Join combinations
--cross and inner join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 inner join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Nested Loop
               Output: t2.b, t3.c
               Join Filter: (t2.c = t3.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
               ->  Materialize
                     Output: t3.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t3
                                 Output: t3.c
                                 Filter: ((t3.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                                 Output: t3_1.c
                                 Filter: ((t3_1.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                                 Output: t3_2.c
                                 Filter: ((t3_2.a % 125) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 125) = 0)
(40 rows)

select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 inner join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 cross join uplt2 t2 inner join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--cross and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 left outer join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Nested Loop
               Output: t2.b, t3.c
               Join Filter: (t2.c = t3.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
               ->  Materialize
                     Output: t3.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t3
                                 Output: t3.c
                                 Filter: ((t3.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                                 Output: t3_1.c
                                 Filter: ((t3_1.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                                 Output: t3_2.c
                                 Filter: ((t3_2.a % 125) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 125) = 0)
(40 rows)

select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 left outer join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 cross join uplt2 t2 left outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--cross and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 right outer join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Nested Loop
               Output: t2.b, t3.c
               Join Filter: (t2.c = t3.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
               ->  Materialize
                     Output: t3.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t3
                                 Output: t3.c
                                 Filter: ((t3.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                                 Output: t3_1.c
                                 Filter: ((t3_1.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                                 Output: t3_2.c
                                 Filter: ((t3_2.a % 125) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 125) = 0)
(40 rows)

select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 right outer join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 cross join uplt2 t2 right outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--cross and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 full outer join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Nested Loop
               Output: t2.b, t3.c
               Join Filter: (t2.c = t3.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
               ->  Materialize
                     Output: t3.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t3
                                 Output: t3.c
                                 Filter: ((t3.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                                 Output: t3_1.c
                                 Filter: ((t3_1.a % 125) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                                 Output: t3_2.c
                                 Filter: ((t3_2.a % 125) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 125) = 0)
(40 rows)

select t1.a,t2.b,t3.c from plt1 t1 cross join plt2 t2 full outer join plt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 cross join uplt2 t2 full outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
   0 | 525 | 0010
 250 |   0 | 0000
 250 | 525 | 0010
 500 |   0 | 0000
 500 | 525 | 0010
(6 rows)

--inner and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) left outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c
                     Filter: ((t3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c
                     Filter: ((t3_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c
                     Filter: ((t3_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) left outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) left outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--inner and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) right outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c
                     Filter: ((t3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c
                     Filter: ((t3_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c
                     Filter: ((t3_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) right outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) right outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--inner and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) full outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c
                     Filter: ((t3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c
                     Filter: ((t3_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c
                     Filter: ((t3_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) full outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) full outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--left outer and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 left outer join plt2 t2 on (t1.c = t2.c) right outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c
                     Filter: ((t3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c
                     Filter: ((t3_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c
                     Filter: ((t3_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.c from plt1 t1 left outer join plt2 t2 on (t1.c = t2.c) right outer join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 left outer join uplt2 t2 on (t1.c = t2.c) right outer join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--left outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 left outer join plt2 t2 on (t1.c = t2.c) full join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c
                     Filter: ((t3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c
                     Filter: ((t3_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c
                     Filter: ((t3_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.c from plt1 t1 left outer join plt2 t2 on (t1.c = t2.c) full join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 left outer join uplt2 t2 on (t1.c = t2.c) full join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--right outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1 t1 right join plt2 t2 on (t1.c = t2.c) full join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         Join Filter: (t1.c = t3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c
               Join Filter: (t1.c = t2.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t2.b, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t2
                                 Output: t2.b, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                 Output: t2_1.b, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                 Output: t2_2.b, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t3
                     Output: t3.c
                     Filter: ((t3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                     Output: t3_1.c
                     Filter: ((t3_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                     Output: t3_2.c
                     Filter: ((t3_2.a % 25) = 0)
(41 rows)

select t1.a,t2.b,t3.c from plt1 t1 right join plt2 t2 on (t1.c = t2.c) full join plt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1 t1 right join uplt2 t2 on (t1.c = t2.c) full join uplt1 t3 on (t2.c = t3.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  75 | 0001
 150 | 150 | 0003
 200 | 225 | 0004
 300 | 300 | 0006
 350 | 375 | 0007
 450 | 450 | 0009
 500 | 525 | 0010
(8 rows)

-- Join with views
--join of two partition table simple views
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1_view t1 inner join plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Sort
   Output: plt1_p1.a, plt1_p1.b, plt1_p1.c, plt2_p1.a, plt2_p1.b, plt2_p1.c
   Sort Key: plt1_p1.a, plt1_p1.b, plt1_p1.c, plt2_p1.a, plt2_p1.b
   ->  Nested Loop
         Output: plt1_p1.a, plt1_p1.b, plt1_p1.c, plt2_p1.a, plt2_p1.b, plt2_p1.c
         Join Filter: (plt1_p1.c = plt2_p1.c)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1
                     Output: plt1_p1.a, plt1_p1.b, plt1_p1.c
                     Filter: ((plt1_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2
                     Output: plt1_p2.a, plt1_p2.b, plt1_p2.c
                     Filter: ((plt1_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3
                     Output: plt1_p3.a, plt1_p3.b, plt1_p3.c
                     Filter: ((plt1_p3.a % 25) = 0)
         ->  Materialize
               Output: plt2_p1.a, plt2_p1.b, plt2_p1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1
                           Output: plt2_p1.a, plt2_p1.b, plt2_p1.c
                           Filter: ((plt2_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2
                           Output: plt2_p2.a, plt2_p2.b, plt2_p2.c
                           Filter: ((plt2_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3
                           Output: plt2_p3.a, plt2_p3.b, plt2_p3.c
                           Filter: ((plt2_p3.b % 25) = 0)
(28 rows)

select  t1.*,t2.* from plt1_view t1 inner join plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |  75 |  75 | 0001
 150 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 | 225 | 225 | 0004
 300 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 | 375 | 375 | 0007
 450 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 | 525 | 525 | 0010
(8 rows)

--join of one partition table and one partition table simple view
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1 t1 inner join plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, plt2_p1.a, plt2_p1.b, plt2_p1.c
   Sort Key: t1.a, t1.b, t1.c, plt2_p1.a, plt2_p1.b
   ->  Nested Loop
         Output: t1.a, t1.b, t1.c, plt2_p1.a, plt2_p1.b, plt2_p1.c
         Join Filter: (t1.c = plt2_p1.c)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
         ->  Materialize
               Output: plt2_p1.a, plt2_p1.b, plt2_p1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1
                           Output: plt2_p1.a, plt2_p1.b, plt2_p1.c
                           Filter: ((plt2_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2
                           Output: plt2_p2.a, plt2_p2.b, plt2_p2.c
                           Filter: ((plt2_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3
                           Output: plt2_p3.a, plt2_p3.b, plt2_p3.c
                           Filter: ((plt2_p3.b % 25) = 0)
(28 rows)

select  t1.*,t2.* from plt1 t1 inner join plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |  75 |  75 | 0001
 150 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 | 225 | 225 | 0004
 300 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 | 375 | 375 | 0007
 450 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 | 525 | 525 | 0010
(8 rows)

--join of two partition table complex views
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1_plt2_view t1 inner join plt1_plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t1.b % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t1_3.a, t2_3.b, t1_3.c
   Sort Key: t1.a, t2.b, t1.c, t1_3.a, t2_3.b
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t1_3.a, t2_3.b, t1_3.c
         Join Filter: (t1.c = t2_3.c)
         ->  Nested Loop
               Output: t1.a, t1.c, t2.b, t2.c, t1_3.a, t1_3.c
               Join Filter: (t1.c = t1_3.c)
               ->  Nested Loop
                     Output: t1.a, t1.c, t2.b, t2.c
                     Join Filter: (t1.c = t2.c)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                 Output: t1_1.a, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                     ->  Materialize
                           Output: t2.b, t2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                                       Filter: ((t2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1_3
                           Output: t1_3.a, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_4
                           Output: t1_4.a, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_5
                           Output: t1_5.a, t1_5.c
                           Filter: ((t1_5.a % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2_3
                     Output: t2_3.b, t2_3.c
                     Filter: ((t2_3.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p2 t2_4
                     Output: t2_4.b, t2_4.c
                     Filter: ((t2_4.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p3 t2_5
                     Output: t2_5.b, t2_5.c
                     Filter: ((t2_5.b % 25) = 0)
(54 rows)

select  t1.*,t2.* from plt1_plt2_view t1 inner join plt1_plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t1.b % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  75 | 0001 |  50 |  75 | 0001
 150 | 150 | 0003 | 150 | 150 | 0003
 200 | 225 | 0004 | 200 | 225 | 0004
 300 | 300 | 0006 | 300 | 300 | 0006
 350 | 375 | 0007 | 350 | 375 | 0007
 450 | 450 | 0009 | 450 | 450 | 0009
 500 | 525 | 0010 | 500 | 525 | 0010
(8 rows)

--join of one partition table and other partition table complex view
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1 t1 inner join plt1_plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t1_3.a, t2.b, t1_3.c
   Sort Key: t1.a, t1.b, t1.c, t1_3.a, t2.b
   ->  Nested Loop
         Output: t1.a, t1.b, t1.c, t1_3.a, t2.b, t1_3.c
         Join Filter: (t1_3.c = t2.c)
         ->  Nested Loop
               Output: t1.a, t1.b, t1.c, t1_3.a, t1_3.c
               Join Filter: (t1.c = t1_3.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
               ->  Materialize
                     Output: t1_3.a, t1_3.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t1_3
                                 Output: t1_3.a, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t1_4
                                 Output: t1_4.a, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_5
                                 Output: t1_5.a, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c
                     Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
                     Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
                     Filter: ((t2_2.b % 25) = 0)
(41 rows)

select  t1.*,t2.* from plt1 t1 inner join plt1_plt2_view t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0001 |  50 |  75 | 0001
 150 | 150 | 0003 | 150 | 150 | 0003
 200 | 200 | 0004 | 200 | 225 | 0004
 300 | 300 | 0006 | 300 | 300 | 0006
 350 | 350 | 0007 | 350 | 375 | 0007
 450 | 450 | 0009 | 450 | 450 | 0009
 500 | 500 | 0010 | 500 | 525 | 0010
(8 rows)

-- join with expressions and system functions
-- join with like operator
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.c,t1.b,t2.b from plt1 t1 inner join plt2 t2 on t1.c = t2.c and t1.c like '0%0' and t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t1.b, t2.b
   Sort Key: t1.a, t1.c
   ->  Nested Loop
         Output: t1.a, t1.c, t1.b, t2.b
         Join Filter: (t1.c = t2.c)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.a, t1.c, t1.b
                     Filter: ((t1.c ~~ '0%0'::text) AND ((t1.a % 25) = 0))
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.a, t1_1.c, t1_1.b
                     Filter: ((t1_1.c ~~ '0%0'::text) AND ((t1_1.a % 25) = 0))
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.a, t1_2.c, t1_2.b
                     Filter: ((t1_2.c ~~ '0%0'::text) AND ((t1_2.a % 25) = 0))
         ->  Materialize
               Output: t2.b, t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 25) = 0)
(28 rows)

select t1.a,t1.c,t1.b,t2.b from plt1 t1 inner join plt2 t2 on t1.c = t2.c and t1.c like '0%0' and t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
 500 | 0010 | 500 | 525
(2 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.c,t1.b,t2.b from uplt1 t1 inner join uplt2 t2 on t1.c = t2.c and t1.c like '0%0' and t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
 500 | 0010 | 500 | 525
(2 rows)

-- join with rank
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b, (rank() OVER (?))
   Sort Key: t1.a, t1.b, t2.b, (rank() OVER (?))
   ->  WindowAgg
         Output: t1.a, t1.b, t2.b, rank() OVER (?)
         ->  Sort
               Output: t2.b, t1.a, t1.b
               Sort Key: t2.b DESC
               ->  Nested Loop
                     Output: t2.b, t1.a, t1.b
                     Join Filter: (t1.c = t2.c)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                     ->  Materialize
                           Output: t2.b, t2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                                       Filter: ((t2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
(33 rows)

SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    8
  50 |  50 |  75 |    7
 150 | 150 | 150 |    6
 200 | 200 | 225 |    5
 300 | 300 | 300 |    4
 350 | 350 | 375 |    3
 450 | 450 | 450 |    2
 500 | 500 | 525 |    1
(8 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    8
  50 |  50 |  75 |    7
 150 | 150 | 150 |    6
 200 | 200 | 225 |    5
 300 | 300 | 300 |    4
 350 | 350 | 375 |    3
 450 | 450 | 450 |    2
 500 | 500 | 525 |    1
(8 rows)

-- join with array expression
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a,t1.c,t1.b,t2.b FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3,4;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t1.b, t2.b
   Sort Key: t1.a, t1.c, t1.b, t2.b
   ->  Append
         ->  Hash Join
               Output: t1.a, t1.c, t1.b, t2.b
               Hash Cond: (t2.c = t1.c)
               Join Filter: (t1.a = ANY (ARRAY[t2.b, 1, (t2.b + 0)]))
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.b, t2.c
               ->  Hash
                     Output: t1.a, t1.c, t1.b
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
         ->  Hash Join
               Output: t1_1.a, t1_1.c, t1_1.b, t2_1.b
               Hash Cond: (t2_1.c = t1_1.c)
               Join Filter: (t1_1.a = ANY (ARRAY[t2_1.b, 1, (t2_1.b + 0)]))
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.b, t2_1.c
               ->  Hash
                     Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
         ->  Hash Join
               Output: t1_2.a, t1_2.c, t1_2.b, t2_2.b
               Hash Cond: (t2_2.c = t1_2.c)
               Join Filter: (t1_2.a = ANY (ARRAY[t2_2.b, 1, (t2_2.b + 0)]))
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.b, t2_2.c
               ->  Hash
                     Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
(37 rows)

SELECT t1.a,t1.c,t1.b,t2.b FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
 150 | 0003 | 150 | 150
 300 | 0006 | 300 | 300
 450 | 0009 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a,t1.c,t1.b,t2.b FROM uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
 150 | 0003 | 150 | 150
 300 | 0006 | 300 | 300
 450 | 0009 | 450 | 450
(4 rows)

-- join with group by and having
EXPLAIN (VERBOSE, COSTS OFF)
select t2.b,sum(t1.a) from plt1 t1 inner join plt2 t2 on(t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 2;
                               QUERY PLAN                               
------------------------------------------------------------------------
 Sort
   Output: t2.b, (sum(t1.a))
   Sort Key: (sum(t1.a))
   ->  GroupAggregate
         Output: t2.b, sum(t1.a)
         Group Key: t2.b
         Filter: (sum(t1.a) > 2)
         ->  Sort
               Output: t2.b, t1.a
               Sort Key: t2.b
               ->  Nested Loop
                     Output: t2.b, t1.a
                     Join Filter: (t1.c = t2.c)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_p1 t1
                                 Output: t1.a, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                                 Output: t1_1.a, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                                 Output: t1_2.a, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                     ->  Materialize
                           Output: t2.b, t2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_p1 t2
                                       Output: t2.b, t2.c
                                       Filter: ((t2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                                       Output: t2_1.b, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                                       Output: t2_2.b, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
(35 rows)

select t2.b,sum(t1.a) from plt1 t1 inner join plt2 t2 on(t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 2;
  b  | sum 
-----+-----
  75 |  50
 150 | 150
 225 | 200
 300 | 300
 375 | 350
 450 | 450
 525 | 500
(7 rows)

--TODO - this query need to remove once testing done.
select t2.b,sum(t1.a) from uplt1 t1 inner join uplt2 t2 on(t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 2;
  b  | sum 
-----+-----
  75 |  50
 150 | 150
 225 | 200
 300 | 300
 375 | 350
 450 | 450
 525 | 500
(7 rows)

--join with prepare statement 
PREPARE ij(int) AS select t1.c,t2.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c and t1.a % $1 = 0 and t2.b % $1 = 0) ORDER BY 1,2;
EXPLAIN (VERBOSE, COSTS OFF) EXECUTE ij(25);
                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Output: t1.c, t2.c
   Merge Cond: (t1.c = t2.c)
   ->  Sort
         Output: t1.c
         Sort Key: t1.c
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
   ->  Sort
         Output: t2.c
         Sort Key: t2.c
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.c
                     Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.c
                     Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.c
                     Filter: ((t2_2.b % 25) = 0)
(29 rows)

EXECUTE ij(25);
  c   |  c   
------+------
 0000 | 0000
 0001 | 0001
 0003 | 0003
 0004 | 0004
 0006 | 0006
 0007 | 0007
 0009 | 0009
 0010 | 0010
(8 rows)

DEALLOCATE ij;
--join with for share clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.c,t2.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR SHARE;
                               QUERY PLAN                               
------------------------------------------------------------------------
 LockRows
   Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Merge Join
         Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Merge Cond: (t1.c = t2.c)
         ->  Sort
               Output: t1.c, t1.ctid, t1.tableoid
               Sort Key: t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.c, t1.ctid, t1.tableoid
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.c, t1_1.ctid, t1_1.tableoid
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.c, t1_2.ctid, t1_2.tableoid
                           Filter: ((t1_2.a % 25) = 0)
         ->  Sort
               Output: t2.c, t2.ctid, t2.tableoid
               Sort Key: t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.c, t2.ctid, t2.tableoid
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.c, t2_1.ctid, t2_1.tableoid
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.c, t2_2.ctid, t2_2.tableoid
                           Filter: ((t2_2.b % 25) = 0)
(31 rows)

select t1.c,t2.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR SHARE;
  c   |  c   
------+------
 0000 | 0000
 0001 | 0001
 0003 | 0003
 0004 | 0004
 0006 | 0006
 0007 | 0007
 0009 | 0009
 0010 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.c,t2.c from uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR SHARE;
  c   |  c   
------+------
 0000 | 0000
 0001 | 0001
 0003 | 0003
 0004 | 0004
 0006 | 0006
 0007 | 0007
 0009 | 0009
 0010 | 0010
(8 rows)

--join with for update clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.c,t2.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR UPDATE;
                               QUERY PLAN                               
------------------------------------------------------------------------
 LockRows
   Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Merge Join
         Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Merge Cond: (t1.c = t2.c)
         ->  Sort
               Output: t1.c, t1.ctid, t1.tableoid
               Sort Key: t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t1
                           Output: t1.c, t1.ctid, t1.tableoid
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                           Output: t1_1.c, t1_1.ctid, t1_1.tableoid
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                           Output: t1_2.c, t1_2.ctid, t1_2.tableoid
                           Filter: ((t1_2.a % 25) = 0)
         ->  Sort
               Output: t2.c, t2.ctid, t2.tableoid
               Sort Key: t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_p1 t2
                           Output: t2.c, t2.ctid, t2.tableoid
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                           Output: t2_1.c, t2_1.ctid, t2_1.tableoid
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                           Output: t2_2.c, t2_2.ctid, t2_2.tableoid
                           Filter: ((t2_2.b % 25) = 0)
(31 rows)

select t1.c,t2.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR UPDATE;
  c   |  c   
------+------
 0000 | 0000
 0001 | 0001
 0003 | 0003
 0004 | 0004
 0006 | 0006
 0007 | 0007
 0009 | 0009
 0010 | 0010
(8 rows)

--TODO - this query need to remove once testing done.
select t1.c,t2.c from uplt1 t1 inner join uplt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR UPDATE;
  c   |  c   
------+------
 0000 | 0000
 0001 | 0001
 0003 | 0003
 0004 | 0004
 0006 | 0006
 0007 | 0007
 0009 | 0009
 0010 | 0010
(8 rows)

-- join in cursor
BEGIN;
DECLARE ffc CURSOR FOR SELECT t1.c,t2.c FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 ;
FETCH ALL from ffc;
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0004 | 0004
 0010 | 0010
 0001 | 0001
 0009 | 0009
 0006 | 0006
 0007 | 0007
(8 rows)

END;
-- join in function
CREATE FUNCTION fun_fft() RETURNS refcursor AS $$
DECLARE
        ref_cursor REFCURSOR := 'cur_fft';
BEGIN
        OPEN ref_cursor FOR SELECT t1.c,t2.c FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0 ;
        RETURN (ref_cursor);    
END;
$$ LANGUAGE plpgsql;
BEGIN;
SELECT fun_fft();
 fun_fft 
---------
 cur_fft
(1 row)

FETCH ALL from cur_fft; 
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0004 | 0004
 0010 | 0010
 0001 | 0001
 0009 | 0009
 0006 | 0006
 0007 | 0007
(8 rows)

COMMIT;
DROP FUNCTION fun_fft();
-- join in user defined functions
CREATE FUNCTION pwj_range_sum(int,int) RETURNS int AS $$
BEGIN
RETURN $1 + $2;
END
$$ LANGUAGE plpgsql IMMUTABLE;
SELECT t1.c, t2.c, pwj_range_sum(t1.a,t2.b) FROM plt1 t1 inner join plt2 t2 on (t1.c = t2.c) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2,3;
  c   |  c   | pwj_range_sum 
------+------+---------------
 0000 | 0000 |             0
 0001 | 0001 |           125
 0003 | 0003 |           300
 0004 | 0004 |           425
 0006 | 0006 |           600
 0007 | 0007 |           725
 0009 | 0009 |           900
 0010 | 0010 |          1025
(8 rows)

DROP FUNCTION pwj_range_sum(int,int) ;
--creating data set for multilevel-range partition
create view prt1_l_view as select * from prt1_l;
create view prt2_l_view as select * from prt2_l;
create view prt1_l_prt2_l_view as select t1.a,t2.b,t1.c from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b);
--cross join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1_l t1 cross join prt2_l t2 where t1.a % 150 = 0 and t2.b % 150 = 0 order by 1,2;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Sort
   Output: t1.a, t2.b
   Sort Key: t1.a, t2.b
   ->  Nested Loop
         Output: t1.a, t2.b
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                     Output: t1.a
                     Filter: ((t1.a % 150) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                     Output: t1_1.a
                     Filter: ((t1_1.a % 150) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                     Output: t1_2.a
                     Filter: ((t1_2.a % 150) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                     Output: t1_3.a
                     Filter: ((t1_3.a % 150) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                     Output: t1_4.a
                     Filter: ((t1_4.a % 150) = 0)
         ->  Materialize
               Output: t2.b
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b
                           Filter: ((t2.b % 150) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                           Output: t2_1.b
                           Filter: ((t2_1.b % 150) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                           Output: t2_2.b
                           Filter: ((t2_2.b % 150) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                           Output: t2_3.b
                           Filter: ((t2_3.b % 150) = 0)
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                           Output: t2_4.b
                           Filter: ((t2_4.b % 150) = 0)
(39 rows)

select t1.a,t2.b from prt1_l t1 cross join prt2_l t2 where t1.a % 150 = 0 and t2.b % 150 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
   0 | 150
   0 | 300
   0 | 450
 150 |   0
 150 | 150
 150 | 300
 150 | 450
 300 |   0
 300 | 150
 300 | 300
 300 | 450
 450 |   0
 450 | 150
 450 | 300
 450 | 450
(16 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1_l t1 cross join uprt2_l t2 where t1.a % 150 = 0 and t2.b % 150 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
   0 | 150
   0 | 300
   0 | 450
 150 |   0
 150 | 150
 150 | 300
 150 | 450
 300 |   0
 300 | 150
 300 | 300
 300 | 450
 450 |   0
 450 | 150
 450 | 300
 450 | 450
(16 rows)

--inner join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from uprt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) inner join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 order by 1,2,3;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Merge Join
   Output: t1.a, t2.b, t3.a
   Merge Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (((t2.a + t2.b)) = ((t1.b + t1.a))))
   ->  Sort
         Output: t2.b, t2.a, t2.c, t3.a, t3.b, t3.c, ((t2.a + t2.b))
         Sort Key: t2.b, t2.a, t2.c, ((t2.a + t2.b))
         ->  Hash Join
               Output: t2.b, t2.a, t2.c, t3.a, t3.b, t3.c, (t2.a + t2.b)
               Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                           Output: t3_3.a, t3_3.b, t3_3.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                           Output: t3_4.a, t3_4.b, t3_4.c
               ->  Hash
                     Output: t2.b, t2.a, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
   ->  Sort
         Output: t1.a, t1.b, t1.c, ((t1.b + t1.a))
         Sort Key: t1.a, t1.b, t1.c, ((t1.b + t1.a))
         ->  Seq Scan on pwj_extra.uprt1_l t1
               Output: t1.a, t1.b, t1.c, (t1.b + t1.a)
               Filter: ((t1.a % 25) = 0)
(39 rows)

select t1.a,t2.b,t3.a from uprt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) inner join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--left outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 left outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) left outer join uprt1_l t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Nested Loop
                     Output: t1.a, t2.b
                     Join Filter: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND ((t1.b + t1.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a = t1.b) AND ((t1.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b, t2.a, t2.c
                           Filter: (t2.b = t2.a)
               ->  Nested Loop
                     Output: t1_1.a, t2_1.b
                     Join Filter: ((t1_1.a = t2_1.b) AND ((t1_1.c)::text = (t2_1.c)::text) AND ((t1_1.b + t1_1.a) = (t2_1.a + t2_1.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a = t1_1.b) AND ((t1_1.a % 25) = 0))
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a = t1_2.b) AND ((t1_2.a % 25) = 0))
                     ->  Materialize
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: (t2_1.b = t2_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: (t2_2.b = t2_2.a)
               ->  Nested Loop
                     Output: t1_3.a, t2_3.b
                     Join Filter: ((t1_3.a = t2_3.b) AND ((t1_3.c)::text = (t2_3.c)::text) AND ((t1_3.b + t1_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a = t1_3.b) AND ((t1_3.a % 25) = 0))
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a = t1_4.b) AND ((t1_4.a % 25) = 0))
                     ->  Materialize
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: (t2_3.b = t2_3.a)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: (t2_4.b = t2_4.a)
         ->  Materialize
               Output: t3.a
               ->  Seq Scan on pwj_extra.uprt1_l t3
                     Output: t3.a
                     Filter: ((t3.a % 125) = 0)
(58 rows)

select t1.a,t2.b,t3.a from prt1_l t1 left outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) left outer join uprt1_l t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 |   0 | 250
   0 |   0 | 500
 150 | 150 |   0
 150 | 150 | 250
 150 | 150 | 500
 300 | 300 |   0
 300 | 300 | 250
 300 | 300 | 500
 450 | 450 |   0
 450 | 450 | 250
 450 | 450 | 500
(12 rows)

--right outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
 select t1.a,t2.b,t3.a from prt1_l t1 right outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join uprt1_l t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Nested Loop
                     Output: t1.a, t2.b
                     Join Filter: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND ((t1.b + t1.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a = t1.b) AND ((t1.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b, t2.a, t2.c
                           Filter: (t2.b = t2.a)
               ->  Nested Loop
                     Output: t1_1.a, t2_1.b
                     Join Filter: ((t1_1.a = t2_1.b) AND ((t1_1.c)::text = (t2_1.c)::text) AND ((t1_1.b + t1_1.a) = (t2_1.a + t2_1.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a = t1_1.b) AND ((t1_1.a % 25) = 0))
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a = t1_2.b) AND ((t1_2.a % 25) = 0))
                     ->  Materialize
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: (t2_1.b = t2_1.a)
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: (t2_2.b = t2_2.a)
               ->  Nested Loop
                     Output: t1_3.a, t2_3.b
                     Join Filter: ((t1_3.a = t2_3.b) AND ((t1_3.c)::text = (t2_3.c)::text) AND ((t1_3.b + t1_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a = t1_3.b) AND ((t1_3.a % 25) = 0))
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a = t1_4.b) AND ((t1_4.a % 25) = 0))
                     ->  Materialize
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: (t2_3.b = t2_3.a)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: (t2_4.b = t2_4.a)
         ->  Materialize
               Output: t3.a
               ->  Seq Scan on pwj_extra.uprt1_l t3
                     Output: t3.a
                     Filter: ((t3.a % 125) = 0)
(58 rows)

 select t1.a,t2.b,t3.a from prt1_l t1 right outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join uprt1_l t3 on (t1.a = t2.a) where t1.a % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 |   0 | 250
   0 |   0 | 500
 150 | 150 |   0
 150 | 150 | 250
 150 | 150 | 500
 300 | 300 |   0
 300 | 300 | 250
 300 | 300 | 500
 450 | 450 |   0
 450 | 450 | 250
 450 | 450 | 500
(12 rows)

--full outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 full outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b, t3.a
   ->  Hash Right Join
         Output: t1.a, t2.b, t3.a
         Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
         ->  Seq Scan on pwj_extra.uprt1_l t3
               Output: t3.a, t3.b, t3.c
         ->  Hash
               Output: t1.a, t2.b, t2.a, t2.c
               ->  Append
                     ->  Hash Right Join
                           Output: t1.a, t2.b, t2.a, t2.c
                           Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                           ->  Hash
                                 Output: t1.a, t1.b, t1.c
                                 ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                       Output: t1.a, t1.b, t1.c
                                       Filter: ((t1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_1.a, t2_1.b, t2_1.a, t2_1.c
                           Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.a = t1_1.b) AND ((t2_1.c)::text = (t1_1.c)::text) AND ((t2_1.a + t2_1.b) = (t1_1.b + t1_1.a)))
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Hash
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                       Output: t1_1.a, t1_1.b, t1_1.c
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_2.a, t2_2.b, t2_2.a, t2_2.c
                           Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.a = t1_2.b) AND ((t2_2.c)::text = (t1_2.c)::text) AND ((t2_2.a + t2_2.b) = (t1_2.b + t1_2.a)))
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Hash
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                       Output: t1_2.a, t1_2.b, t1_2.c
                                       Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_3.a, t2_3.b, t2_3.a, t2_3.c
                           Hash Cond: ((t2_3.b = t1_3.a) AND (t2_3.a = t1_3.b) AND ((t2_3.c)::text = (t1_3.c)::text) AND ((t2_3.a + t2_3.b) = (t1_3.b + t1_3.a)))
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                           ->  Hash
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 ->  Append
                                       ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                             Output: t1_3.a, t1_3.b, t1_3.c
                                             Filter: ((t1_3.a % 25) = 0)
                                       ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                             Output: t1_4.a, t1_4.b, t1_4.c
                                             Filter: ((t1_4.a % 25) = 0)
(58 rows)

select t1.a,t2.b,t3.a from prt1_l t1 full outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
  50 |     |    
 100 |     |    
 150 | 150 | 150
 200 |     |    
 250 |     |    
 300 | 300 | 300
 350 |     |    
 400 |     |    
 450 | 450 | 450
 500 |     |    
 550 |     |    
(12 rows)

-- natural join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1_l t1 natural join prt2_l t2 where t1.a % 25 = 0 order by 1,2;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b
   Sort Key: t1.a, t2.b
   ->  Hash Join
         Output: t1.a, t2.b
         Hash Cond: ((t2.a = t1.a) AND (t2.b = t1.b) AND ((t2.c)::text = (t1.c)::text))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(35 rows)

select t1.a,t2.b from prt1_l t1 natural join prt2_l t2 where t1.a % 25 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1_l t1 natural join uprt2_l t2 where t1.a % 25 = 0 order by 1,2;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

-- semi join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.a from prt1_l t1 where exists (select 1 from prt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) and t1.a % 25 = 0 order by 1,2;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.a
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.a
         ->  Append
               ->  Hash Semi Join
                     Output: t1.a, t1.b
                     Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND ((t1.b + t1.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
               ->  Hash Semi Join
                     Output: t1_1.a, t1_1.b
                     Hash Cond: ((t1_1.a = t2_1.b) AND (t1_1.b = t2_1.a) AND ((t1_1.c)::text = (t2_1.c)::text) AND ((t1_1.b + t1_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
               ->  Hash Semi Join
                     Output: t1_2.a, t1_2.b
                     Hash Cond: ((t1_2.a = t2_2.b) AND (t1_2.b = t2_2.a) AND ((t1_2.c)::text = (t2_2.c)::text) AND ((t1_2.b + t1_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
               ->  Hash Semi Join
                     Output: t1_3.a, t1_3.b
                     Hash Cond: ((t1_3.a = t2_3.b) AND (t1_3.b = t2_3.a) AND ((t1_3.c)::text = (t2_3.c)::text) AND ((t1_3.b + t1_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
(53 rows)

select t1.a,t1.b,t1.a from prt1_l t1 where exists (select 1 from prt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.a from uprt1_l t1 where exists (select 1 from uprt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- anti join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.a from prt1_l t1 where not exists (select 1 from prt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) and t1.a % 25 = 0 order by 1,2;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.a
   Sort Key: t1.a, t1.b
   ->  Hash Anti Join
         Output: t1.a, t1.b, t1.a
         Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND ((t1.b + t1.a) = (t2.a + t2.b)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                     Output: t1_3.a, t1_3.b, t1_3.c
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                     Output: t1_4.a, t1_4.b, t1_4.c
                     Filter: ((t1_4.a % 25) = 0)
         ->  Hash
               Output: t2.b, t2.a, t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b, t2.a, t2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                           Output: t2_1.b, t2_1.a, t2_1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                           Output: t2_2.b, t2_2.a, t2_2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                           Output: t2_3.b, t2_3.a, t2_3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                           Output: t2_4.b, t2_4.a, t2_4.c
(35 rows)

select t1.a,t1.b,t1.a from prt1_l t1 where not exists (select 1 from prt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
  50 |  50 |  50
 100 | 100 | 100
 200 | 200 | 200
 250 | 250 | 250
 350 | 350 | 350
 400 | 400 | 400
 500 | 500 | 500
 550 | 550 | 550
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.a from uprt1_l t1 where not exists (select 1 from uprt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) and t1.a % 25 = 0 order by 1,2;
  a  |  b  |  a  
-----+-----+-----
  50 |  50 |  50
 100 | 100 | 100
 200 | 200 | 200
 250 | 250 | 250
 350 | 350 | 350
 400 | 400 | 400
 500 | 500 | 500
 550 | 550 | 550
(8 rows)

-- self join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b as t1_b,t2.b as t2_b from prt1_l t1, prt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.a % 25 = 0 order by 1,2,3;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b
   Sort Key: t1.a, t1.b
   ->  Hash Join
         Output: t1.a, t1.b, t2.b
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(35 rows)

select t1.a,t1.b as t1_b,t2.b as t2_b from prt1_l t1, prt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.a % 25 = 0 order by 1,2,3;
  a  | t1_b | t2_b 
-----+------+------
   0 |    0 |    0
 150 |  150 |  150
 300 |  300 |  300
 450 |  450 |  450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b as t1_b,t2.b as t2_b from uprt1_l t1, uprt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.a % 25 = 0 order by 1,2,3;
  a  | t1_b | t2_b 
-----+------+------
   0 |    0 |    0
 150 |  150 |  150
 300 |  300 |  300
 450 |  450 |  450
(4 rows)

-- join with CTE
EXPLAIN (VERBOSE, COSTS OFF)
with ED as (select t1.b,t2.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b)) select b,a from ED where a % 25 = 0 order by 1,2;
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: ed.b, ed.a
   Sort Key: ed.b, ed.a
   CTE ed
     ->  Hash Join
           Output: t1.b, t2.a
           Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND ((t1.b + t1.a) = (t2.a + t2.b)))
           ->  Append
                 ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                       Output: t1.b, t1.a, t1.c
                 ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                       Output: t1_1.b, t1_1.a, t1_1.c
                 ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                       Output: t1_2.b, t1_2.a, t1_2.c
                 ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                       Output: t1_3.b, t1_3.a, t1_3.c
                 ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                       Output: t1_4.b, t1_4.a, t1_4.c
           ->  Hash
                 Output: t2.a, t2.b, t2.c
                 ->  Append
                       ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                             Output: t2.a, t2.b, t2.c
                       ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                             Output: t2_1.a, t2_1.b, t2_1.c
                       ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                             Output: t2_2.a, t2_2.b, t2_2.c
                       ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                             Output: t2_3.a, t2_3.b, t2_3.c
                       ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                             Output: t2_4.a, t2_4.b, t2_4.c
   ->  CTE Scan on ed
         Output: ed.b, ed.a
         Filter: ((ed.a % 25) = 0)
(34 rows)

with ED as (select t1.b,t2.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b)) select b,a from ED where a % 25 = 0 order by 1,2;
  b  |  a  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
with ED as (select t1.b,t2.a from uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b)) select b,a from ED where a % 25 = 0 order by 1,2;
  b  |  a  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--Join combinations
--cross and inner join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 inner join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Join
                     Output: t2.b, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                                 Output: t3_1.a, t3_1.b, t3_1.c
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                                 Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
               ->  Hash Join
                     Output: t2_3.b, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
(68 rows)

select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 inner join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 cross join uprt2_l t2 inner join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--cross and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 left outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: ((t3_2.a = t2_2.b) AND (t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text) AND ((t3_2.b + t3_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 125) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
(71 rows)

select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 left outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 cross join uprt2_l t2 left outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--cross and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 right outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Join
                     Output: t2.b, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                                 Output: t3_1.a, t3_1.b, t3_1.c
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                                 Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
               ->  Hash Join
                     Output: t2_3.b, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
(68 rows)

select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 right outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 cross join uprt2_l t2 right outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
   0 | 150 | 150
   0 | 300 | 300
   0 | 450 | 450
 250 |   0 |   0
 250 | 150 | 150
 250 | 300 | 300
 250 | 450 | 450
 500 |   0 |   0
 500 | 150 | 150
 500 | 300 | 300
 500 | 450 | 450
(12 rows)

--cross and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 full outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t2.b, t3.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t3_2.a
                     Hash Cond: ((t3_2.a = t2_2.b) AND (t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text) AND ((t3_2.b + t3_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 125) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 125) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
(71 rows)

select t1.a,t2.b,t3.a from prt1_l t1 cross join prt2_l t2 full outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 cross join uprt2_l t2 full outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 125 = 0 and t2.b % 125= 0 order by 1,2,3;
  a  |  b  | a 
-----+-----+---
   0 |   0 | 0
   0 | 375 |  
 250 |   0 | 0
 250 | 375 |  
 500 |   0 | 0
 500 | 375 |  
(6 rows)

--inner and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) left outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Hash Join
         Output: t1.a, t2.b, t3.a
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.a, t2.c, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.a, t2_1.c, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.a, t2_2.c, t3_2.a
                     Hash Cond: ((t3_2.a = t2_2.b) AND (t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text) AND ((t3_2.b + t3_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t2_3.a, t2_3.c, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(72 rows)

select t1.a,t2.b,t3.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) left outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) left outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--inner and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         Join Filter: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Hash Join
               Output: t2.b, t2.a, t2.c, t3.a, t3.b, t3.c
               Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                           Output: t3_3.a, t3_3.b, t3_3.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                           Output: t3_4.a, t3_4.b, t3_4.c
               ->  Hash
                     Output: t2.b, t2.a, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                     Output: t1_3.a, t1_3.b, t1_3.c
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                     Output: t1_4.a, t1_4.b, t1_4.c
                     Filter: ((t1_4.a % 25) = 0)
(54 rows)

select t1.a,t2.b,t3.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--inner and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Hash Join
         Output: t1.a, t2.b, t3.a
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.a, t2.c, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.a, t2_1.c, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.a, t2_2.c, t3_2.a
                     Hash Cond: ((t3_2.a = t2_2.b) AND (t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text) AND ((t3_2.b + t3_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t2_3.a, t2_3.c, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(72 rows)

select t1.a,t2.b,t3.a from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--left outer and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 left outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a
   ->  Nested Loop
         Output: t1.a, t2.b, t3.a
         Join Filter: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Hash Join
               Output: t2.b, t2.a, t2.c, t3.a, t3.b, t3.c
               Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                           Output: t3_3.a, t3_3.b, t3_3.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                           Output: t3_4.a, t3_4.b, t3_4.c
               ->  Hash
                     Output: t2.b, t2.a, t2.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                     Output: t1_3.a, t1_3.b, t1_3.c
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                     Output: t1_4.a, t1_4.b, t1_4.c
                     Filter: ((t1_4.a % 25) = 0)
(54 rows)

select t1.a,t2.b,t3.a from prt1_l t1 left outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 left outer join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) right outer join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--left outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 left outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Hash Join
         Output: t1.a, t2.b, t3.a
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.a, t2.c, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.a, t2_1.c, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.a, t2_2.c, t3_2.a
                     Hash Cond: ((t3_2.a = t2_2.b) AND (t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text) AND ((t3_2.b + t3_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t2_3.a, t2_3.c, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(72 rows)

select t1.a,t2.b,t3.a from prt1_l t1 left outer join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 left outer join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--right outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.a from prt1_l t1 right join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.a
   Sort Key: t1.a, t3.a
   ->  Hash Join
         Output: t1.a, t2.b, t3.a
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.a, t2.c, t3.a
                     Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND ((t3.b + t3.a) = (t2.a + t2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t3
                           Output: t3.a, t3.b, t3.c
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.a, t2_1.c, t3_1.a
                     Hash Cond: ((t3_1.a = t2_1.b) AND (t3_1.b = t2_1.a) AND ((t3_1.c)::text = (t2_1.c)::text) AND ((t3_1.b + t3_1.a) = (t2_1.a + t2_1.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t3_1
                           Output: t3_1.a, t3_1.b, t3_1.c
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.a, t2_2.c, t3_2.a
                     Hash Cond: ((t3_2.a = t2_2.b) AND (t3_2.b = t2_2.a) AND ((t3_2.c)::text = (t2_2.c)::text) AND ((t3_2.b + t3_2.a) = (t2_2.a + t2_2.b)))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t3_2
                           Output: t3_2.a, t3_2.b, t3_2.c
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_3.b, t2_3.a, t2_3.c, t3_3.a
                     Hash Cond: ((t3_3.a = t2_3.b) AND (t3_3.b = t2_3.a) AND ((t3_3.c)::text = (t2_3.c)::text) AND ((t3_3.b + t3_3.a) = (t2_3.a + t2_3.b)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t3_3
                                 Output: t3_3.a, t3_3.b, t3_3.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t3_4
                                 Output: t3_4.a, t3_4.b, t3_4.c
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(72 rows)

select t1.a,t2.b,t3.a from prt1_l t1 right join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full join prt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.a from uprt1_l t1 right join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) full join uprt1_l t3 on (t2.b = t3.a AND t2.a = t3.b AND t2.c = t3.c AND t2.a + t2.b = t3.b + t3.a) where t1.a % 25 = 0 and t2.b % 25= 0 order by 1,2,3;
  a  |  b  |  a  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- Join with views
--join of two partition table simple views
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1_l_view t1 inner join prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: prt1_l_p1.a, prt2_l_p1.a, prt2_l_p1.b
   Sort Key: prt1_l_p1.a, prt2_l_p1.a
   ->  Hash Join
         Output: prt1_l_p1.a, prt2_l_p1.a, prt2_l_p1.b
         Hash Cond: ((prt2_l_p1.b = prt1_l_p1.a) AND (prt2_l_p1.a = prt1_l_p1.b) AND ((prt2_l_p1.c)::text = (prt1_l_p1.c)::text) AND ((prt2_l_p1.a + prt2_l_p1.b) = (prt1_l_p1.b + prt1_l_p1.a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1
                     Output: prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                     Output: prt2_l_p2_p1.a, prt2_l_p2_p1.b, prt2_l_p2_p1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                     Output: prt2_l_p2_p2.a, prt2_l_p2_p2.b, prt2_l_p2_p2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1
                     Output: prt2_l_p3_p1.a, prt2_l_p3_p1.b, prt2_l_p3_p1.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2
                     Output: prt2_l_p3_p2.a, prt2_l_p3_p2.b, prt2_l_p3_p2.c
         ->  Hash
               Output: prt1_l_p1.a, prt1_l_p1.b, prt1_l_p1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1
                           Output: prt1_l_p1.a, prt1_l_p1.b, prt1_l_p1.c
                           Filter: ((prt1_l_p1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1
                           Output: prt1_l_p2_p1.a, prt1_l_p2_p1.b, prt1_l_p2_p1.c
                           Filter: ((prt1_l_p2_p1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2
                           Output: prt1_l_p2_p2.a, prt1_l_p2_p2.b, prt1_l_p2_p2.c
                           Filter: ((prt1_l_p2_p2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1
                           Output: prt1_l_p3_p1.a, prt1_l_p3_p1.b, prt1_l_p3_p1.c
                           Filter: ((prt1_l_p3_p1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2
                           Output: prt1_l_p3_p2.a, prt1_l_p3_p2.b, prt1_l_p3_p2.c
                           Filter: ((prt1_l_p3_p2.a % 25) = 0)
(35 rows)

select t1.a,t2.a,t2.b from prt1_l_view t1 inner join prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--join of one partition table and one partition table simple view
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1_l t1 inner join prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, prt2_l_p1.a, prt2_l_p1.b
   Sort Key: t1.a, prt2_l_p1.a
   ->  Hash Join
         Output: t1.a, prt2_l_p1.a, prt2_l_p1.b
         Hash Cond: ((prt2_l_p1.b = t1.a) AND (prt2_l_p1.a = t1.b) AND ((prt2_l_p1.c)::text = (t1.c)::text) AND ((prt2_l_p1.a + prt2_l_p1.b) = (t1.b + t1.a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1
                     Output: prt2_l_p1.a, prt2_l_p1.b, prt2_l_p1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1
                     Output: prt2_l_p2_p1.a, prt2_l_p2_p1.b, prt2_l_p2_p1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2
                     Output: prt2_l_p2_p2.a, prt2_l_p2_p2.b, prt2_l_p2_p2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1
                     Output: prt2_l_p3_p1.a, prt2_l_p3_p1.b, prt2_l_p3_p1.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2
                     Output: prt2_l_p3_p2.a, prt2_l_p3_p2.b, prt2_l_p3_p2.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(35 rows)

select t1.a,t2.a,t2.b from prt1_l t1 inner join prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--join of two partition table complex views
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1_l_prt2_l_view t1 inner join prt1_l_prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join
   Output: t1.a, t1_5.a, t2_5.b
   Merge Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (((t1.b + t1.a)) = ((t2.a + t2.b))) AND (t1_5.b = t2_5.a) AND (((t1_5.b + t1_5.a)) = ((t2_5.a + t2_5.b))))
   Join Filter: ((t2.b + t1.a) = (t1_5.a + t2_5.b))
   ->  Sort
         Output: t1.a, t1.b, t1.c, t1_5.a, t1_5.b, t1_5.c, ((t1.b + t1.a)), ((t1_5.b + t1_5.a))
         Sort Key: t1.a, t1.b, t1.c, ((t1.b + t1.a)), t1_5.b, ((t1_5.b + t1_5.a))
         ->  Hash Join
               Output: t1.a, t1.b, t1.c, t1_5.a, t1_5.b, t1_5.c, (t1.b + t1.a), (t1_5.b + t1_5.a)
               Hash Cond: ((t1_5.a = t1.a) AND ((t1_5.c)::text = (t1.c)::text))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1_5
                           Output: t1_5.a, t1_5.b, t1_5.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_6
                           Output: t1_6.a, t1_6.b, t1_6.c
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_7
                           Output: t1_7.a, t1_7.b, t1_7.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_8
                           Output: t1_8.a, t1_8.b, t1_8.c
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_9
                           Output: t1_9.a, t1_9.b, t1_9.c
               ->  Hash
                     Output: t1.a, t1.b, t1.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
   ->  Sort
         Output: t2.b, t2.a, t2.c, t2_5.b, t2_5.a, t2_5.c, ((t2.a + t2.b)), ((t2_5.a + t2_5.b))
         Sort Key: t2.b, t2.a, t2.c, ((t2.a + t2.b)), t2_5.a, ((t2_5.a + t2_5.b))
         ->  Hash Join
               Output: t2.b, t2.a, t2.c, t2_5.b, t2_5.a, t2_5.c, (t2.a + t2.b), (t2_5.a + t2_5.b)
               Hash Cond: ((t2.b = t2_5.b) AND ((t2.c)::text = (t2_5.c)::text))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b, t2.a, t2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                           Output: t2_1.b, t2_1.a, t2_1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                           Output: t2_2.b, t2_2.a, t2_2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                           Output: t2_3.b, t2_3.a, t2_3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                           Output: t2_4.b, t2_4.a, t2_4.c
               ->  Hash
                     Output: t2_5.b, t2_5.a, t2_5.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_6
                                 Output: t2_6.b, t2_6.a, t2_6.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_7
                                 Output: t2_7.b, t2_7.a, t2_7.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_8
                                 Output: t2_8.b, t2_8.a, t2_8.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_9
                                 Output: t2_9.b, t2_9.a, t2_9.c
(69 rows)

select t1.a,t2.a,t2.b from prt1_l_prt2_l_view t1 inner join prt1_l_prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--join of one partition table and other partition table complex view
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.a,t2.b from prt1_l t1 inner join prt1_l_prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1_5.a, t2.b
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t1_5.a, t2.b
         Hash Cond: ((t2.b = t1_5.a) AND (t2.a = t1_5.b) AND ((t2.c)::text = (t1_5.c)::text) AND ((t2.a + t2.b) = (t1_5.b + t1_5.a)))
         Join Filter: ((t1_5.a + t2.b) = (t1.b + t1.a))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
         ->  Hash
               Output: t1.a, t1.b, t1.c, t1_5.a, t1_5.b, t1_5.c
               ->  Hash Join
                     Output: t1.a, t1.b, t1.c, t1_5.a, t1_5.b, t1_5.c
                     Hash Cond: ((t1_5.a = t1.a) AND ((t1_5.c)::text = (t1.c)::text))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p1 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_6
                                 Output: t1_6.a, t1_6.b, t1_6.c
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_7
                                 Output: t1_7.a, t1_7.b, t1_7.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_8
                                 Output: t1_8.a, t1_8.b, t1_8.c
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_9
                                 Output: t1_9.a, t1_9.b, t1_9.c
                     ->  Hash
                           Output: t1.a, t1.b, t1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                       Output: t1.a, t1.b, t1.c
                                       Filter: ((t1.a = t1.b) AND ((t1.a % 25) = 0))
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                       Output: t1_1.a, t1_1.b, t1_1.c
                                       Filter: ((t1_1.a = t1_1.b) AND ((t1_1.a % 25) = 0))
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                       Output: t1_2.a, t1_2.b, t1_2.c
                                       Filter: ((t1_2.a = t1_2.b) AND ((t1_2.a % 25) = 0))
                                 ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                       Output: t1_3.a, t1_3.b, t1_3.c
                                       Filter: ((t1_3.a = t1_3.b) AND ((t1_3.a % 25) = 0))
                                 ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                       Output: t1_4.a, t1_4.b, t1_4.c
                                       Filter: ((t1_4.a = t1_4.b) AND ((t1_4.a % 25) = 0))
(52 rows)

select t1.a,t2.a,t2.b from prt1_l t1 inner join prt1_l_prt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  a  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- join with expressions and system functions
-- join with like operator
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t2.b from prt1_l t1 inner join prt2_l t2 on t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.c like '0%0' and t1.a % 25 = 0 order by 1,2,3;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b
   Sort Key: t1.a, t1.b
   ->  Hash Join
         Output: t1.a, t1.b, t2.b
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: (((t1.c)::text ~~ '0%0'::text) AND ((t1.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: (((t1_1.c)::text ~~ '0%0'::text) AND ((t1_1.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: (((t1_2.c)::text ~~ '0%0'::text) AND ((t1_2.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: (((t1_3.c)::text ~~ '0%0'::text) AND ((t1_3.a % 25) = 0))
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: (((t1_4.c)::text ~~ '0%0'::text) AND ((t1_4.a % 25) = 0))
(35 rows)

select t1.a,t1.b,t2.b from prt1_l t1 inner join prt2_l t2 on t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.c like '0%0' and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t2.b from uprt1_l t1 inner join uprt2_l t2 on t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.c like '0%0' and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- join with rank
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b, (rank() OVER (?))
   Sort Key: t1.a, t1.b
   ->  WindowAgg
         Output: t1.a, t1.b, t2.b, rank() OVER (?)
         ->  Sort
               Output: t2.b, t1.a, t1.b
               Sort Key: t2.b DESC
               ->  Hash Join
                     Output: t2.b, t1.a, t1.b
                     Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                     ->  Hash
                           Output: t1.a, t1.b, t1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                       Output: t1.a, t1.b, t1.c
                                       Filter: ((t1.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                       Output: t1_1.a, t1_1.b, t1_1.c
                                       Filter: ((t1_1.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                       Output: t1_2.a, t1_2.b, t1_2.c
                                       Filter: ((t1_2.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                       Output: t1_3.a, t1_3.b, t1_3.c
                                       Filter: ((t1_3.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                       Output: t1_4.a, t1_4.b, t1_4.c
                                       Filter: ((t1_4.a % 25) = 0)
(40 rows)

SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    4
 150 | 150 | 150 |    3
 300 | 300 | 300 |    2
 450 | 450 | 450 |    1
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    4
 150 | 150 | 150 |    3
 300 | 300 | 300 |    2
 450 | 450 | 450 |    1
(4 rows)

-- join with array expression
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a,t1.b,t2.b FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3;
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b
   Sort Key: t1.a, t1.b
   ->  Hash Join
         Output: t1.a, t1.b, t2.b
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         Join Filter: (t1.a = ANY (ARRAY[t2.b, 1, (t2.b + 0)]))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(36 rows)

SELECT t1.a,t1.b,t2.b FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a,t1.b,t2.b FROM uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- join with group by and having
EXPLAIN (VERBOSE, COSTS OFF)
select t2.b,sum(t1.a) from prt1_l t1 inner join prt2_l t2 on(t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 1,2;
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t2.b, (sum(t1.a))
   Sort Key: t2.b, (sum(t1.a))
   ->  GroupAggregate
         Output: t2.b, sum(t1.a)
         Group Key: t2.b
         Filter: (sum(t1.a) > 2)
         ->  Sort
               Output: t2.b, t1.a
               Sort Key: t2.b
               ->  Hash Join
                     Output: t2.b, t1.a
                     Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                                 Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                     ->  Hash
                           Output: t1.a, t1.b, t1.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                       Output: t1.a, t1.b, t1.c
                                       Filter: ((t1.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                       Output: t1_1.a, t1_1.b, t1_1.c
                                       Filter: ((t1_1.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                       Output: t1_2.a, t1_2.b, t1_2.c
                                       Filter: ((t1_2.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                       Output: t1_3.a, t1_3.b, t1_3.c
                                       Filter: ((t1_3.a % 25) = 0)
                                 ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                       Output: t1_4.a, t1_4.b, t1_4.c
                                       Filter: ((t1_4.a % 25) = 0)
(42 rows)

select t2.b,sum(t1.a) from prt1_l t1 inner join prt2_l t2 on(t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 1,2;
  b  | sum 
-----+-----
 150 | 150
 300 | 300
 450 | 450
(3 rows)

--TODO - this query need to remove once testing done.
select t2.b,sum(t1.a) from uprt1_l t1 inner join uprt2_l t2 on(t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 1,2;
  b  | sum 
-----+-----
 150 | 150
 300 | 300
 450 | 450
(3 rows)

--join with prepare statement 
PREPARE ij(int) AS select t1.a,t2.b from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b and t1.a % $1 = 0) ORDER BY 1,2;
EXPLAIN (VERBOSE, COSTS OFF) EXECUTE ij(25);
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b
   Sort Key: t1.a
   ->  Hash Join
         Output: t1.a, t2.b
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
         ->  Append
               ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
         ->  Hash
               Output: t1.a, t1.b, t1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
(35 rows)

EXECUTE ij(25);
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

DEALLOCATE ij;
--join with for share clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2 FOR SHARE;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 LockRows
   Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Sort
         Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Sort Key: t1.a
         ->  Hash Join
               Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
               Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b, t2.ctid, t2.tableoid, t2.a, t2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                           Output: t2_1.b, t2_1.ctid, t2_1.tableoid, t2_1.a, t2_1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                           Output: t2_2.b, t2_2.ctid, t2_2.tableoid, t2_2.a, t2_2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                           Output: t2_3.b, t2_3.ctid, t2_3.tableoid, t2_3.a, t2_3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                           Output: t2_4.b, t2_4.ctid, t2_4.tableoid, t2_4.a, t2_4.c
               ->  Hash
                     Output: t1.a, t1.ctid, t1.tableoid, t1.b, t1.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                 Output: t1.a, t1.ctid, t1.tableoid, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                 Output: t1_1.a, t1_1.ctid, t1_1.tableoid, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                 Output: t1_2.a, t1_2.ctid, t1_2.tableoid, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.ctid, t1_3.tableoid, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.ctid, t1_4.tableoid, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
(37 rows)

select t1.a,t2.b from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2 FOR SHARE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2 FOR SHARE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--join with for update clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2 FOR UPDATE;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 LockRows
   Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Sort
         Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Sort Key: t1.a
         ->  Hash Join
               Output: t1.a, t2.b, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
               Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND ((t2.a + t2.b) = (t1.b + t1.a)))
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p1 t2
                           Output: t2.b, t2.ctid, t2.tableoid, t2.a, t2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2_1
                           Output: t2_1.b, t2_1.ctid, t2_1.tableoid, t2_1.a, t2_1.c
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_2
                           Output: t2_2.b, t2_2.ctid, t2_2.tableoid, t2_2.a, t2_2.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p1 t2_3
                           Output: t2_3.b, t2_3.ctid, t2_3.tableoid, t2_3.a, t2_3.c
                     ->  Seq Scan on pwj_extra.prt2_l_p3_p2 t2_4
                           Output: t2_4.b, t2_4.ctid, t2_4.tableoid, t2_4.a, t2_4.c
               ->  Hash
                     Output: t1.a, t1.ctid, t1.tableoid, t1.b, t1.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_l_p1 t1
                                 Output: t1.a, t1.ctid, t1.tableoid, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1_1
                                 Output: t1_1.a, t1_1.ctid, t1_1.tableoid, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_2
                                 Output: t1_2.a, t1_2.ctid, t1_2.tableoid, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p1 t1_3
                                 Output: t1_3.a, t1_3.ctid, t1_3.tableoid, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.prt1_l_p3_p2 t1_4
                                 Output: t1_4.a, t1_4.ctid, t1_4.tableoid, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
(37 rows)

select t1.a,t2.b from prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2 FOR UPDATE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b from uprt1_l t1 inner join uprt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2 FOR UPDATE;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

-- join in cursor
BEGIN;
DECLARE ffc CURSOR FOR SELECT t1.a,t2.b FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0;
FETCH ALL from ffc;
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

END;
-- join in function
CREATE FUNCTION fun_fft() RETURNS refcursor AS $$
DECLARE
        ref_cursor REFCURSOR := 'cur_fft';
BEGIN
        OPEN ref_cursor FOR SELECT t1.a,t2.b FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0;
        RETURN (ref_cursor);    
END;
$$ LANGUAGE plpgsql;
BEGIN;
SELECT fun_fft();
 fun_fft 
---------
 cur_fft
(1 row)

FETCH ALL from cur_fft; 
  a  |  b  
-----+-----
   0 |   0
 150 | 150
 300 | 300
 450 | 450
(4 rows)

COMMIT;
DROP FUNCTION fun_fft();
-- join in user defined functions
CREATE FUNCTION pwj_range_sum(int,int) RETURNS int AS $$
BEGIN
RETURN $1 + $2;
END
$$ LANGUAGE plpgsql IMMUTABLE;
SELECT t1.a, t2.b, pwj_range_sum(t1.a,t2.b) FROM prt1_l t1 inner join prt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND t1.b + t1.a = t2.a + t2.b) where t1.a % 25 = 0 order by 1,2,3;
  a  |  b  | pwj_range_sum 
-----+-----+---------------
   0 |   0 |             0
 150 | 150 |           300
 300 | 300 |           600
 450 | 450 |           900
(4 rows)

DROP FUNCTION pwj_range_sum(int,int) ;
--creating data set for multilevel-list partition
create view plt1_l_view as select * from plt1_l;
create view plt2_l_view as select * from plt2_l;
create view plt1_l_plt2_l_view as select t1.a,t2.b,t1.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A'));
--cross join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.c,t2.b,t2.c from plt1_l t1 cross join plt2_l t2 where t1.a % 125 = 0 and t2.b % 125 = 0 order by 1,2,3,4;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t1.c, t2.b, t2.c
   ->  Nested Loop
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.a, t1.c
                     Filter: ((t1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.a, t1_1.c
                     Filter: ((t1_1.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.a, t1_2.c
                     Filter: ((t1_2.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.a, t1_3.c
                     Filter: ((t1_3.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.a, t1_4.c
                     Filter: ((t1_4.a % 125) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.a, t1_5.c
                     Filter: ((t1_5.a % 125) = 0)
         ->  Materialize
               Output: t2.b, t2.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                           Output: t2.b, t2.c
                           Filter: ((t2.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                           Output: t2_1.b, t2_1.c
                           Filter: ((t2_1.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                           Output: t2_2.b, t2_2.c
                           Filter: ((t2_2.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                           Output: t2_3.b, t2_3.c
                           Filter: ((t2_3.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                           Output: t2_4.b, t2_4.c
                           Filter: ((t2_4.b % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                           Output: t2_5.b, t2_5.c
                           Filter: ((t2_5.b % 125) = 0)
(45 rows)

select t1.a,t1.c,t2.b,t2.c from plt1_l t1 cross join plt2_l t2 where t1.a % 125 = 0 and t2.b % 125 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
   0 | 0000 | 375 | 0007
 250 | 0005 |   0 | 0000
 250 | 0005 | 375 | 0007
 500 | 0010 |   0 | 0000
 500 | 0010 | 375 | 0007
(6 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.c,t2.b,t2.c from uplt1_l t1 cross join uplt2_l t2 where t1.a % 125 = 0 and t2.b % 125 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
   0 | 0000 | 375 | 0007
 250 | 0005 |   0 | 0000
 250 | 0005 | 375 | 0007
 500 | 0010 |   0 | 0000
 500 | 0010 | 375 | 0007
(6 rows)

--inner join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) inner join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Join Filter: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Hash Join
               Output: t2.b, t2.c, t2.a, t3.c, t3.b, t3.a
               Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND (ltrim((t3.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.uplt1_l t3
                     Output: t3.a, t3.b, t3.c
               ->  Hash
                     Output: t2.b, t2.c, t2.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.c, t2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.c, t2_3.a
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.c, t2_4.a
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.c, t2_5.a
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.a, t1.c, t1.b
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.a, t1_1.c, t1_1.b
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.a, t1_2.c, t1_2.b
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.a, t1_3.c, t1_3.b
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.a, t1_4.c, t1_4.b
                     Filter: ((t1_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.a, t1_5.c, t1_5.b
                     Filter: ((t1_5.a % 25) = 0)
(45 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) inner join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  b  |  c   |  c   |  c   
-----+-----+------+------+------
   0 |   0 | 0000 | 0000 | 0000
 150 | 150 | 0003 | 0003 | 0003
 300 | 300 | 0006 | 0006 | 0006
 450 | 450 | 0009 | 0009 | 0009
(4 rows)

--left outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 left outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) left outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t2.b, t1.c, t2.c
   ->  Hash Right Join
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Hash Cond: ((t3.b = t2.a) AND (t3.a = t2.b) AND ((t3.c)::text = (t2.c)::text) AND (ltrim((t3.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
         ->  Seq Scan on pwj_extra.uplt1_l t3
               Output: t3.a, t3.b, t3.c
         ->  Hash
               Output: t1.a, t1.c, t2.b, t2.c, t2.a
               ->  Append
                     ->  Hash Right Join
                           Output: t1.a, t1.c, t2.b, t2.c, t2.a
                           Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.c, t2.a
                           ->  Hash
                                 Output: t1.a, t1.c, t1.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                       Output: t1.a, t1.c, t1.b
                                       Filter: ((t1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t2_1.a
                           Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.a = t1_1.b) AND ((t2_1.c)::text = (t1_1.c)::text) AND (ltrim((t2_1.c)::text, 'A'::text) = ltrim((t1_1.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Hash
                                 Output: t1_1.a, t1_1.c, t1_1.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                       Output: t1_1.a, t1_1.c, t1_1.b
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t2_2.a
                           Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.a = t1_2.b) AND ((t2_2.c)::text = (t1_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t1_2.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Hash
                                 Output: t1_2.a, t1_2.c, t1_2.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                       Output: t1_2.a, t1_2.c, t1_2.b
                                       Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_3.a, t1_3.c, t2_3.b, t2_3.c, t2_3.a
                           Hash Cond: ((t2_3.b = t1_3.a) AND (t2_3.a = t1_3.b) AND ((t2_3.c)::text = (t1_3.c)::text) AND (ltrim((t2_3.c)::text, 'A'::text) = ltrim((t1_3.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.c, t2_3.a
                           ->  Hash
                                 Output: t1_3.a, t1_3.c, t1_3.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                       Output: t1_3.a, t1_3.c, t1_3.b
                                       Filter: ((t1_3.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_4.a, t1_4.c, t2_4.b, t2_4.c, t2_4.a
                           Hash Cond: ((t2_4.b = t1_4.a) AND (t2_4.a = t1_4.b) AND ((t2_4.c)::text = (t1_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t1_4.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.c, t2_4.a
                           ->  Hash
                                 Output: t1_4.a, t1_4.c, t1_4.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                       Output: t1_4.a, t1_4.c, t1_4.b
                                       Filter: ((t1_4.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_5.a, t1_5.c, t2_5.b, t2_5.c, t2_5.a
                           Hash Cond: ((t2_5.b = t1_5.a) AND (t2_5.a = t1_5.b) AND ((t2_5.c)::text = (t1_5.c)::text) AND (ltrim((t2_5.c)::text, 'A'::text) = ltrim((t1_5.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.c, t2_5.a
                           ->  Hash
                                 Output: t1_5.a, t1_5.c, t1_5.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                       Output: t1_5.a, t1_5.c, t1_5.b
                                       Filter: ((t1_5.a % 25) = 0)
(71 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 left outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) left outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  b  |  c   |  c   |  c   
-----+-----+------+------+------
   0 |   0 | 0000 | 0000 | 0000
  50 |     | 0001 |      | 
 100 |     | 0002 |      | 
 150 | 150 | 0003 | 0003 | 0003
 200 |     | 0004 |      | 
 250 |     | 0005 |      | 
 300 | 300 | 0006 | 0006 | 0006
 350 |     | 0007 |      | 
 400 |     | 0008 |      | 
 450 | 450 | 0009 | 0009 | 0009
 500 |     | 0010 |      | 
 550 |     | 0011 |      | 
(12 rows)

--right outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 right outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t1.c
   ->  Nested Loop
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Join Filter: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Hash Join
               Output: t2.b, t2.c, t2.a, t3.c, t3.b, t3.a
               Hash Cond: ((t3.a = t2.b) AND (t3.b = t2.a) AND ((t3.c)::text = (t2.c)::text) AND (ltrim((t3.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
               ->  Seq Scan on pwj_extra.uplt1_l t3
                     Output: t3.a, t3.b, t3.c
               ->  Hash
                     Output: t2.b, t2.c, t2.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.c, t2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.c, t2_3.a
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.c, t2_4.a
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.c, t2_5.a
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.a, t1.c, t1.b
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.a, t1_1.c, t1_1.b
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.a, t1_2.c, t1_2.b
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.a, t1_3.c, t1_3.b
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.a, t1_4.c, t1_4.b
                     Filter: ((t1_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.a, t1_5.c, t1_5.b
                     Filter: ((t1_5.a % 25) = 0)
(45 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 right outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  b  |  c   |  c   |  c   
-----+-----+------+------+------
   0 |   0 | 0000 | 0000 | 0000
 150 | 150 | 0003 | 0003 | 0003
 300 | 300 | 0006 | 0006 | 0006
 450 | 450 | 0009 | 0009 | 0009
(4 rows)

--full outer join
--TODO - this query need to remove once testing done.
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 full outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c, t3.c
   Sort Key: t1.a, t2.b, t1.c, t2.c
   ->  Hash Right Join
         Output: t1.a, t2.b, t1.c, t2.c, t3.c
         Hash Cond: ((t3.b = t2.a) AND (t3.a = t2.b) AND ((t3.c)::text = (t2.c)::text) AND (ltrim((t3.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
         ->  Seq Scan on pwj_extra.uplt1_l t3
               Output: t3.a, t3.b, t3.c
         ->  Hash
               Output: t1.a, t1.c, t2.b, t2.c, t2.a
               ->  Append
                     ->  Hash Right Join
                           Output: t1.a, t1.c, t2.b, t2.c, t2.a
                           Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.c, t2.a
                           ->  Hash
                                 Output: t1.a, t1.c, t1.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                       Output: t1.a, t1.c, t1.b
                                       Filter: ((t1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_1.a, t1_1.c, t2_1.b, t2_1.c, t2_1.a
                           Hash Cond: ((t2_1.b = t1_1.a) AND (t2_1.a = t1_1.b) AND ((t2_1.c)::text = (t1_1.c)::text) AND (ltrim((t2_1.c)::text, 'A'::text) = ltrim((t1_1.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Hash
                                 Output: t1_1.a, t1_1.c, t1_1.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                       Output: t1_1.a, t1_1.c, t1_1.b
                                       Filter: ((t1_1.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_2.a, t1_2.c, t2_2.b, t2_2.c, t2_2.a
                           Hash Cond: ((t2_2.b = t1_2.a) AND (t2_2.a = t1_2.b) AND ((t2_2.c)::text = (t1_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t1_2.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Hash
                                 Output: t1_2.a, t1_2.c, t1_2.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                       Output: t1_2.a, t1_2.c, t1_2.b
                                       Filter: ((t1_2.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_3.a, t1_3.c, t2_3.b, t2_3.c, t2_3.a
                           Hash Cond: ((t2_3.b = t1_3.a) AND (t2_3.a = t1_3.b) AND ((t2_3.c)::text = (t1_3.c)::text) AND (ltrim((t2_3.c)::text, 'A'::text) = ltrim((t1_3.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.c, t2_3.a
                           ->  Hash
                                 Output: t1_3.a, t1_3.c, t1_3.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                       Output: t1_3.a, t1_3.c, t1_3.b
                                       Filter: ((t1_3.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_4.a, t1_4.c, t2_4.b, t2_4.c, t2_4.a
                           Hash Cond: ((t2_4.b = t1_4.a) AND (t2_4.a = t1_4.b) AND ((t2_4.c)::text = (t1_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t1_4.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.c, t2_4.a
                           ->  Hash
                                 Output: t1_4.a, t1_4.c, t1_4.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                       Output: t1_4.a, t1_4.c, t1_4.b
                                       Filter: ((t1_4.a % 25) = 0)
                     ->  Hash Right Join
                           Output: t1_5.a, t1_5.c, t2_5.b, t2_5.c, t2_5.a
                           Hash Cond: ((t2_5.b = t1_5.a) AND (t2_5.a = t1_5.b) AND ((t2_5.c)::text = (t1_5.c)::text) AND (ltrim((t2_5.c)::text, 'A'::text) = ltrim((t1_5.c)::text, 'A'::text)))
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.c, t2_5.a
                           ->  Hash
                                 Output: t1_5.a, t1_5.c, t1_5.b
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                       Output: t1_5.a, t1_5.c, t1_5.b
                                       Filter: ((t1_5.a % 25) = 0)
(71 rows)

select t1.a,t2.b,t1.c,t2.c,t3.c from plt1_l t1 full outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  b  |  c   |  c   |  c   
-----+-----+------+------+------
   0 |   0 | 0000 | 0000 | 0000
  50 |     | 0001 |      | 
 100 |     | 0002 |      | 
 150 | 150 | 0003 | 0003 | 0003
 200 |     | 0004 |      | 
 250 |     | 0005 |      | 
 300 | 300 | 0006 | 0006 | 0006
 350 |     | 0007 |      | 
 400 |     | 0008 |      | 
 450 | 450 | 0009 | 0009 | 0009
 500 |     | 0010 |      | 
 550 |     | 0011 |      | 
(12 rows)

-- natural join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.c,t2.b,t2.c from plt1_l t1 natural join plt2_l t2 where t1.a % 25 = 0 order by 1,2,3,4;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t1.c, t2.b
   ->  Hash Join
         Output: t1.a, t1.c, t2.b, t2.c
         Hash Cond: ((t2.a = t1.a) AND (t2.b = t1.b) AND ((t2.c)::text = (t1.c)::text))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.c, t2.a
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.c, t2_1.a
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.c, t2_2.a
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.c, t2_3.a
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.c, t2_4.a
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.c, t2_5.a
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
(40 rows)

select t1.a,t1.c,t2.b,t2.c from plt1_l t1 natural join plt2_l t2 where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.c,t2.b,t2.c from uplt1_l t1 natural join uplt2_l t2 where t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0003 | 150 | 0003
 300 | 0006 | 300 | 0006
 450 | 0009 | 450 | 0009
(4 rows)

-- semi join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.b from plt1_l t1 where exists (select 1 from plt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) and t1.a % 25 = 0 order by 1,2,3;
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.b
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.b
         ->  Append
               ->  Hash Semi Join
                     Output: t1.a, t1.b
                     Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.b, t1.c
                           Filter: ((t1.a % 25) = 0)
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
               ->  Hash Semi Join
                     Output: t1_1.a, t1_1.b
                     Hash Cond: ((t1_1.a = t2_1.b) AND (t1_1.b = t2_1.a) AND ((t1_1.c)::text = (t2_1.c)::text) AND (ltrim((t1_1.c)::text, 'A'::text) = ltrim((t2_1.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Hash
                           Output: t2_1.b, t2_1.a, t2_1.c
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
               ->  Hash Semi Join
                     Output: t1_2.a, t1_2.b
                     Hash Cond: ((t1_2.a = t2_2.b) AND (t1_2.b = t2_2.a) AND ((t1_2.c)::text = (t2_2.c)::text) AND (ltrim((t1_2.c)::text, 'A'::text) = ltrim((t2_2.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
               ->  Hash Semi Join
                     Output: t1_3.a, t1_3.b
                     Hash Cond: ((t1_3.a = t2_3.b) AND (t1_3.b = t2_3.a) AND ((t1_3.c)::text = (t2_3.c)::text) AND (ltrim((t1_3.c)::text, 'A'::text) = ltrim((t2_3.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.b, t1_3.c
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Hash
                           Output: t2_3.b, t2_3.a, t2_3.c
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
               ->  Hash Semi Join
                     Output: t1_4.a, t1_4.b
                     Hash Cond: ((t1_4.a = t2_4.b) AND (t1_4.b = t2_4.a) AND ((t1_4.c)::text = (t2_4.c)::text) AND (ltrim((t1_4.c)::text, 'A'::text) = ltrim((t2_4.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.b, t1_4.c
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Hash
                           Output: t2_4.b, t2_4.a, t2_4.c
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
               ->  Hash Semi Join
                     Output: t1_5.a, t1_5.b
                     Hash Cond: ((t1_5.a = t2_5.b) AND (t1_5.b = t2_5.a) AND ((t1_5.c)::text = (t2_5.c)::text) AND (ltrim((t1_5.c)::text, 'A'::text) = ltrim((t2_5.c)::text, 'A'::text)))
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.b, t1_5.c
                           Filter: ((t1_5.a % 25) = 0)
                     ->  Hash
                           Output: t2_5.b, t2_5.a, t2_5.c
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
(66 rows)

select t1.a,t1.b,t1.b from plt1_l t1 where exists (select 1 from plt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.b from uplt1_l t1 where exists (select 1 from uplt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
   0 |   0 |   0
 150 | 150 | 150
 300 | 300 | 300
 450 | 450 | 450
(4 rows)

-- anti join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.b,t1.b from plt1_l t1 where not exists (select 1 from plt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) and t1.a % 25 = 0 order by 1,2,3;
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.b
   Sort Key: t1.a, t1.b
   ->  Result
         Output: t1.a, t1.b, t1.b
         ->  Append
               ->  Hash Anti Join
                     Output: t1.a, t1.b
                     Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                       Output: t2.b, t2.a, t2.c
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
               ->  Hash Anti Join
                     Output: t1_2.a, t1_2.b
                     Hash Cond: ((t1_2.a = t2_2.b) AND (t1_2.b = t2_2.a) AND ((t1_2.c)::text = (t2_2.c)::text) AND (ltrim((t1_2.c)::text, 'A'::text) = ltrim((t2_2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                     ->  Hash
                           Output: t2_2.b, t2_2.a, t2_2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
               ->  Hash Anti Join
                     Output: t1_4.a, t1_4.b
                     Hash Cond: ((t1_4.a = t2_4.b) AND (t1_4.b = t2_4.a) AND ((t1_4.c)::text = (t2_4.c)::text) AND (ltrim((t1_4.c)::text, 'A'::text) = ltrim((t2_4.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
                     ->  Hash
                           Output: t2_4.b, t2_4.a, t2_4.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                       Output: t2_5.b, t2_5.a, t2_5.c
(57 rows)

select t1.a,t1.b,t1.b from plt1_l t1 where not exists (select 1 from plt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
  50 |  50 |  50
 100 | 100 | 100
 200 | 200 | 200
 250 | 250 | 250
 350 | 350 | 350
 400 | 400 | 400
 500 | 500 | 500
 550 | 550 | 550
(8 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.b,t1.b from uplt1_l t1 where not exists (select 1 from uplt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) and t1.a % 25 = 0 order by 1,2,3;
  a  |  b  |  b  
-----+-----+-----
  50 |  50 |  50
 100 | 100 | 100
 200 | 200 | 200
 250 | 250 | 250
 350 | 350 | 350
 400 | 400 | 400
 500 | 500 | 500
 550 | 550 | 550
(8 rows)

-- self join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t1.c as t1_c,t2.c as t2_C from plt1_l t1, plt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.a % 25 = 0 and t2. b  % 25 = 0  order by 1,2,3,4;
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t1.c, t2.c
   Sort Key: t1.a, t1.c
   ->  Hash Join
         Output: t1.a, t2.b, t1.c, t2.c
         Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.a, t1.c, t1.b
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.a, t1_1.c, t1_1.b
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.a, t1_2.c, t1_2.b
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.a, t1_3.c, t1_3.b
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.a, t1_4.c, t1_4.b
                     Filter: ((t1_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.a, t1_5.c, t1_5.b
                     Filter: ((t1_5.a % 25) = 0)
         ->  Hash
               Output: t2.b, t2.c, t2.a
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                           Output: t2.b, t2.c, t2.a
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                           Output: t2_1.b, t2_1.c, t2_1.a
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                           Output: t2_2.b, t2_2.c, t2_2.a
                           Filter: ((t2_2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                           Output: t2_3.b, t2_3.c, t2_3.a
                           Filter: ((t2_3.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                           Output: t2_4.b, t2_4.c, t2_4.a
                           Filter: ((t2_4.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                           Output: t2_5.b, t2_5.c, t2_5.a
                           Filter: ((t2_5.b % 25) = 0)
(46 rows)

select t1.a,t2.b,t1.c as t1_c,t2.c as t2_C from plt1_l t1, plt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.a % 25 = 0 and t2. b  % 25 = 0  order by 1,2,3,4;
  a  |  b  | t1_c | t2_c 
-----+-----+------+------
   0 |   0 | 0000 | 0000
 150 | 150 | 0003 | 0003
 300 | 300 | 0006 | 0006
 450 | 450 | 0009 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t1.c as t1_c,t2.c as t2_C from uplt1_l t1, uplt2_l t2 where t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.a % 25 = 0 and t2. b  % 25 = 0  order by 1,2,3,4;
  a  |  b  | t1_c | t2_c 
-----+-----+------+------
   0 |   0 | 0000 | 0000
 150 | 150 | 0003 | 0003
 300 | 300 | 0006 | 0006
 450 | 450 | 0009 | 0009
(4 rows)

-- join with CTE
EXPLAIN (VERBOSE, COSTS OFF)
with ED as (select t1.b,t1.c,t2.a from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A'))) select b,c,a from ED where b % 25 = 0 and a % 25 = 0 ;
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 CTE Scan on ed
   Output: ed.b, ed.c, ed.a
   Filter: (((ed.b % 25) = 0) AND ((ed.a % 25) = 0))
   CTE ed
     ->  Hash Join
           Output: t1.b, t1.c, t2.a
           Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
           ->  Append
                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                       Output: t1.b, t1.c, t1.a
                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                       Output: t1_1.b, t1_1.c, t1_1.a
                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                       Output: t1_2.b, t1_2.c, t1_2.a
                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                       Output: t1_3.b, t1_3.c, t1_3.a
                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                       Output: t1_4.b, t1_4.c, t1_4.a
                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                       Output: t1_5.b, t1_5.c, t1_5.a
           ->  Hash
                 Output: t2.a, t2.b, t2.c
                 ->  Append
                       ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                             Output: t2.a, t2.b, t2.c
                       ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                             Output: t2_1.a, t2_1.b, t2_1.c
                       ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                             Output: t2_2.a, t2_2.b, t2_2.c
                       ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                             Output: t2_3.a, t2_3.b, t2_3.c
                       ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                             Output: t2_4.a, t2_4.b, t2_4.c
                       ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                             Output: t2_5.a, t2_5.b, t2_5.c
(35 rows)

with ED as (select t1.b,t1.c,t2.a from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A'))) select b,c,a from ED where b % 25 = 0 and a % 25 = 0 ;
  b  |  c   |  a  
-----+------+-----
   0 | 0000 |   0
 150 | 0003 | 150
 450 | 0009 | 450
 300 | 0006 | 300
(4 rows)

--TODO - this query need to remove once testing done.
with ED as (select t1.b,t1.c,t2.a from uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A'))) select b,c,a from ED where b % 25 = 0 and a % 25 = 0 ;
  b  |  c   |  a  
-----+------+-----
   0 | 0000 |   0
 150 | 0003 | 150
 300 | 0006 | 300
 450 | 0009 | 450
(4 rows)

--Join combinations
--cross and inner join
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 inner join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Append
               ->  Nested Loop
                     Output: t2.b, t3.c
                     Join Filter: ((t2.a = t3.b) AND (t2.b = t3.a) AND ((t2.c)::text = (t3.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                     ->  Materialize
                           Output: t3.c, t3.b, t3.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
                                       Output: t3.c, t3.b, t3.a
                                       Filter: ((t3.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
                                       Output: t3_1.c, t3_1.b, t3_1.a
                                       Filter: ((t3_1.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_2.b, t3_2.c
                     Join Filter: ((t2_2.a = t3_2.b) AND (t2_2.b = t3_2.a) AND ((t2_2.c)::text = (t3_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t3_2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                     ->  Materialize
                           Output: t3_2.c, t3_2.b, t3_2.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
                                       Output: t3_2.c, t3_2.b, t3_2.a
                                       Filter: ((t3_2.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
                                       Output: t3_3.c, t3_3.b, t3_3.a
                                       Filter: ((t3_3.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_4.b, t3_4.c
                     Join Filter: ((t2_4.a = t3_4.b) AND (t2_4.b = t3_4.a) AND ((t2_4.c)::text = (t3_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t3_4.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
                     ->  Materialize
                           Output: t3_4.c, t3_4.b, t3_4.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
                                       Output: t3_4.c, t3_4.b, t3_4.a
                                       Filter: ((t3_4.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
                                       Output: t3_5.c, t3_5.b, t3_5.a
                                       Filter: ((t3_5.a % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a
                           Filter: ((t1_5.a % 125) = 0)
(84 rows)

select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 inner join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 cross join uplt2_l t2 inner join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--cross and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 left outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Append
               ->  Nested Loop
                     Output: t2.b, t3.c
                     Join Filter: ((t2.a = t3.b) AND (t2.b = t3.a) AND ((t2.c)::text = (t3.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                     ->  Materialize
                           Output: t3.c, t3.b, t3.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
                                       Output: t3.c, t3.b, t3.a
                                       Filter: ((t3.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
                                       Output: t3_1.c, t3_1.b, t3_1.a
                                       Filter: ((t3_1.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_2.b, t3_2.c
                     Join Filter: ((t2_2.a = t3_2.b) AND (t2_2.b = t3_2.a) AND ((t2_2.c)::text = (t3_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t3_2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                     ->  Materialize
                           Output: t3_2.c, t3_2.b, t3_2.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
                                       Output: t3_2.c, t3_2.b, t3_2.a
                                       Filter: ((t3_2.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
                                       Output: t3_3.c, t3_3.b, t3_3.a
                                       Filter: ((t3_3.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_4.b, t3_4.c
                     Join Filter: ((t2_4.a = t3_4.b) AND (t2_4.b = t3_4.a) AND ((t2_4.c)::text = (t3_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t3_4.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
                     ->  Materialize
                           Output: t3_4.c, t3_4.b, t3_4.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
                                       Output: t3_4.c, t3_4.b, t3_4.a
                                       Filter: ((t3_4.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
                                       Output: t3_5.c, t3_5.b, t3_5.a
                                       Filter: ((t3_5.a % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a
                           Filter: ((t1_5.a % 125) = 0)
(84 rows)

select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 left outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 cross join uplt2_l t2 left outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--cross and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 right outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Append
               ->  Nested Loop
                     Output: t2.b, t3.c
                     Join Filter: ((t2.a = t3.b) AND (t2.b = t3.a) AND ((t2.c)::text = (t3.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                     ->  Materialize
                           Output: t3.c, t3.b, t3.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
                                       Output: t3.c, t3.b, t3.a
                                       Filter: ((t3.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
                                       Output: t3_1.c, t3_1.b, t3_1.a
                                       Filter: ((t3_1.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_2.b, t3_2.c
                     Join Filter: ((t2_2.a = t3_2.b) AND (t2_2.b = t3_2.a) AND ((t2_2.c)::text = (t3_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t3_2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                     ->  Materialize
                           Output: t3_2.c, t3_2.b, t3_2.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
                                       Output: t3_2.c, t3_2.b, t3_2.a
                                       Filter: ((t3_2.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
                                       Output: t3_3.c, t3_3.b, t3_3.a
                                       Filter: ((t3_3.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_4.b, t3_4.c
                     Join Filter: ((t2_4.a = t3_4.b) AND (t2_4.b = t3_4.a) AND ((t2_4.c)::text = (t3_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t3_4.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
                     ->  Materialize
                           Output: t3_4.c, t3_4.b, t3_4.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
                                       Output: t3_4.c, t3_4.b, t3_4.a
                                       Filter: ((t3_4.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
                                       Output: t3_5.c, t3_5.b, t3_5.a
                                       Filter: ((t3_5.a % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a
                           Filter: ((t1_5.a % 125) = 0)
(84 rows)

select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 right outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 cross join uplt2_l t2 right outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--cross and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 full outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t2.b, t3.c
   Sort Key: t1.a, t2.b, t3.c
   ->  Nested Loop
         Output: t1.a, t2.b, t3.c
         ->  Append
               ->  Nested Loop
                     Output: t2.b, t3.c
                     Join Filter: ((t2.a = t3.b) AND (t2.b = t3.a) AND ((t2.c)::text = (t3.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                     ->  Materialize
                           Output: t3.c, t3.b, t3.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
                                       Output: t3.c, t3.b, t3.a
                                       Filter: ((t3.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
                                       Output: t3_1.c, t3_1.b, t3_1.a
                                       Filter: ((t3_1.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_2.b, t3_2.c
                     Join Filter: ((t2_2.a = t3_2.b) AND (t2_2.b = t3_2.a) AND ((t2_2.c)::text = (t3_2.c)::text) AND (ltrim((t2_2.c)::text, 'A'::text) = ltrim((t3_2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                     ->  Materialize
                           Output: t3_2.c, t3_2.b, t3_2.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
                                       Output: t3_2.c, t3_2.b, t3_2.a
                                       Filter: ((t3_2.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
                                       Output: t3_3.c, t3_3.b, t3_3.a
                                       Filter: ((t3_3.a % 125) = 0)
               ->  Nested Loop
                     Output: t2_4.b, t3_4.c
                     Join Filter: ((t2_4.a = t3_4.b) AND (t2_4.b = t3_4.a) AND ((t2_4.c)::text = (t3_4.c)::text) AND (ltrim((t2_4.c)::text, 'A'::text) = ltrim((t3_4.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
                     ->  Materialize
                           Output: t3_4.c, t3_4.b, t3_4.a
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
                                       Output: t3_4.c, t3_4.b, t3_4.a
                                       Filter: ((t3_4.a % 125) = 0)
                                 ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
                                       Output: t3_5.c, t3_5.b, t3_5.a
                                       Filter: ((t3_5.a % 125) = 0)
         ->  Materialize
               Output: t1.a
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a
                           Filter: ((t1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a
                           Filter: ((t1_1.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a
                           Filter: ((t1_2.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a
                           Filter: ((t1_3.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a
                           Filter: ((t1_4.a % 125) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a
                           Filter: ((t1_5.a % 125) = 0)
(84 rows)

select t1.a,t2.b,t3.c from plt1_l t1 cross join plt2_l t2 full outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 cross join uplt2_l t2 full outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 125 = 0 and t2.b % 25 = 0 and t3.a % 125 = 0 order by 1,2,3;
  a  | b |  c   
-----+---+------
   0 | 0 | 0000
 250 | 0 | 0000
 500 | 0 | 0000
(3 rows)

--inner and left outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) left outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t3.c
   Join Filter: ((t1.a = t3.a) AND (t1.b = t3.b) AND ((t1.c)::text = (t3.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1.a, t1.b, t1.c, t2.b, t2.a, t2.c
         Merge Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND (t1.b = t2.a) AND ((ltrim((t1.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))))
         ->  Sort
               Output: t1.a, t1.b, t1.c, (ltrim((t1.c)::text, 'A'::text))
               Sort Key: t1.a, t1.c, t1.b, (ltrim((t1.c)::text, 'A'::text))
               ->  Result
                     Output: t1.a, t1.b, t1.c, ltrim((t1.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, t2.a, (ltrim((t2.c)::text, 'A'::text))
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
               Output: t3.c, t3.b, t3.a
               Filter: ((t3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
               Output: t3_1.c, t3_1.b, t3_1.a
               Filter: ((t3_1.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
               Output: t3_2.c, t3_2.b, t3_2.a
               Filter: ((t3_2.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
               Output: t3_3.c, t3_3.b, t3_3.a
               Filter: ((t3_3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
               Output: t3_4.c, t3_4.b, t3_4.a
               Filter: ((t3_4.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
               Output: t3_5.c, t3_5.b, t3_5.a
               Filter: ((t3_5.a % 25) = 0)
(73 rows)

select t1.a,t2.b,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) left outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) left outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--inner and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t3.c
   Join Filter: ((t1.a = t3.a) AND (t1.b = t3.b) AND ((t1.c)::text = (t3.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1.a, t1.b, t1.c, t2.b, t2.a, t2.c
         Merge Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND (t1.b = t2.a) AND ((ltrim((t1.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))))
         ->  Sort
               Output: t1.a, t1.b, t1.c, (ltrim((t1.c)::text, 'A'::text))
               Sort Key: t1.a, t1.c, t1.b, (ltrim((t1.c)::text, 'A'::text))
               ->  Result
                     Output: t1.a, t1.b, t1.c, ltrim((t1.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, t2.a, (ltrim((t2.c)::text, 'A'::text))
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
               Output: t3.c, t3.b, t3.a
               Filter: ((t3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
               Output: t3_1.c, t3_1.b, t3_1.a
               Filter: ((t3_1.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
               Output: t3_2.c, t3_2.b, t3_2.a
               Filter: ((t3_2.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
               Output: t3_3.c, t3_3.b, t3_3.a
               Filter: ((t3_3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
               Output: t3_4.c, t3_4.b, t3_4.a
               Filter: ((t3_4.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
               Output: t3_5.c, t3_5.b, t3_5.a
               Filter: ((t3_5.a % 25) = 0)
(73 rows)

select t1.a,t2.b,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--inner and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t3.c
   Join Filter: ((t1.a = t3.a) AND (t1.b = t3.b) AND ((t1.c)::text = (t3.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1.a, t1.b, t1.c, t2.b, t2.a, t2.c
         Merge Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND (t1.b = t2.a) AND ((ltrim((t1.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))))
         ->  Sort
               Output: t1.a, t1.b, t1.c, (ltrim((t1.c)::text, 'A'::text))
               Sort Key: t1.a, t1.c, t1.b, (ltrim((t1.c)::text, 'A'::text))
               ->  Result
                     Output: t1.a, t1.b, t1.c, ltrim((t1.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, t2.a, (ltrim((t2.c)::text, 'A'::text))
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
               Output: t3.c, t3.b, t3.a
               Filter: ((t3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
               Output: t3_1.c, t3_1.b, t3_1.a
               Filter: ((t3_1.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
               Output: t3_2.c, t3_2.b, t3_2.a
               Filter: ((t3_2.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
               Output: t3_3.c, t3_3.b, t3_3.a
               Filter: ((t3_3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
               Output: t3_4.c, t3_4.b, t3_4.a
               Filter: ((t3_4.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
               Output: t3_5.c, t3_5.b, t3_5.a
               Filter: ((t3_5.a % 25) = 0)
(73 rows)

select t1.a,t2.b,t3.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--left outer and right outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 left outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t3.c
   Join Filter: ((t1.a = t3.a) AND (t1.b = t3.b) AND ((t1.c)::text = (t3.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1.a, t1.b, t1.c, t2.b, t2.a, t2.c
         Merge Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND (t1.b = t2.a) AND ((ltrim((t1.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))))
         ->  Sort
               Output: t1.a, t1.b, t1.c, (ltrim((t1.c)::text, 'A'::text))
               Sort Key: t1.a, t1.c, t1.b, (ltrim((t1.c)::text, 'A'::text))
               ->  Result
                     Output: t1.a, t1.b, t1.c, ltrim((t1.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, t2.a, (ltrim((t2.c)::text, 'A'::text))
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
               Output: t3.c, t3.b, t3.a
               Filter: ((t3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
               Output: t3_1.c, t3_1.b, t3_1.a
               Filter: ((t3_1.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
               Output: t3_2.c, t3_2.b, t3_2.a
               Filter: ((t3_2.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
               Output: t3_3.c, t3_3.b, t3_3.a
               Filter: ((t3_3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
               Output: t3_4.c, t3_4.b, t3_4.a
               Filter: ((t3_4.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
               Output: t3_5.c, t3_5.b, t3_5.a
               Filter: ((t3_5.a % 25) = 0)
(73 rows)

select t1.a,t2.b,t3.c from plt1_l t1 left outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 left outer join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) right outer join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--left outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 left outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t3.c
   Join Filter: ((t1.a = t3.a) AND (t1.b = t3.b) AND ((t1.c)::text = (t3.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1.a, t1.b, t1.c, t2.b, t2.a, t2.c
         Merge Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND (t1.b = t2.a) AND ((ltrim((t1.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))))
         ->  Sort
               Output: t1.a, t1.b, t1.c, (ltrim((t1.c)::text, 'A'::text))
               Sort Key: t1.a, t1.c, t1.b, (ltrim((t1.c)::text, 'A'::text))
               ->  Result
                     Output: t1.a, t1.b, t1.c, ltrim((t1.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, t2.a, (ltrim((t2.c)::text, 'A'::text))
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
               Output: t3.c, t3.b, t3.a
               Filter: ((t3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
               Output: t3_1.c, t3_1.b, t3_1.a
               Filter: ((t3_1.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
               Output: t3_2.c, t3_2.b, t3_2.a
               Filter: ((t3_2.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
               Output: t3_3.c, t3_3.b, t3_3.a
               Filter: ((t3_3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
               Output: t3_4.c, t3_4.b, t3_4.a
               Filter: ((t3_4.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
               Output: t3_5.c, t3_5.b, t3_5.a
               Filter: ((t3_5.a % 25) = 0)
(73 rows)

select t1.a,t2.b,t3.c from plt1_l t1 left outer join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 left outer join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--right outer and full outer join 
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t2.b,t3.c from plt1_l t1 right join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t3.c
   Join Filter: ((t1.a = t3.a) AND (t1.b = t3.b) AND ((t1.c)::text = (t3.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t3.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1.a, t1.b, t1.c, t2.b, t2.a, t2.c
         Merge Cond: ((t1.a = t2.b) AND ((t1.c)::text = (t2.c)::text) AND (t1.b = t2.a) AND ((ltrim((t1.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))))
         ->  Sort
               Output: t1.a, t1.b, t1.c, (ltrim((t1.c)::text, 'A'::text))
               Sort Key: t1.a, t1.c, t1.b, (ltrim((t1.c)::text, 'A'::text))
               ->  Result
                     Output: t1.a, t1.b, t1.c, ltrim((t1.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, t2.a, (ltrim((t2.c)::text, 'A'::text))
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t3
               Output: t3.c, t3.b, t3.a
               Filter: ((t3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t3_1
               Output: t3_1.c, t3_1.b, t3_1.a
               Filter: ((t3_1.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t3_2
               Output: t3_2.c, t3_2.b, t3_2.a
               Filter: ((t3_2.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t3_3
               Output: t3_3.c, t3_3.b, t3_3.a
               Filter: ((t3_3.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t3_4
               Output: t3_4.c, t3_4.b, t3_4.a
               Filter: ((t3_4.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t3_5
               Output: t3_5.c, t3_5.b, t3_5.a
               Filter: ((t3_5.a % 25) = 0)
(73 rows)

select t1.a,t2.b,t3.c from plt1_l t1 right join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full join plt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.a,t2.b,t3.c from uplt1_l t1 right join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) full join uplt1_l t3 on (t2.a = t3.b AND t2.b = t3.a AND t2.c = t3.c AND ltrim(t2.c,'A') = ltrim(t3.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t3.a % 25 = 0 order by 1,2,3;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
 150 | 150 | 0003
 300 | 300 | 0006
 450 | 450 | 0009
(4 rows)

-- Join with views
--join of two partition table simple views
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1_l_view t1 inner join plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c, plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c
   ->  Hash Join
         Output: plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c, plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
         Hash Cond: ((plt1_l_p1_p1.a = plt2_l_p1_p1.b) AND (plt1_l_p1_p1.b = plt2_l_p1_p1.a) AND ((plt1_l_p1_p1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((plt1_l_p1_p1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1
                     Output: plt1_l_p1_p1.a, plt1_l_p1_p1.b, plt1_l_p1_p1.c
                     Filter: ((plt1_l_p1_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2
                     Output: plt1_l_p1_p2.a, plt1_l_p1_p2.b, plt1_l_p1_p2.c
                     Filter: ((plt1_l_p1_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1
                     Output: plt1_l_p2_p1.a, plt1_l_p2_p1.b, plt1_l_p2_p1.c
                     Filter: ((plt1_l_p2_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2
                     Output: plt1_l_p2_p2.a, plt1_l_p2_p2.b, plt1_l_p2_p2.c
                     Filter: ((plt1_l_p2_p2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1
                     Output: plt1_l_p3_p1.a, plt1_l_p3_p1.b, plt1_l_p3_p1.c
                     Filter: ((plt1_l_p3_p1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2
                     Output: plt1_l_p3_p2.a, plt1_l_p3_p2.b, plt1_l_p3_p2.c
                     Filter: ((plt1_l_p3_p2.a % 25) = 0)
         ->  Hash
               Output: plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                           Output: plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
                           Filter: ((plt2_l_p1_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                           Output: plt2_l_p1_p2.a, plt2_l_p1_p2.b, plt2_l_p1_p2.c
                           Filter: ((plt2_l_p1_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                           Output: plt2_l_p2_p1.a, plt2_l_p2_p1.b, plt2_l_p2_p1.c
                           Filter: ((plt2_l_p2_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                           Output: plt2_l_p2_p2.a, plt2_l_p2_p2.b, plt2_l_p2_p2.c
                           Filter: ((plt2_l_p2_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                           Output: plt2_l_p3_p1.a, plt2_l_p3_p1.b, plt2_l_p3_p1.c
                           Filter: ((plt2_l_p3_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                           Output: plt2_l_p3_p2.a, plt2_l_p3_p2.b, plt2_l_p3_p2.c
                           Filter: ((plt2_l_p3_p2.b % 25) = 0)
(46 rows)

select  t1.*,t2.* from plt1_l_view t1 inner join plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
 150 | 150 | 0003 | 150 | 150 | 0003
 300 | 300 | 0006 | 300 | 300 | 0006
 450 | 450 | 0009 | 450 | 450 | 0009
(4 rows)

--join of one partition table and one partition table simple view
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1_l t1 inner join plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
   Sort Key: t1.a, t1.b, t1.c
   ->  Hash Join
         Output: t1.a, t1.b, t1.c, plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
         Hash Cond: ((t1.a = plt2_l_p1_p1.b) AND (t1.b = plt2_l_p1_p1.a) AND ((t1.c)::text = (plt2_l_p1_p1.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((plt2_l_p1_p1.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.a, t1_3.b, t1_3.c
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.a, t1_4.b, t1_4.c
                     Filter: ((t1_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.a, t1_5.b, t1_5.c
                     Filter: ((t1_5.a % 25) = 0)
         ->  Hash
               Output: plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1
                           Output: plt2_l_p1_p1.a, plt2_l_p1_p1.b, plt2_l_p1_p1.c
                           Filter: ((plt2_l_p1_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2
                           Output: plt2_l_p1_p2.a, plt2_l_p1_p2.b, plt2_l_p1_p2.c
                           Filter: ((plt2_l_p1_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1
                           Output: plt2_l_p2_p1.a, plt2_l_p2_p1.b, plt2_l_p2_p1.c
                           Filter: ((plt2_l_p2_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2
                           Output: plt2_l_p2_p2.a, plt2_l_p2_p2.b, plt2_l_p2_p2.c
                           Filter: ((plt2_l_p2_p2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1
                           Output: plt2_l_p3_p1.a, plt2_l_p3_p1.b, plt2_l_p3_p1.c
                           Filter: ((plt2_l_p3_p1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2
                           Output: plt2_l_p3_p2.a, plt2_l_p3_p2.b, plt2_l_p3_p2.c
                           Filter: ((plt2_l_p3_p2.b % 25) = 0)
(46 rows)

select  t1.*,t2.* from plt1_l t1 inner join plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
 150 | 150 | 0003 | 150 | 150 | 0003
 300 | 300 | 0006 | 300 | 300 | 0006
 450 | 450 | 0009 | 450 | 450 | 0009
(4 rows)

--join of two partition table complex views
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1_l_plt2_l_view t1 inner join plt1_l_plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t1.b % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t2.b, t1.c, t1_6.a, t2_6.b, t1_6.c
   Join Filter: ((t1.a = t1_6.a) AND ((t1.c)::text = (t1_6.c)::text) AND (t2_6.a = t1_6.b) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t1_6.c)::text, 'A'::text)))
   ->  Nested Loop
         Output: t1.a, t1.c, t2.b, t2.c, t2_6.b, t2_6.a, t2_6.c
         Join Filter: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Merge Join
               Output: t2.b, t2.a, t2.c, t2_6.b, t2_6.a, t2_6.c
               Merge Cond: ((t2.b = t2_6.b) AND ((t2.c)::text = (t2_6.c)::text) AND ((ltrim((t2.c)::text, 'A'::text)) = (ltrim((t2_6.c)::text, 'A'::text))))
               ->  Sort
                     Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
                     Sort Key: t2.b, t2.c, (ltrim((t2.c)::text, 'A'::text))
                     ->  Result
                           Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                       Output: t2.b, t2.a, t2.c
                                       Filter: ((t2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                       Output: t2_5.b, t2_5.a, t2_5.c
                                       Filter: ((t2_5.b % 25) = 0)
               ->  Sort
                     Output: t2_6.b, t2_6.a, t2_6.c, (ltrim((t2_6.c)::text, 'A'::text))
                     Sort Key: t2_6.b, t2_6.c, (ltrim((t2_6.c)::text, 'A'::text))
                     ->  Result
                           Output: t2_6.b, t2_6.a, t2_6.c, ltrim((t2_6.c)::text, 'A'::text)
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2_6
                                       Output: t2_6.b, t2_6.a, t2_6.c
                                       Filter: ((t2_6.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_7
                                       Output: t2_7.b, t2_7.a, t2_7.c
                                       Filter: ((t2_7.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_8
                                       Output: t2_8.b, t2_8.a, t2_8.c
                                       Filter: ((t2_8.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_9
                                       Output: t2_9.b, t2_9.a, t2_9.c
                                       Filter: ((t2_9.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_10
                                       Output: t2_10.b, t2_10.a, t2_10.c
                                       Filter: ((t2_10.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_11
                                       Output: t2_11.b, t2_11.a, t2_11.c
                                       Filter: ((t2_11.b % 25) = 0)
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.a, t1.c, t1.b
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.a, t1_1.c, t1_1.b
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.a, t1_2.c, t1_2.b
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.a, t1_3.c, t1_3.b
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.a, t1_4.c, t1_4.b
                     Filter: ((t1_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.a, t1_5.c, t1_5.b
                     Filter: ((t1_5.a % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1_6
               Output: t1_6.a, t1_6.c, t1_6.b
               Filter: ((t1_6.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_7
               Output: t1_7.a, t1_7.c, t1_7.b
               Filter: ((t1_7.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_8
               Output: t1_8.a, t1_8.c, t1_8.b
               Filter: ((t1_8.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_9
               Output: t1_9.a, t1_9.c, t1_9.b
               Filter: ((t1_9.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_10
               Output: t1_10.a, t1_10.c, t1_10.b
               Filter: ((t1_10.a % 25) = 0)
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_11
               Output: t1_11.a, t1_11.c, t1_11.b
               Filter: ((t1_11.a % 25) = 0)
(95 rows)

select  t1.*,t2.* from plt1_l_plt2_l_view t1 inner join plt1_l_plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t1.b % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
 150 | 150 | 0003 | 150 | 150 | 0003
 300 | 300 | 0006 | 300 | 300 | 0006
 450 | 450 | 0009 | 450 | 450 | 0009
(4 rows)

--join of one partition table and other partition table complex view
EXPLAIN (VERBOSE, COSTS OFF)
select  t1.*,t2.* from plt1_l t1 inner join plt1_l_plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop
   Output: t1.a, t1.b, t1.c, t1_6.a, t2.b, t1_6.c
   Join Filter: ((t1_6.a = t1.a) AND ((t1_6.c)::text = (t1.c)::text) AND (ltrim((t1_6.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
   ->  Merge Join
         Output: t1_6.a, t1_6.c, t2.b, t2.c
         Merge Cond: ((t1_6.a = t2.b) AND ((t1_6.c)::text = (t2.c)::text) AND ((ltrim((t1_6.c)::text, 'A'::text)) = (ltrim((t2.c)::text, 'A'::text))) AND (t1_6.b = t2.a))
         ->  Sort
               Output: t1_6.a, t1_6.c, t1_6.b, (ltrim((t1_6.c)::text, 'A'::text))
               Sort Key: t1_6.a, t1_6.c, (ltrim((t1_6.c)::text, 'A'::text)), t1_6.b
               ->  Result
                     Output: t1_6.a, t1_6.c, t1_6.b, ltrim((t1_6.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1_6
                                 Output: t1_6.a, t1_6.c, t1_6.b
                                 Filter: ((t1_6.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_7
                                 Output: t1_7.a, t1_7.c, t1_7.b
                                 Filter: ((t1_7.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_8
                                 Output: t1_8.a, t1_8.c, t1_8.b
                                 Filter: ((t1_8.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_9
                                 Output: t1_9.a, t1_9.c, t1_9.b
                                 Filter: ((t1_9.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_10
                                 Output: t1_10.a, t1_10.c, t1_10.b
                                 Filter: ((t1_10.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_11
                                 Output: t1_11.a, t1_11.c, t1_11.b
                                 Filter: ((t1_11.a % 25) = 0)
         ->  Sort
               Output: t2.b, t2.a, t2.c, (ltrim((t2.c)::text, 'A'::text))
               Sort Key: t2.b, t2.c, (ltrim((t2.c)::text, 'A'::text)), t2.a
               ->  Result
                     Output: t2.b, t2.a, t2.c, ltrim((t2.c)::text, 'A'::text)
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.b, t2.a, t2.c
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.b, t2_1.a, t2_1.c
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.b, t2_2.a, t2_2.c
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.b, t2_3.a, t2_3.c
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.b, t2_4.a, t2_4.c
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.b, t2_5.a, t2_5.c
                                 Filter: ((t2_5.b % 25) = 0)
   ->  Append
         ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
               Output: t1.a, t1.b, t1.c
               Filter: ((t1.a = t1.b) AND ((t1.a % 25) = 0))
         ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
               Output: t1_1.a, t1_1.b, t1_1.c
               Filter: ((t1_1.a = t1_1.b) AND ((t1_1.a % 25) = 0))
         ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
               Output: t1_2.a, t1_2.b, t1_2.c
               Filter: ((t1_2.a = t1_2.b) AND ((t1_2.a % 25) = 0))
         ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
               Output: t1_3.a, t1_3.b, t1_3.c
               Filter: ((t1_3.a = t1_3.b) AND ((t1_3.a % 25) = 0))
         ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
               Output: t1_4.a, t1_4.b, t1_4.c
               Filter: ((t1_4.a = t1_4.b) AND ((t1_4.a % 25) = 0))
         ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
               Output: t1_5.a, t1_5.b, t1_5.c
               Filter: ((t1_5.a = t1_5.b) AND ((t1_5.a % 25) = 0))
(73 rows)

select  t1.*,t2.* from plt1_l t1 inner join plt1_l_plt2_l_view t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 and t2.a % 25 = 0 order by 1,2,3,4,5,6;
  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000
 150 | 150 | 0003 | 150 | 150 | 0003
 300 | 300 | 0006 | 300 | 300 | 0006
 450 | 450 | 0009 | 450 | 450 | 0009
(4 rows)

-- join with expressions and system functions
-- join with like operator
EXPLAIN (VERBOSE, COSTS OFF)
select t1.a,t1.c,t1.b,t2.b from plt1_l t1 inner join plt2_l t2 on t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.c like '0%0' order by 1,2;
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t1.b, t2.b
   Sort Key: t1.a, t1.c
   ->  Hash Join
         Output: t1.a, t1.c, t1.b, t2.b
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.a, t2_5.c
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.c)::text ~~ '0%0'::text)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.c)::text ~~ '0%0'::text)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.c)::text ~~ '0%0'::text)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.c)::text ~~ '0%0'::text)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.c)::text ~~ '0%0'::text)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.c)::text ~~ '0%0'::text)
(40 rows)

select t1.a,t1.c,t1.b,t2.b from plt1_l t1 inner join plt2_l t2 on t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.c like '0%0' order by 1,2;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
   6 | 0000 |   6 |   6
  12 | 0000 |  12 |  12
  18 | 0000 |  18 |  18
  24 | 0000 |  24 |  24
  30 | 0000 |  30 |  30
  36 | 0000 |  36 |  36
  42 | 0000 |  42 |  42
  48 | 0000 |  48 |  48
 504 | 0010 | 504 | 504
 510 | 0010 | 510 | 510
 516 | 0010 | 516 | 516
 522 | 0010 | 522 | 522
 528 | 0010 | 528 | 528
 534 | 0010 | 534 | 534
 540 | 0010 | 540 | 540
 546 | 0010 | 546 | 546
(17 rows)

--TODO - this query need to remove once testing done.
select t1.a,t1.c,t1.b,t2.b from uplt1_l t1 inner join uplt2_l t2 on t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.c like '0%0' order by 1,2;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
   6 | 0000 |   6 |   6
  12 | 0000 |  12 |  12
  18 | 0000 |  18 |  18
  24 | 0000 |  24 |  24
  30 | 0000 |  30 |  30
  36 | 0000 |  36 |  36
  42 | 0000 |  42 |  42
  48 | 0000 |  48 |  48
 504 | 0010 | 504 | 504
 510 | 0010 | 510 | 510
 516 | 0010 | 516 | 516
 522 | 0010 | 522 | 522
 528 | 0010 | 528 | 528
 534 | 0010 | 534 | 534
 540 | 0010 | 540 | 540
 546 | 0010 | 546 | 546
(17 rows)

-- join with rank
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4;
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t2.b, (rank() OVER (?))
   Sort Key: t1.a, t1.b, (rank() OVER (?))
   ->  WindowAgg
         Output: t1.a, t1.b, t2.b, rank() OVER (?)
         ->  Sort
               Output: t2.b, t1.a, t1.b
               Sort Key: t2.b DESC
               ->  Hash Join
                     Output: t2.b, t1.a, t1.b
                     Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                       Output: t2.b, t2.a, t2.c
                                       Filter: ((t2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                       Output: t2_5.b, t2_5.a, t2_5.c
                                       Filter: ((t2_5.b % 25) = 0)
(51 rows)

SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    4
 150 | 150 | 150 |    3
 300 | 300 | 300 |    2
 450 | 450 | 450 |    1
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a, t1.b, t2.b,rank() OVER (ORDER BY t2.b DESC) FROM uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 order by 1,2,3,4;
  a  |  b  |  b  | rank 
-----+-----+-----+------
   0 |   0 |   0 |    4
 150 | 150 | 150 |    3
 300 | 300 | 300 |    2
 450 | 450 | 450 |    1
(4 rows)

-- join with array expression
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a,t1.c,t1.b,t2.b FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3,4;
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t1.b, t2.b
   Sort Key: t1.a, t1.c, t1.b
   ->  Hash Join
         Output: t1.a, t1.c, t1.b, t2.b
         Hash Cond: ((t2.b = t1.a) AND (t2.a = t1.b) AND ((t2.c)::text = (t1.c)::text) AND (ltrim((t2.c)::text, 'A'::text) = ltrim((t1.c)::text, 'A'::text)))
         Join Filter: (t1.a = ANY (ARRAY[t2.b, 1, (t2.b + 0)]))
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                     Output: t2.b, t2.a, t2.c
               ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                     Output: t2_1.b, t2_1.a, t2_1.c
               ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                     Output: t2_2.b, t2_2.a, t2_2.c
               ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                     Output: t2_3.b, t2_3.a, t2_3.c
               ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                     Output: t2_4.b, t2_4.a, t2_4.c
               ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                     Output: t2_5.b, t2_5.a, t2_5.c
         ->  Hash
               Output: t1.a, t1.c, t1.b
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.a, t1.c, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.a, t1_3.c, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.a, t1_4.c, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.a, t1_5.c, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
(41 rows)

SELECT t1.a,t1.c,t1.b,t2.b FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
 150 | 0003 | 150 | 150
 300 | 0006 | 300 | 300
 450 | 0009 | 450 | 450
(4 rows)

--TODO - this query need to remove once testing done.
SELECT t1.a,t1.c,t1.b,t2.b FROM uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) WHERE t1.a = ANY(ARRAY[t2.b, 1, t2.b + 0]) and t1.a % 25 = 0 order by 1,2,3,4;
  a  |  c   |  b  |  b  
-----+------+-----+-----
   0 | 0000 |   0 |   0
 150 | 0003 | 150 | 150
 300 | 0006 | 300 | 300
 450 | 0009 | 450 | 450
(4 rows)

-- join with group by and having
EXPLAIN (VERBOSE, COSTS OFF)
select t2.b,sum(t1.a) from plt1_l t1 inner join plt2_l t2 on(t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 2;
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t2.b, (sum(t1.a))
   Sort Key: (sum(t1.a))
   ->  GroupAggregate
         Output: t2.b, sum(t1.a)
         Group Key: t2.b
         Filter: (sum(t1.a) > 2)
         ->  Sort
               Output: t2.b, t1.a
               Sort Key: t2.b
               ->  Hash Join
                     Output: t2.b, t1.a
                     Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                                 Output: t1_3.a, t1_3.b, t1_3.c
                                 Filter: ((t1_3.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                                 Output: t1_4.a, t1_4.b, t1_4.c
                                 Filter: ((t1_4.a % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                                 Output: t1_5.a, t1_5.b, t1_5.c
                                 Filter: ((t1_5.a % 25) = 0)
                     ->  Hash
                           Output: t2.b, t2.a, t2.c
                           ->  Append
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                       Output: t2.b, t2.a, t2.c
                                       Filter: ((t2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                       Output: t2_1.b, t2_1.a, t2_1.c
                                       Filter: ((t2_1.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                       Output: t2_2.b, t2_2.a, t2_2.c
                                       Filter: ((t2_2.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                       Output: t2_3.b, t2_3.a, t2_3.c
                                       Filter: ((t2_3.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                       Output: t2_4.b, t2_4.a, t2_4.c
                                       Filter: ((t2_4.b % 25) = 0)
                                 ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                       Output: t2_5.b, t2_5.a, t2_5.c
                                       Filter: ((t2_5.b % 25) = 0)
(53 rows)

select t2.b,sum(t1.a) from plt1_l t1 inner join plt2_l t2 on(t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 2;
  b  | sum 
-----+-----
 150 | 150
 300 | 300
 450 | 450
(3 rows)

--TODO - this query need to remove once testing done.
select t2.b,sum(t1.a) from uplt1_l t1 inner join uplt2_l t2 on(t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 group by t2.b having sum(t1.a) > 2 order by 2;
  b  | sum 
-----+-----
 150 | 150
 300 | 300
 450 | 450
(3 rows)

--join with prepare statement 
PREPARE ij(int) AS select t1.c,t2.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A') and t1.a % $1 = 0 and t2.b % $1 = 0) ORDER BY 1,2;
EXPLAIN (VERBOSE, COSTS OFF) EXECUTE ij(25);
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.c, t2.c
   Sort Key: t1.c
   ->  Hash Join
         Output: t1.c, t2.c
         Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                     Output: t1.c, t1.a, t1.b
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                     Output: t1_1.c, t1_1.a, t1_1.b
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                     Output: t1_2.c, t1_2.a, t1_2.b
                     Filter: ((t1_2.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                     Output: t1_3.c, t1_3.a, t1_3.b
                     Filter: ((t1_3.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                     Output: t1_4.c, t1_4.a, t1_4.b
                     Filter: ((t1_4.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                     Output: t1_5.c, t1_5.a, t1_5.b
                     Filter: ((t1_5.a % 25) = 0)
         ->  Hash
               Output: t2.c, t2.b, t2.a
               ->  Append
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                           Output: t2.c, t2.b, t2.a
                           Filter: ((t2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                           Output: t2_1.c, t2_1.b, t2_1.a
                           Filter: ((t2_1.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                           Output: t2_2.c, t2_2.b, t2_2.a
                           Filter: ((t2_2.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                           Output: t2_3.c, t2_3.b, t2_3.a
                           Filter: ((t2_3.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                           Output: t2_4.c, t2_4.b, t2_4.a
                           Filter: ((t2_4.b % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                           Output: t2_5.c, t2_5.b, t2_5.a
                           Filter: ((t2_5.b % 25) = 0)
(46 rows)

EXECUTE ij(25);
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0006 | 0006
 0009 | 0009
(4 rows)

DEALLOCATE ij;
--join with for share clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.c,t2.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR SHARE;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 LockRows
   Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Sort
         Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Sort Key: t1.c
         ->  Hash Join
               Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
               Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.c, t1.ctid, t1.tableoid, t1.a, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.c, t1_1.ctid, t1_1.tableoid, t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.c, t1_2.ctid, t1_2.tableoid, t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.c, t1_3.ctid, t1_3.tableoid, t1_3.a, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.c, t1_4.ctid, t1_4.tableoid, t1_4.a, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.c, t1_5.ctid, t1_5.tableoid, t1_5.a, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
               ->  Hash
                     Output: t2.c, t2.ctid, t2.tableoid, t2.b, t2.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.c, t2.ctid, t2.tableoid, t2.b, t2.a
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.c, t2_1.ctid, t2_1.tableoid, t2_1.b, t2_1.a
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.c, t2_2.ctid, t2_2.tableoid, t2_2.b, t2_2.a
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.c, t2_3.ctid, t2_3.tableoid, t2_3.b, t2_3.a
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.c, t2_4.ctid, t2_4.tableoid, t2_4.b, t2_4.a
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.c, t2_5.ctid, t2_5.tableoid, t2_5.b, t2_5.a
                                 Filter: ((t2_5.b % 25) = 0)
(48 rows)

select t1.c,t2.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR SHARE;
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0006 | 0006
 0009 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.c,t2.c from uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR SHARE;
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0006 | 0006
 0009 | 0009
(4 rows)

--join with for update clause
EXPLAIN (VERBOSE, COSTS OFF)
select t1.c,t2.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR UPDATE;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 LockRows
   Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Sort
         Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Sort Key: t1.c
         ->  Hash Join
               Output: t1.c, t2.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
               Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a) AND ((t1.c)::text = (t2.c)::text) AND (ltrim((t1.c)::text, 'A'::text) = ltrim((t2.c)::text, 'A'::text)))
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p1 t1
                           Output: t1.c, t1.ctid, t1.tableoid, t1.a, t1.b
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p1_p2 t1_1
                           Output: t1_1.c, t1_1.ctid, t1_1.tableoid, t1_1.a, t1_1.b
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p1 t1_2
                           Output: t1_2.c, t1_2.ctid, t1_2.tableoid, t1_2.a, t1_2.b
                           Filter: ((t1_2.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p2_p2 t1_3
                           Output: t1_3.c, t1_3.ctid, t1_3.tableoid, t1_3.a, t1_3.b
                           Filter: ((t1_3.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p1 t1_4
                           Output: t1_4.c, t1_4.ctid, t1_4.tableoid, t1_4.a, t1_4.b
                           Filter: ((t1_4.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.plt1_l_p3_p2 t1_5
                           Output: t1_5.c, t1_5.ctid, t1_5.tableoid, t1_5.a, t1_5.b
                           Filter: ((t1_5.a % 25) = 0)
               ->  Hash
                     Output: t2.c, t2.ctid, t2.tableoid, t2.b, t2.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p1 t2
                                 Output: t2.c, t2.ctid, t2.tableoid, t2.b, t2.a
                                 Filter: ((t2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p1_p2 t2_1
                                 Output: t2_1.c, t2_1.ctid, t2_1.tableoid, t2_1.b, t2_1.a
                                 Filter: ((t2_1.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p1 t2_2
                                 Output: t2_2.c, t2_2.ctid, t2_2.tableoid, t2_2.b, t2_2.a
                                 Filter: ((t2_2.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p2_p2 t2_3
                                 Output: t2_3.c, t2_3.ctid, t2_3.tableoid, t2_3.b, t2_3.a
                                 Filter: ((t2_3.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p1 t2_4
                                 Output: t2_4.c, t2_4.ctid, t2_4.tableoid, t2_4.b, t2_4.a
                                 Filter: ((t2_4.b % 25) = 0)
                           ->  Seq Scan on pwj_extra.plt2_l_p3_p2 t2_5
                                 Output: t2_5.c, t2_5.ctid, t2_5.tableoid, t2_5.b, t2_5.a
                                 Filter: ((t2_5.b % 25) = 0)
(48 rows)

select t1.c,t2.c from plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR UPDATE;
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0006 | 0006
 0009 | 0009
(4 rows)

--TODO - this query need to remove once testing done.
select t1.c,t2.c from uplt1_l t1 inner join uplt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2 FOR UPDATE;
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0006 | 0006
 0009 | 0009
(4 rows)

-- join in cursor
BEGIN;
DECLARE ffc CURSOR FOR SELECT t1.c,t2.c FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 ;
FETCH ALL from ffc;
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0009 | 0009
 0006 | 0006
(4 rows)

END;
-- join in function
CREATE FUNCTION fun_fft() RETURNS refcursor AS $$
DECLARE
        ref_cursor REFCURSOR := 'cur_fft';
BEGIN
        OPEN ref_cursor FOR SELECT t1.c,t2.c FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0 ;
        RETURN (ref_cursor);    
END;
$$ LANGUAGE plpgsql;
BEGIN;
SELECT fun_fft();
 fun_fft 
---------
 cur_fft
(1 row)

FETCH ALL from cur_fft; 
  c   |  c   
------+------
 0000 | 0000
 0003 | 0003
 0009 | 0009
 0006 | 0006
(4 rows)

COMMIT;
DROP FUNCTION fun_fft();
-- join in user defined functions
CREATE FUNCTION pwj_range_sum(int,int) RETURNS int AS $$
BEGIN
RETURN $1 + $2;
END
$$ LANGUAGE plpgsql IMMUTABLE;
SELECT t1.c, t2.c, pwj_range_sum(t1.a,t2.b) FROM plt1_l t1 inner join plt2_l t2 on (t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c AND ltrim(t1.c,'A') = ltrim(t2.c,'A')) where t1.a % 25 = 0 and t2.b % 25 = 0  order by 1,2,3;
  c   |  c   | pwj_range_sum 
------+------+---------------
 0000 | 0000 |             0
 0003 | 0003 |           300
 0006 | 0006 |           600
 0009 | 0009 |           900
(4 rows)

DROP FUNCTION pwj_range_sum(int,int) ;
--===============================================================================================================================================================
---issues encountered during testing.
--SERVER CRASH --fixed
EXPLAIN (VERBOSE, COSTS OFF) 
SELECT * FROM plt1 t1 INNER JOIN plt2 t2 ON (t1.c = t2.c) WHERE t1.c = 'P1' AND t1.c  =  'P2';
                  QUERY PLAN                  
----------------------------------------------
 Result
   Output: t1.a, t1.b, t1.c, t2.a, t2.b, t2.c
   One-Time Filter: false
(3 rows)

SELECT * FROM plt1 t1 INNER JOIN plt2 t2 ON (t1.c = t2.c) WHERE t1.c = 'P1' AND t1.c  =  'P2';
 a | b | c | a | b | c 
---+---+---+---+---+---
(0 rows)

--SERVER CRASH --fixed
EXPLAIN (VERBOSE, COSTS OFF) 
SELECT t1.*, t2.*,t3.* FROM prt1 t1 INNER JOIN prt2 t2 ON (t1.a = t2.b) INNER JOIN prt1 t3 ON (t2.a = t3.b) WHERE t1.a % 25 = 0;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Hash Join
   Output: t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c
   Hash Cond: (t3.b = t2.a)
   ->  Append
         ->  Seq Scan on pwj_extra.prt1_p1 t3
               Output: t3.a, t3.b, t3.c
         ->  Seq Scan on pwj_extra.prt1_p2 t3_1
               Output: t3_1.a, t3_1.b, t3_1.c
         ->  Seq Scan on pwj_extra.prt1_p3 t3_2
               Output: t3_2.a, t3_2.b, t3_2.c
   ->  Hash
         Output: t1.a, t1.b, t1.c, t2.a, t2.b, t2.c
         ->  Append
               ->  Hash Join
                     Output: t1.a, t1.b, t1.c, t2.a, t2.b, t2.c
                     Hash Cond: (t2.b = t1.a)
                     ->  Seq Scan on pwj_extra.prt2_p1 t2
                           Output: t2.a, t2.b, t2.c
                     ->  Hash
                           Output: t1.a, t1.b, t1.c
                           ->  Seq Scan on pwj_extra.prt1_p1 t1
                                 Output: t1.a, t1.b, t1.c
                                 Filter: ((t1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t2_1.b, t2_1.c
                     Hash Cond: (t2_1.b = t1_1.a)
                     ->  Seq Scan on pwj_extra.prt2_p2 t2_1
                           Output: t2_1.a, t2_1.b, t2_1.c
                     ->  Hash
                           Output: t1_1.a, t1_1.b, t1_1.c
                           ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a, t1_1.b, t1_1.c
                                 Filter: ((t1_1.a % 25) = 0)
               ->  Hash Join
                     Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t2_2.b, t2_2.c
                     Hash Cond: (t2_2.b = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.a, t2_2.b, t2_2.c
                     ->  Hash
                           Output: t1_2.a, t1_2.b, t1_2.c
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a, t1_2.b, t1_2.c
                                 Filter: ((t1_2.a % 25) = 0)
(43 rows)

SELECT t1.*, t2.*,t3.* FROM prt1 t1 INNER JOIN prt2 t2 ON (t1.a = t2.b) INNER JOIN prt1 t3 ON (t2.a = t3.b) WHERE t1.a % 25 = 0;
  a  |  b  |  c   |  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000 |   0 |   0 | 0000
 150 | 150 | 0150 | 150 | 150 | 0150 | 150 | 150 | 0150
 300 | 300 | 0300 | 300 | 300 | 0300 | 300 | 300 | 0300
 450 | 450 | 0450 | 450 | 450 | 0450 | 450 | 450 | 0450
(4 rows)

--ERROR -- fixed
EXPLAIN (VERBOSE, COSTS OFF) 
select t1.a, count(t2.*) from prt1 t1 left join prt1 t2 on (t1.a = t2.a) group by t1.a;
                         QUERY PLAN                         
------------------------------------------------------------
 HashAggregate
   Output: t1.a, count(((t2.*)::prt1))
   Group Key: t1.a
   ->  Append
         ->  Hash Left Join
               Output: t1.a, ((t2.*)::prt1)
               Hash Cond: (t1.a = t2.a)
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a
               ->  Hash
                     Output: ((t2.*)::prt1), t2.a
                     ->  Seq Scan on pwj_extra.prt1_p1 t2
                           Output: t2.*, t2.a
         ->  Hash Left Join
               Output: t1_1.a, ((t2_1.*)::prt1)
               Hash Cond: (t1_1.a = t2_1.a)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a
               ->  Hash
                     Output: ((t2_1.*)::prt1), t2_1.a
                     ->  Seq Scan on pwj_extra.prt1_p2 t2_1
                           Output: t2_1.*, t2_1.a
         ->  Hash Left Join
               Output: t1_2.a, ((t2_2.*)::prt1)
               Hash Cond: (t1_2.a = t2_2.a)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a
               ->  Hash
                     Output: ((t2_2.*)::prt1), t2_2.a
                     ->  Seq Scan on pwj_extra.prt1_p3 t2_2
                           Output: t2_2.*, t2_2.a
(31 rows)

select t1.a, count(t2.*) from prt1 t1 left join prt1 t2 on (t1.a = t2.a) group by t1.a;
  a  | count 
-----+-------
 144 |     1
 266 |     1
 202 |     1
 216 |     1
 256 |     1
 328 |     1
 212 |     1
 538 |     1
 548 |     1
 300 |     1
 456 |     1
 240 |     1
 128 |     1
  38 |     1
 272 |     1
 130 |     1
 244 |     1
 118 |     1
  88 |     1
 374 |     1
  68 |     1
 494 |     1
 170 |     1
 260 |     1
 184 |     1
  24 |     1
 172 |     1
 158 |     1
 232 |     1
 492 |     1
 490 |     1
 416 |     1
 420 |     1
 100 |     1
 308 |     1
 150 |     1
 436 |     1
 278 |     1
 306 |     1
  78 |     1
 326 |     1
 164 |     1
 448 |     1
 358 |     1
 592 |     1
 546 |     1
 188 |     1
  32 |     1
 440 |     1
 366 |     1
  52 |     1
 584 |     1
 154 |     1
 398 |     1
 108 |     1
 258 |     1
 210 |     1
 576 |     1
 530 |     1
 472 |     1
 476 |     1
 598 |     1
 344 |     1
 396 |     1
  14 |     1
 388 |     1
  96 |     1
 176 |     1
 254 |     1
 112 |     1
 522 |     1
 432 |     1
 298 |     1
 392 |     1
 166 |     1
 482 |     1
 220 |     1
 498 |     1
 340 |     1
 510 |     1
 462 |     1
 570 |     1
 124 |     1
 536 |     1
 152 |     1
 422 |     1
 532 |     1
  60 |     1
 540 |     1
  70 |     1
 566 |     1
 360 |     1
  22 |     1
 572 |     1
 500 |     1
 226 |     1
  86 |     1
 376 |     1
 556 |     1
 372 |     1
 364 |     1
 578 |     1
 562 |     1
 206 |     1
 596 |     1
 404 |     1
 290 |     1
 484 |     1
  58 |     1
 544 |     1
 468 |     1
 568 |     1
 332 |     1
  44 |     1
 348 |     1
 528 |     1
  92 |     1
 222 |     1
 590 |     1
 182 |     1
  56 |     1
  40 |     1
 200 |     1
   4 |     1
 474 |     1
 140 |     1
 304 |     1
 174 |     1
  36 |     1
 368 |     1
 294 |     1
  46 |     1
 322 |     1
 208 |     1
 236 |     1
 148 |     1
 412 |     1
 426 |     1
 320 |     1
 574 |     1
 342 |     1
 400 |     1
 274 |     1
  54 |     1
 444 |     1
  16 |     1
 314 |     1
 190 |     1
 242 |     1
 138 |     1
 410 |     1
 280 |     1
 380 |     1
 480 |     1
 402 |     1
 346 |     1
 564 |     1
 580 |     1
 516 |     1
 234 |     1
 186 |     1
 354 |     1
  72 |     1
   2 |     1
 488 |     1
 588 |     1
 246 |     1
 102 |     1
   6 |     1
 418 |     1
 104 |     1
  74 |     1
 198 |     1
 458 |     1
 582 |     1
  84 |     1
 248 |     1
 394 |     1
 478 |     1
  64 |     1
 350 |     1
 116 |     1
 250 |     1
 466 |     1
 408 |     1
 594 |     1
 424 |     1
  98 |     1
 338 |     1
 192 |     1
 146 |     1
 134 |     1
  18 |     1
  90 |     1
 502 |     1
 450 |     1
 324 |     1
  42 |     1
 428 |     1
  10 |     1
 282 |     1
 296 |     1
  12 |     1
 552 |     1
  34 |     1
 334 |     1
 460 |     1
 524 |     1
 406 |     1
  76 |     1
 288 |     1
 442 |     1
 586 |     1
 512 |     1
   0 |     1
  50 |     1
 504 |     1
 284 |     1
 160 |     1
 224 |     1
 142 |     1
  66 |     1
 352 |     1
 464 |     1
 178 |     1
 378 |     1
 526 |     1
 520 |     1
 508 |     1
 336 |     1
 132 |     1
 316 |     1
 506 |     1
 430 |     1
 252 |     1
 534 |     1
 228 |     1
 194 |     1
 126 |     1
 386 |     1
 302 |     1
 156 |     1
 558 |     1
 554 |     1
 114 |     1
 382 |     1
 434 |     1
 446 |     1
 414 |     1
 230 |     1
 286 |     1
 238 |     1
 218 |     1
 196 |     1
 136 |     1
 168 |     1
 292 |     1
 438 |     1
 560 |     1
  26 |     1
  82 |     1
 330 |     1
 486 |     1
  20 |     1
 390 |     1
 180 |     1
 454 |     1
 310 |     1
 214 |     1
 268 |     1
 518 |     1
 514 |     1
  62 |     1
 122 |     1
 270 |     1
 356 |     1
  30 |     1
 162 |     1
 384 |     1
 362 |     1
 204 |     1
 262 |     1
  94 |     1
  28 |     1
  48 |     1
 550 |     1
 370 |     1
 110 |     1
 276 |     1
 542 |     1
 470 |     1
 496 |     1
 452 |     1
 312 |     1
 318 |     1
  80 |     1
 264 |     1
   8 |     1
 120 |     1
 106 |     1
(300 rows)

--SERVER CRASH --fixed
EXPLAIN (VERBOSE, COSTS OFF) 
SELECT t1.a, t1.b, t2.b, t2.a FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a  AND t1.a < 450 AND t2.b > 250;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Append
   ->  Hash Join
         Output: t1.a, t1.b, t2.b, t2.a
         Hash Cond: ((t1.a = t2.b) AND (t1.b = t2.a))
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_l_p2_p1 t1
                     Output: t1.a, t1.b
                     Filter: (t1.a < 450)
               ->  Seq Scan on pwj_extra.prt1_l_p2_p2 t1_1
                     Output: t1_1.a, t1_1.b
                     Filter: (t1_1.a < 450)
         ->  Hash
               Output: t2.b, t2.a
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p1 t2
                           Output: t2.b, t2.a
                           Filter: (t2.b > 250)
                     ->  Seq Scan on pwj_extra.prt2_l_p2_p2 t2_1
                           Output: t2_1.b, t2_1.a
                           Filter: (t2_1.b > 250)
(20 rows)

SELECT t1.a, t1.b, t2.b, t2.a FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = t2.a  AND t1.a < 450 AND t2.b > 250;
  a  |  b  |  b  |  a  
-----+-----+-----+-----
 252 | 252 | 252 | 252
 258 | 258 | 258 | 258
 264 | 264 | 264 | 264
 270 | 270 | 270 | 270
 276 | 276 | 276 | 276
 282 | 282 | 282 | 282
 288 | 288 | 288 | 288
 294 | 294 | 294 | 294
 300 | 300 | 300 | 300
 306 | 306 | 306 | 306
 312 | 312 | 312 | 312
 318 | 318 | 318 | 318
 324 | 324 | 324 | 324
 330 | 330 | 330 | 330
 336 | 336 | 336 | 336
 342 | 342 | 342 | 342
 348 | 348 | 348 | 348
 354 | 354 | 354 | 354
 360 | 360 | 360 | 360
 366 | 366 | 366 | 366
 372 | 372 | 372 | 372
 378 | 378 | 378 | 378
 384 | 384 | 384 | 384
 390 | 390 | 390 | 390
 396 | 396 | 396 | 396
 402 | 402 | 402 | 402
 408 | 408 | 408 | 408
 414 | 414 | 414 | 414
 420 | 420 | 420 | 420
 426 | 426 | 426 | 426
 432 | 432 | 432 | 432
 438 | 438 | 438 | 438
 444 | 444 | 444 | 444
(33 rows)

--ERROR -- fixed
EXPLAIN (VERBOSE, COSTS OFF) 
SELECT t1.* FROM prt1 t1 INNER JOIN prt1 t2 ON (t1.a = t2.a and t1.b = t2.b) WHERE t1.a % 25 = 0 FOR UPDATE;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 LockRows
   Output: t1.a, t1.b, t1.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
   ->  Hash Join
         Output: t1.a, t1.b, t1.c, t1.ctid, t1.tableoid, t2.ctid, t2.tableoid
         Hash Cond: ((t2.a = t1.a) AND (t2.b = t1.b))
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_p1 t2
                     Output: t2.ctid, t2.tableoid, t2.a, t2.b
               ->  Seq Scan on pwj_extra.prt1_p2 t2_1
                     Output: t2_1.ctid, t2_1.tableoid, t2_1.a, t2_1.b
               ->  Seq Scan on pwj_extra.prt1_p3 t2_2
                     Output: t2_2.ctid, t2_2.tableoid, t2_2.a, t2_2.b
         ->  Hash
               Output: t1.a, t1.b, t1.c, t1.ctid, t1.tableoid
               ->  Append
                     ->  Seq Scan on pwj_extra.prt1_p1 t1
                           Output: t1.a, t1.b, t1.c, t1.ctid, t1.tableoid
                           Filter: ((t1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                           Output: t1_1.a, t1_1.b, t1_1.c, t1_1.ctid, t1_1.tableoid
                           Filter: ((t1_1.a % 25) = 0)
                     ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                           Output: t1_2.a, t1_2.b, t1_2.c, t1_2.ctid, t1_2.tableoid
                           Filter: ((t1_2.a % 25) = 0)
(24 rows)

SELECT t1.* FROM prt1 t1 INNER JOIN prt1 t2 ON (t1.a = t2.a and t1.b = t2.b) WHERE t1.a % 25 = 0 FOR UPDATE;
  a  |  b  |  c   
-----+-----+------
   0 |   0 | 0000
  50 |  50 | 0050
 100 | 100 | 0100
 150 | 150 | 0150
 200 | 200 | 0200
 250 | 250 | 0250
 300 | 300 | 0300
 350 | 350 | 0350
 400 | 400 | 0400
 450 | 450 | 0450
 500 | 500 | 0500
 550 | 550 | 0550
(12 rows)

--SERVER CRASH --fixed
EXPLAIN (VERBOSE, COSTS OFF)
select count(*) from prt1 x where (x.a,x.b) in (select t1.a,t2.b from prt1 t1,prt2 t2 where t1.a=t2.b) 
and (x.c) in (select t3.c from plt1 t3,plt2 t4 where t3.c=t4.c);
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Aggregate
   Output: count(*)
   ->  Nested Loop Semi Join
         ->  Append
               ->  Nested Loop Semi Join
                     Output: x.c
                     ->  Seq Scan on pwj_extra.prt1_p1 x
                           Output: x.a, x.b, x.c
                           Filter: (x.a = x.b)
                     ->  Nested Loop
                           Output: t1.a, t2.b
                           ->  Index Only Scan using iprt1_p1_a on pwj_extra.prt1_p1 t1
                                 Output: t1.a
                                 Index Cond: (t1.a = x.a)
                           ->  Index Only Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2
                                 Output: t2.b
                                 Index Cond: (t2.b = t1.a)
               ->  Nested Loop Semi Join
                     Output: x_1.c
                     ->  Seq Scan on pwj_extra.prt1_p2 x_1
                           Output: x_1.a, x_1.b, x_1.c
                           Filter: (x_1.a = x_1.b)
                     ->  Nested Loop
                           Output: t1_1.a, t2_1.b
                           ->  Index Only Scan using iprt1_p2_a on pwj_extra.prt1_p2 t1_1
                                 Output: t1_1.a
                                 Index Cond: (t1_1.a = x_1.a)
                           ->  Index Only Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_1
                                 Output: t2_1.b
                                 Index Cond: (t2_1.b = t1_1.a)
               ->  Nested Loop Semi Join
                     Output: x_2.c
                     Join Filter: (x_2.a = t1_2.a)
                     ->  Seq Scan on pwj_extra.prt1_p3 x_2
                           Output: x_2.a, x_2.b, x_2.c
                           Filter: (x_2.a = x_2.b)
                     ->  Hash Join
                           Output: t1_2.a, t2_2.b
                           Hash Cond: (t1_2.a = t2_2.b)
                           ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                                 Output: t1_2.a
                           ->  Hash
                                 Output: t2_2.b
                                 ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                                       Output: t2_2.b
         ->  Hash Join
               Output: t3.c, t4.c
               Hash Cond: (t3.c = t4.c)
               ->  Append
                     ->  Seq Scan on pwj_extra.plt1_p1 t3
                           Output: t3.c
                           Filter: ((x.c)::text = t3.c)
                     ->  Seq Scan on pwj_extra.plt1_p2 t3_1
                           Output: t3_1.c
                           Filter: ((x.c)::text = t3_1.c)
                     ->  Seq Scan on pwj_extra.plt1_p3 t3_2
                           Output: t3_2.c
                           Filter: ((x.c)::text = t3_2.c)
               ->  Hash
                     Output: t4.c
                     ->  Append
                           ->  Seq Scan on pwj_extra.plt2_p1 t4
                                 Output: t4.c
                                 Filter: ((x.c)::text = t4.c)
                           ->  Seq Scan on pwj_extra.plt2_p2 t4_1
                                 Output: t4_1.c
                                 Filter: ((x.c)::text = t4_1.c)
                           ->  Seq Scan on pwj_extra.plt2_p3 t4_2
                                 Output: t4_2.c
                                 Filter: ((x.c)::text = t4_2.c)
(70 rows)

select count(*) from prt1 x where (x.a,x.b) in (select t1.a,t2.b from prt1 t1,prt2 t2 where t1.a=t2.b) 
and (x.c) in (select t3.c from plt1 t3,plt2 t4 where t3.c=t4.c);
 count 
-------
     2
(1 row)

--SERVER CRASH --fixed
EXPLAIN (VERBOSE, COSTS OFF)
select * from prt1 t1 left join (prt2 t2 join prt1 t3 on t2.b = t3.a) on t1.a = t2.b and t1.a = t3.a where t1.a %25 = 0;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Append
   ->  Nested Loop Left Join
         Output: t1.a, t1.b, t1.c, t2.a, t2.b, t2.c, t3.a, t3.b, t3.c
         ->  Seq Scan on pwj_extra.prt1_p1 t1
               Output: t1.a, t1.b, t1.c
               Filter: ((t1.a % 25) = 0)
         ->  Nested Loop
               Output: t2.a, t2.b, t2.c, t3.a, t3.b, t3.c
               Join Filter: (t1.a = t2.b)
               ->  Index Scan using iprt1_p1_a on pwj_extra.prt1_p1 t3
                     Output: t3.a, t3.b, t3.c
                     Index Cond: (t1.a = t3.a)
               ->  Index Scan using iprt2_p1_b on pwj_extra.prt2_p1 t2
                     Output: t2.a, t2.b, t2.c
                     Index Cond: (t2.b = t3.a)
   ->  Nested Loop Left Join
         Output: t1_1.a, t1_1.b, t1_1.c, t2_1.a, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
         ->  Seq Scan on pwj_extra.prt1_p2 t1_1
               Output: t1_1.a, t1_1.b, t1_1.c
               Filter: ((t1_1.a % 25) = 0)
         ->  Nested Loop
               Output: t2_1.a, t2_1.b, t2_1.c, t3_1.a, t3_1.b, t3_1.c
               Join Filter: (t1_1.a = t2_1.b)
               ->  Index Scan using iprt1_p2_a on pwj_extra.prt1_p2 t3_1
                     Output: t3_1.a, t3_1.b, t3_1.c
                     Index Cond: (t1_1.a = t3_1.a)
               ->  Index Scan using iprt2_p2_b on pwj_extra.prt2_p2 t2_1
                     Output: t2_1.a, t2_1.b, t2_1.c
                     Index Cond: (t2_1.b = t3_1.a)
   ->  Hash Right Join
         Output: t1_2.a, t1_2.b, t1_2.c, t2_2.a, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
         Hash Cond: ((t2_2.b = t1_2.a) AND (t3_2.a = t1_2.a))
         ->  Hash Join
               Output: t2_2.a, t2_2.b, t2_2.c, t3_2.a, t3_2.b, t3_2.c
               Hash Cond: (t3_2.a = t2_2.b)
               ->  Seq Scan on pwj_extra.prt1_p3 t3_2
                     Output: t3_2.a, t3_2.b, t3_2.c
               ->  Hash
                     Output: t2_2.a, t2_2.b, t2_2.c
                     ->  Seq Scan on pwj_extra.prt2_p3 t2_2
                           Output: t2_2.a, t2_2.b, t2_2.c
         ->  Hash
               Output: t1_2.a, t1_2.b, t1_2.c
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
(46 rows)

select * from prt1 t1 left join (prt2 t2 join prt1 t3 on t2.b = t3.a) on t1.a = t2.b and t1.a = t3.a where t1.a %25 = 0;
  a  |  b  |  c   |  a  |  b  |  c   |  a  |  b  |  c   
-----+-----+------+-----+-----+------+-----+-----+------
   0 |   0 | 0000 |   0 |   0 | 0000 |   0 |   0 | 0000
  50 |  50 | 0050 |     |     |      |     |     | 
 100 | 100 | 0100 |     |     |      |     |     | 
 150 | 150 | 0150 | 150 | 150 | 0150 | 150 | 150 | 0150
 200 | 200 | 0200 |     |     |      |     |     | 
 250 | 250 | 0250 |     |     |      |     |     | 
 300 | 300 | 0300 | 300 | 300 | 0300 | 300 | 300 | 0300
 350 | 350 | 0350 |     |     |      |     |     | 
 400 | 400 | 0400 |     |     |      |     |     | 
 450 | 450 | 0450 | 450 | 450 | 0450 | 450 | 450 | 0450
 550 | 550 | 0550 |     |     |      |     |     | 
 500 | 500 | 0500 |     |     |      |     |     | 
(12 rows)

--===============================================================================================================================================================
--test cases covering parameterised path plan
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM prt1 t1 LEFT JOIN LATERAL
			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
			  ON t1.b = ss.t2a WHERE t1.a % 25 = 0 ORDER BY t1.a;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
   Sort Key: t1.a
   ->  Nested Loop Left Join
         Output: t1.a, t1.b, t1.c, t2.a, t3.a, (LEAST(t1.a, t2.a, t3.a)), t1.a
         ->  Append
               ->  Seq Scan on pwj_extra.prt1_p1 t1
                     Output: t1.a, t1.b, t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p2 t1_1
                     Output: t1_1.a, t1_1.b, t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.prt1_p3 t1_2
                     Output: t1_2.a, t1_2.b, t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
         ->  Hash Join
               Output: t2.a, t3.a, LEAST(t1.a, t2.a, t3.a)
               Hash Cond: (t3.b = t2.a)
               ->  Append
                     ->  Seq Scan on pwj_extra.prt2_p1 t3
                           Output: t3.a, t3.b
                     ->  Seq Scan on pwj_extra.prt2_p2 t3_1
                           Output: t3_1.a, t3_1.b
                     ->  Seq Scan on pwj_extra.prt2_p3 t3_2
                           Output: t3_2.a, t3_2.b
               ->  Hash
                     Output: t2.a
                     ->  Append
                           ->  Seq Scan on pwj_extra.prt1_p1 t2
                                 Output: t2.a
                                 Filter: (t1.b = t2.a)
                           ->  Seq Scan on pwj_extra.prt1_p2 t2_1
                                 Output: t2_1.a
                                 Filter: (t1.b = t2_1.a)
                           ->  Seq Scan on pwj_extra.prt1_p3 t2_2
                                 Output: t2_2.a
                                 Filter: (t1.b = t2_2.a)
(37 rows)

--===============================================================================================================================================================
--Test cases covering different join methods hashjoin,nestloop & mergejoin
--hash join
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 RIGHT JOIN prt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
                                                 QUERY PLAN                                                 
------------------------------------------------------------------------------------------------------------
 Sort
   Output: t1.a, t1.c, t2.b, t2.c
   Sort Key: t1.a, t2.b
   ->  Result
         Output: t1.a, t1.c, t2.b, t2.c
         ->  Append
               ->  Hash Right Join
                     Output: t2.b, t2.c, t1.a, t1.c
                     Hash Cond: ((((t1.a + t1.b) / 2) = t2.b) AND (t1.a = ((t2.b + t2.a) / 2)))
                     ->  Seq Scan on pwj_extra.prt1_m_p1 t1
                           Output: t1.a, t1.c, t1.b
                     ->  Hash
                           Output: t2.b, t2.c, t2.a
                           ->  Seq Scan on pwj_extra.prt2_m_p1 t2
                                 Output: t2.b, t2.c, t2.a
                                 Filter: ((t2.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_1.b, t2_1.c, t1_1.a, t1_1.c
                     Hash Cond: ((((t1_1.a + t1_1.b) / 2) = t2_1.b) AND (t1_1.a = ((t2_1.b + t2_1.a) / 2)))
                     ->  Seq Scan on pwj_extra.prt1_m_p2 t1_1
                           Output: t1_1.a, t1_1.c, t1_1.b
                     ->  Hash
                           Output: t2_1.b, t2_1.c, t2_1.a
                           ->  Seq Scan on pwj_extra.prt2_m_p2 t2_1
                                 Output: t2_1.b, t2_1.c, t2_1.a
                                 Filter: ((t2_1.b % 25) = 0)
               ->  Hash Right Join
                     Output: t2_2.b, t2_2.c, t1_2.a, t1_2.c
                     Hash Cond: ((((t1_2.a + t1_2.b) / 2) = t2_2.b) AND (t1_2.a = ((t2_2.b + t2_2.a) / 2)))
                     ->  Seq Scan on pwj_extra.prt1_m_p3 t1_2
                           Output: t1_2.a, t1_2.c, t1_2.b
                     ->  Hash
                           Output: t2_2.b, t2_2.c, t2_2.a
                           ->  Seq Scan on pwj_extra.prt2_m_p3 t2_2
                                 Output: t2_2.b, t2_2.c, t2_2.a
                                 Filter: ((t2_2.b % 25) = 0)
(36 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 RIGHT JOIN prt2_m t2 ON t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2 WHERE t2.b % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |   0 | 0000
 150 | 0150 | 150 | 0150
 300 | 0300 | 300 | 0300
 450 | 0450 | 450 | 0450
     |      |  75 | 0075
     |      | 225 | 0225
     |      | 375 | 0375
     |      | 525 | 0525
(8 rows)

--nested loop
EXPLAIN (VERBOSE, COSTS OFF)
SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Sort
   Output: prt1_p1.a, prt1_p1.c, b, c
   Sort Key: prt1_p1.a, b
   ->  Append
         ->  Nested Loop Left Join
               Output: prt1_p1.a, prt1_p1.c, b, c
               Join Filter: (prt1_p1.a = b)
               ->  Seq Scan on pwj_extra.prt1_p1
                     Output: prt1_p1.a, prt1_p1.c
                     Filter: ((prt1_p1.a < 450) AND ((prt1_p1.a % 25) = 0))
               ->  Result
                     Output: b, c
                     One-Time Filter: false
         ->  Hash Right Join
               Output: prt1_p2.a, prt1_p2.c, prt2_p2.b, prt2_p2.c
               Hash Cond: (prt2_p2.b = prt1_p2.a)
               ->  Seq Scan on pwj_extra.prt2_p2
                     Output: prt2_p2.b, prt2_p2.c
                     Filter: (prt2_p2.b > 250)
               ->  Hash
                     Output: prt1_p2.a, prt1_p2.c
                     ->  Seq Scan on pwj_extra.prt1_p2
                           Output: prt1_p2.a, prt1_p2.c
                           Filter: ((prt1_p2.a < 450) AND ((prt1_p2.a % 25) = 0))
(24 rows)

SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.a % 25 = 0 ORDER BY t1.a, t2.b;
  a  |  c   |  b  |  c   
-----+------+-----+------
   0 | 0000 |     | 
  50 | 0050 |     | 
 100 | 0100 |     | 
 150 | 0150 |     | 
 200 | 0200 |     | 
 250 | 0250 |     | 
 300 | 0300 | 300 | 0300
 350 | 0350 |     | 
 400 | 0400 |     | 
(9 rows)

--merge join
PREPARE ij(int) AS select t1.c,t2.c from plt1 t1 inner join plt2 t2 on (t1.c = t2.c and t1.a % $1 = 0 and t2.b % $1 = 0) ORDER BY 1,2;
EXPLAIN (VERBOSE, COSTS OFF) EXECUTE ij(25);
                      QUERY PLAN                      
------------------------------------------------------
 Merge Join
   Output: t1.c, t2.c
   Merge Cond: (t1.c = t2.c)
   ->  Sort
         Output: t1.c
         Sort Key: t1.c
         ->  Append
               ->  Seq Scan on pwj_extra.plt1_p1 t1
                     Output: t1.c
                     Filter: ((t1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p2 t1_1
                     Output: t1_1.c
                     Filter: ((t1_1.a % 25) = 0)
               ->  Seq Scan on pwj_extra.plt1_p3 t1_2
                     Output: t1_2.c
                     Filter: ((t1_2.a % 25) = 0)
   ->  Sort
         Output: t2.c
         Sort Key: t2.c
         ->  Append
               ->  Seq Scan on pwj_extra.plt2_p1 t2
                     Output: t2.c
                     Filter: ((t2.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p2 t2_1
                     Output: t2_1.c
                     Filter: ((t2_1.b % 25) = 0)
               ->  Seq Scan on pwj_extra.plt2_p3 t2_2
                     Output: t2_2.c
                     Filter: ((t2_2.b % 25) = 0)
(29 rows)

EXECUTE ij(25);
  c   |  c   
------+------
 0000 | 0000
 0001 | 0001
 0003 | 0003
 0004 | 0004
 0006 | 0006
 0007 | 0007
 0009 | 0009
 0010 | 0010
(8 rows)

DEALLOCATE ij;
--===============================================================================================================================================================
