Parsed test spec with 5 sessions

starting permutation: reindex sel1 upd2 ins2 del2 end1 end2
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab;
step sel1: SELECT data FROM reind_con_tab WHERE id = 3;
data           

aaaa           
step upd2: UPDATE reind_con_tab SET data = 'bbbb' WHERE id = 3;
step ins2: INSERT INTO reind_con_tab(data) VALUES ('cccc');
step del2: DELETE FROM reind_con_tab WHERE data = 'cccc';
step end1: COMMIT;
step end2: COMMIT;

starting permutation: sel1 reindex upd2 ins2 del2 end1 end2
step sel1: SELECT data FROM reind_con_tab WHERE id = 3;
data           

aaaa           
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab; <waiting ...>
step upd2: UPDATE reind_con_tab SET data = 'bbbb' WHERE id = 3;
step ins2: INSERT INTO reind_con_tab(data) VALUES ('cccc');
step del2: DELETE FROM reind_con_tab WHERE data = 'cccc';
step end1: COMMIT;
step end2: COMMIT;
step reindex: <... completed>

starting permutation: sel1 upd2 reindex ins2 del2 end1 end2
step sel1: SELECT data FROM reind_con_tab WHERE id = 3;
data           

aaaa           
step upd2: UPDATE reind_con_tab SET data = 'bbbb' WHERE id = 3;
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab; <waiting ...>
step ins2: INSERT INTO reind_con_tab(data) VALUES ('cccc');
step del2: DELETE FROM reind_con_tab WHERE data = 'cccc';
step end1: COMMIT;
step end2: COMMIT;
step reindex: <... completed>

starting permutation: sel1 upd2 ins2 reindex del2 end1 end2
step sel1: SELECT data FROM reind_con_tab WHERE id = 3;
data           

aaaa           
step upd2: UPDATE reind_con_tab SET data = 'bbbb' WHERE id = 3;
step ins2: INSERT INTO reind_con_tab(data) VALUES ('cccc');
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab; <waiting ...>
step del2: DELETE FROM reind_con_tab WHERE data = 'cccc';
step end1: COMMIT;
step end2: COMMIT;
step reindex: <... completed>

starting permutation: sel1 upd2 ins2 del2 reindex end1 end2
step sel1: SELECT data FROM reind_con_tab WHERE id = 3;
data           

aaaa           
step upd2: UPDATE reind_con_tab SET data = 'bbbb' WHERE id = 3;
step ins2: INSERT INTO reind_con_tab(data) VALUES ('cccc');
step del2: DELETE FROM reind_con_tab WHERE data = 'cccc';
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab; <waiting ...>
step end1: COMMIT;
step end2: COMMIT;
step reindex: <... completed>

starting permutation: sel1 upd2 ins2 del2 end1 reindex end2
step sel1: SELECT data FROM reind_con_tab WHERE id = 3;
data           

aaaa           
step upd2: UPDATE reind_con_tab SET data = 'bbbb' WHERE id = 3;
step ins2: INSERT INTO reind_con_tab(data) VALUES ('cccc');
step del2: DELETE FROM reind_con_tab WHERE data = 'cccc';
step end1: COMMIT;
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab; <waiting ...>
step end2: COMMIT;
step reindex: <... completed>

starting permutation: check_invalid lock reindex_timeout unlock check_invalid nowarn normal_reindex check_invalid reindex check_invalid
step check_invalid: SELECT i.indisvalid
    FROM pg_class c
    JOIN pg_class t ON t.oid = c.reltoastrelid
    JOIN pg_index i ON i.indrelid = t.oid
    WHERE c.relname = 'reind_con_tab'
    ORDER BY i.indisvalid::text COLLATE "C";
indisvalid     

t              
step lock: BEGIN; SELECT data FROM reind_con_tab WHERE data = 'aa' FOR UPDATE;
data           

aa             
isolationtester: canceling step reindex_timeout after 1 seconds
step reindex_timeout: REINDEX TABLE CONCURRENTLY reind_con_tab;
ERROR:  canceling statement due to user request
step unlock: COMMIT;
step check_invalid: SELECT i.indisvalid
    FROM pg_class c
    JOIN pg_class t ON t.oid = c.reltoastrelid
    JOIN pg_index i ON i.indrelid = t.oid
    WHERE c.relname = 'reind_con_tab'
    ORDER BY i.indisvalid::text COLLATE "C";
indisvalid     

f              
t              
step nowarn: SET client_min_messages = 'ERROR';
step normal_reindex: REINDEX TABLE reind_con_tab;
step check_invalid: SELECT i.indisvalid
    FROM pg_class c
    JOIN pg_class t ON t.oid = c.reltoastrelid
    JOIN pg_index i ON i.indrelid = t.oid
    WHERE c.relname = 'reind_con_tab'
    ORDER BY i.indisvalid::text COLLATE "C";
indisvalid     

f              
t              
step reindex: REINDEX TABLE CONCURRENTLY reind_con_tab;
step check_invalid: SELECT i.indisvalid
    FROM pg_class c
    JOIN pg_class t ON t.oid = c.reltoastrelid
    JOIN pg_index i ON i.indrelid = t.oid
    WHERE c.relname = 'reind_con_tab'
    ORDER BY i.indisvalid::text COLLATE "C";
indisvalid     

f              
t              
