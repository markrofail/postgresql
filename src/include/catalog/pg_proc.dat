# pg_proc.dat
[

# Note: every entry in pg_proc.dat is expected to have a 'descr' comment,
# except for functions that implement pg_operator.dat operators and don't
# have a good reason to be called directly rather than via the operator.
# (If you do expect such a function to be used directly, you should
# duplicate the operator's comment.)  initdb will supply suitable default
# comments for functions referenced by pg_operator.

# Try to follow the style of existing functions' comments.
# Some recommended conventions:

# "I/O" for typinput, typoutput, typreceive, typsend functions
# "I/O typmod" for typmodin, typmodout functions
# "aggregate transition function" for aggtransfn functions, unless
# they are reasonably useful in their own right
# "aggregate final function" for aggfinalfn functions (likewise)
# "convert srctypename to desttypename" for cast functions
# "less-equal-greater" for B-tree comparison functions

# Keep the following ordered by OID so that later changes can be made easier

# OIDS 1 - 99

{ oid => '1242', descr => 'I/O',
  n => 'boolin', is => 't', v => 'i', p => 's', rt => 'bool', at => 'cstring' },
{ oid => '1243', descr => 'I/O',
  n => 'boolout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'bool' },
{ oid => '1244', descr => 'I/O',
  n => 'byteain', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'cstring' },
{ oid => '31', descr => 'I/O',
  n => 'byteaout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'bytea' },
{ oid => '1245', descr => 'I/O',
  n => 'charin', is => 't', v => 'i', p => 's', rt => 'char', at => 'cstring' },
{ oid => '33', descr => 'I/O',
  n => 'charout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'char' },
{ oid => '34', descr => 'I/O',
  n => 'namein', is => 't', v => 'i', p => 's', rt => 'name', at => 'cstring' },
{ oid => '35', descr => 'I/O',
  n => 'nameout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'name' },
{ oid => '38', descr => 'I/O',
  n => 'int2in', is => 't', v => 'i', p => 's', rt => 'int2', at => 'cstring' },
{ oid => '39', descr => 'I/O',
  n => 'int2out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int2' },
{ oid => '40', descr => 'I/O',
  n => 'int2vectorin', is => 't', v => 'i', p => 's', rt => 'int2vector', at => 'cstring' },
{ oid => '41', descr => 'I/O',
  n => 'int2vectorout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int2vector' },
{ oid => '42', descr => 'I/O',
  n => 'int4in', is => 't', v => 'i', p => 's', rt => 'int4', at => 'cstring' },
{ oid => '43', descr => 'I/O',
  n => 'int4out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '44', descr => 'I/O',
  n => 'regprocin', is => 't', v => 's', p => 's', rt => 'regproc', at => 'cstring' },
{ oid => '45', descr => 'I/O',
  n => 'regprocout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regproc' },
{ oid => '3494', descr => 'convert proname to regproc',
  n => 'to_regproc', is => 't', v => 's', p => 's', rt => 'regproc', at => 'text' },
{ oid => '3479', descr => 'convert proname to regprocedure',
  n => 'to_regprocedure', is => 't', v => 's', p => 's', rt => 'regprocedure', at => 'text' },
{ oid => '46', descr => 'I/O',
  n => 'textin', is => 't', v => 'i', p => 's', rt => 'text', at => 'cstring' },
{ oid => '47', descr => 'I/O',
  n => 'textout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'text' },
{ oid => '48', descr => 'I/O',
  n => 'tidin', is => 't', v => 'i', p => 's', rt => 'tid', at => 'cstring' },
{ oid => '49', descr => 'I/O',
  n => 'tidout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'tid' },
{ oid => '50', descr => 'I/O',
  n => 'xidin', is => 't', v => 'i', p => 's', rt => 'xid', at => 'cstring' },
{ oid => '51', descr => 'I/O',
  n => 'xidout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'xid' },
{ oid => '52', descr => 'I/O',
  n => 'cidin', is => 't', v => 'i', p => 's', rt => 'cid', at => 'cstring' },
{ oid => '53', descr => 'I/O',
  n => 'cidout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'cid' },
{ oid => '54', descr => 'I/O',
  n => 'oidvectorin', is => 't', v => 'i', p => 's', rt => 'oidvector', at => 'cstring' },
{ oid => '55', descr => 'I/O',
  n => 'oidvectorout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'oidvector' },
{ oid => '56',
  n => 'boollt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '57',
  n => 'boolgt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '60',
  n => 'booleq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '61',
  n => 'chareq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'char char' },
{ oid => '62',
  n => 'nameeq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name name' },
{ oid => '63',
  n => 'int2eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int2' },
{ oid => '64',
  n => 'int2lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int2' },
{ oid => '65',
  n => 'int4eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int4' },
{ oid => '66',
  n => 'int4lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int4' },
{ oid => '67',
  n => 'texteq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '68',
  n => 'xideq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'xid xid' },
{ oid => '3308',
  n => 'xidneq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'xid xid' },
{ oid => '69',
  n => 'cideq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'cid cid' },
{ oid => '70',
  n => 'charne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'char char' },
{ oid => '1246',
  n => 'charlt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'char char' },
{ oid => '72',
  n => 'charle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'char char' },
{ oid => '73',
  n => 'chargt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'char char' },
{ oid => '74',
  n => 'charge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'char char' },
{ oid => '77', descr => 'convert char to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'char', s => 'chartoi4' },
{ oid => '78', descr => 'convert int4 to char',
  n => 'char', is => 't', v => 'i', p => 's', rt => 'char', at => 'int4', s => 'i4tochar' },

{ oid => '79',
  n => 'nameregexeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },
{ oid => '1252',
  n => 'nameregexne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },
{ oid => '1254',
  n => 'textregexeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '1256',
  n => 'textregexne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '1257', descr => 'length',
  n => 'textlen', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text' },
{ oid => '1258',
  n => 'textcat', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },

{ oid => '84',
  n => 'boolne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '89', descr => 'PostgreSQL version string',
  n => 'version', is => 't', v => 's', p => 's', rt => 'text', at => '', s => 'pgsql_version' },

{ oid => '86', descr => 'I/O',
  n => 'pg_ddl_command_in', is => 't', v => 'i', p => 's', rt => 'pg_ddl_command', at => 'cstring' },
{ oid => '87', descr => 'I/O',
  n => 'pg_ddl_command_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'pg_ddl_command' },
{ oid => '88', descr => 'I/O',
  n => 'pg_ddl_command_recv', is => 't', v => 'i', p => 's', rt => 'pg_ddl_command', at => 'internal' },
{ oid => '90', descr => 'I/O',
  n => 'pg_ddl_command_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'pg_ddl_command' },

# OIDS 100 - 199

{ oid => '101', descr => 'restriction selectivity of = and related operators',
  n => 'eqsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '102', descr => 'restriction selectivity of <> and related operators',
  n => 'neqsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '103', descr => 'restriction selectivity of < and related operators on scalar datatypes',
  n => 'scalarltsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '104', descr => 'restriction selectivity of > and related operators on scalar datatypes',
  n => 'scalargtsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '105', descr => 'join selectivity of = and related operators',
  n => 'eqjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '106', descr => 'join selectivity of <> and related operators',
  n => 'neqjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '107', descr => 'join selectivity of < and related operators on scalar datatypes',
  n => 'scalarltjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '108', descr => 'join selectivity of > and related operators on scalar datatypes',
  n => 'scalargtjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },

{ oid => '336', descr => 'restriction selectivity of <= and related operators on scalar datatypes',
  n => 'scalarlesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '337', descr => 'restriction selectivity of >= and related operators on scalar datatypes',
  n => 'scalargesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '386', descr => 'join selectivity of <= and related operators on scalar datatypes',
  n => 'scalarlejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '398', descr => 'join selectivity of >= and related operators on scalar datatypes',
  n => 'scalargejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },

{ oid => '109', descr => 'I/O',
  n => 'unknownin', is => 't', v => 'i', p => 's', rt => 'unknown', at => 'cstring' },
{ oid => '110', descr => 'I/O',
  n => 'unknownout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'unknown' },
{ oid => '111',
  n => 'numeric_fac', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8' },

{ oid => '115',
  n => 'box_above_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '116',
  n => 'box_below_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },

{ oid => '117', descr => 'I/O',
  n => 'point_in', is => 't', v => 'i', p => 's', rt => 'point', at => 'cstring' },
{ oid => '118', descr => 'I/O',
  n => 'point_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'point' },
{ oid => '119', descr => 'I/O',
  n => 'lseg_in', is => 't', v => 'i', p => 's', rt => 'lseg', at => 'cstring' },
{ oid => '120', descr => 'I/O',
  n => 'lseg_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'lseg' },
{ oid => '121', descr => 'I/O',
  n => 'path_in', is => 't', v => 'i', p => 's', rt => 'path', at => 'cstring' },
{ oid => '122', descr => 'I/O',
  n => 'path_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'path' },
{ oid => '123', descr => 'I/O',
  n => 'box_in', is => 't', v => 'i', p => 's', rt => 'box', at => 'cstring' },
{ oid => '124', descr => 'I/O',
  n => 'box_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'box' },
{ oid => '125',
  n => 'box_overlap', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '126',
  n => 'box_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '127',
  n => 'box_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '128',
  n => 'box_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '129',
  n => 'box_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '130',
  n => 'box_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '131',
  n => 'point_above', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '132',
  n => 'point_left', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '133',
  n => 'point_right', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '134',
  n => 'point_below', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '135',
  n => 'point_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '136',
  n => 'on_pb', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point box' },
{ oid => '137',
  n => 'on_ppath', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point path' },
{ oid => '138',
  n => 'box_center', is => 't', v => 'i', p => 's', rt => 'point', at => 'box' },
{ oid => '139', descr => 'restriction selectivity for area-comparison operators',
  n => 'areasel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '140', descr => 'join selectivity for area-comparison operators',
  n => 'areajoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '141',
  n => 'int4mul', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '144',
  n => 'int4ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int4' },
{ oid => '145',
  n => 'int2ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int2' },
{ oid => '146',
  n => 'int2gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int2' },
{ oid => '147',
  n => 'int4gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int4' },
{ oid => '148',
  n => 'int2le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int2' },
{ oid => '149',
  n => 'int4le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int4' },
{ oid => '150',
  n => 'int4ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int4' },
{ oid => '151',
  n => 'int2ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int2' },
{ oid => '152',
  n => 'int2mul', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '153',
  n => 'int2div', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '154',
  n => 'int4div', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '155',
  n => 'int2mod', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '156',
  n => 'int4mod', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '157',
  n => 'textne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '158',
  n => 'int24eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int4' },
{ oid => '159',
  n => 'int42eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int2' },
{ oid => '160',
  n => 'int24lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int4' },
{ oid => '161',
  n => 'int42lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int2' },
{ oid => '162',
  n => 'int24gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int4' },
{ oid => '163',
  n => 'int42gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int2' },
{ oid => '164',
  n => 'int24ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int4' },
{ oid => '165',
  n => 'int42ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int2' },
{ oid => '166',
  n => 'int24le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int4' },
{ oid => '167',
  n => 'int42le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int2' },
{ oid => '168',
  n => 'int24ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int4' },
{ oid => '169',
  n => 'int42ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int2' },
{ oid => '170',
  n => 'int24mul', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int4' },
{ oid => '171',
  n => 'int42mul', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int2' },
{ oid => '172',
  n => 'int24div', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int4' },
{ oid => '173',
  n => 'int42div', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int2' },
{ oid => '176',
  n => 'int2pl', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '177',
  n => 'int4pl', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '178',
  n => 'int24pl', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int4' },
{ oid => '179',
  n => 'int42pl', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int2' },
{ oid => '180',
  n => 'int2mi', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '181',
  n => 'int4mi', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '182',
  n => 'int24mi', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int4' },
{ oid => '183',
  n => 'int42mi', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int2' },
{ oid => '184',
  n => 'oideq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oid oid' },
{ oid => '185',
  n => 'oidne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oid oid' },
{ oid => '186',
  n => 'box_same', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '187',
  n => 'box_contain', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '188',
  n => 'box_left', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '189',
  n => 'box_overleft', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '190',
  n => 'box_overright', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '191',
  n => 'box_right', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '192',
  n => 'box_contained', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '193',
  n => 'box_contain_pt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box point' },

{ oid => '195', descr => 'I/O',
  n => 'pg_node_tree_in', is => 't', v => 'i', p => 's', rt => 'pg_node_tree', at => 'cstring' },
{ oid => '196', descr => 'I/O',
  n => 'pg_node_tree_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'pg_node_tree' },
{ oid => '197', descr => 'I/O',
  n => 'pg_node_tree_recv', is => 't', v => 's', p => 's', rt => 'pg_node_tree', at => 'internal' },
{ oid => '198', descr => 'I/O',
  n => 'pg_node_tree_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'pg_node_tree' },

# OIDS 200 - 299

{ oid => '200', descr => 'I/O',
  n => 'float4in', is => 't', v => 'i', p => 's', rt => 'float4', at => 'cstring' },
{ oid => '201', descr => 'I/O',
  n => 'float4out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'float4' },
{ oid => '202',
  n => 'float4mul', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4 float4' },
{ oid => '203',
  n => 'float4div', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4 float4' },
{ oid => '204',
  n => 'float4pl', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4 float4' },
{ oid => '205',
  n => 'float4mi', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4 float4' },
{ oid => '206',
  n => 'float4um', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4' },
{ oid => '207',
  n => 'float4abs', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4' },
{ oid => '208', descr => 'aggregate transition function',
  n => 'float4_accum', is => 't', v => 'i', p => 's', rt => '_float8', at => '_float8 float4' },
{ oid => '209', descr => 'larger of two',
  n => 'float4larger', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4 float4' },
{ oid => '211', descr => 'smaller of two',
  n => 'float4smaller', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4 float4' },

{ oid => '212',
  n => 'int4um', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4' },
{ oid => '213',
  n => 'int2um', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2' },

{ oid => '214', descr => 'I/O',
  n => 'float8in', is => 't', v => 'i', p => 's', rt => 'float8', at => 'cstring' },
{ oid => '215', descr => 'I/O',
  n => 'float8out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'float8' },
{ oid => '216',
  n => 'float8mul', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },
{ oid => '217',
  n => 'float8div', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },
{ oid => '218',
  n => 'float8pl', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },
{ oid => '219',
  n => 'float8mi', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },
{ oid => '220',
  n => 'float8um', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '221',
  n => 'float8abs', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '222', descr => 'aggregate transition function',
  n => 'float8_accum', is => 't', v => 'i', p => 's', rt => '_float8', at => '_float8 float8' },
{ oid => '276', descr => 'aggregate combine function',
  n => 'float8_combine', is => 't', v => 'i', p => 's', rt => '_float8', at => '_float8 _float8' },
{ oid => '223', descr => 'larger of two',
  n => 'float8larger', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },
{ oid => '224', descr => 'smaller of two',
  n => 'float8smaller', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },

{ oid => '225',
  n => 'lseg_center', is => 't', v => 'i', p => 's', rt => 'point', at => 'lseg' },
{ oid => '226',
  n => 'path_center', is => 't', v => 'i', p => 's', rt => 'point', at => 'path' },
{ oid => '227',
  n => 'poly_center', is => 't', v => 'i', p => 's', rt => 'point', at => 'polygon' },

{ oid => '228', descr => 'round to nearest integer',
  n => 'dround', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '229', descr => 'truncate to integer',
  n => 'dtrunc', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '2308', descr => 'nearest integer >= value',
  n => 'ceil', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dceil' },
{ oid => '2320', descr => 'nearest integer >= value',
  n => 'ceiling', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dceil' },
{ oid => '2309', descr => 'nearest integer <= value',
  n => 'floor', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dfloor' },
{ oid => '2310', descr => 'sign of value',
  n => 'sign', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dsign' },
{ oid => '230',
  n => 'dsqrt', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '231',
  n => 'dcbrt', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '232',
  n => 'dpow', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8' },
{ oid => '233', descr => 'natural exponential (e^x)',
  n => 'dexp', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '234', descr => 'natural logarithm',
  n => 'dlog1', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '235', descr => 'convert int2 to float8',
  n => 'float8', is => 't', v => 'i', p => 's', rt => 'float8', at => 'int2', s => 'i2tod' },
{ oid => '236', descr => 'convert int2 to float4',
  n => 'float4', is => 't', v => 'i', p => 's', rt => 'float4', at => 'int2', s => 'i2tof' },
{ oid => '237', descr => 'convert float8 to int2',
  n => 'int2', is => 't', v => 'i', p => 's', rt => 'int2', at => 'float8', s => 'dtoi2' },
{ oid => '238', descr => 'convert float4 to int2',
  n => 'int2', is => 't', v => 'i', p => 's', rt => 'int2', at => 'float4', s => 'ftoi2' },
{ oid => '239',
  n => 'line_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'line line' },

{ oid => '240', descr => 'I/O',
  n => 'abstimein', is => 't', v => 's', p => 's', rt => 'abstime', at => 'cstring' },
{ oid => '241', descr => 'I/O',
  n => 'abstimeout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'abstime' },
{ oid => '242', descr => 'I/O',
  n => 'reltimein', is => 't', v => 's', p => 's', rt => 'reltime', at => 'cstring' },
{ oid => '243', descr => 'I/O',
  n => 'reltimeout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'reltime' },
{ oid => '244',
  n => 'timepl', is => 't', v => 'i', p => 's', rt => 'abstime', at => 'abstime reltime' },
{ oid => '245',
  n => 'timemi', is => 't', v => 'i', p => 's', rt => 'abstime', at => 'abstime reltime' },
{ oid => '246', descr => 'I/O',
  n => 'tintervalin', is => 't', v => 's', p => 's', rt => 'tinterval', at => 'cstring' },
{ oid => '247', descr => 'I/O',
  n => 'tintervalout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'tinterval' },
{ oid => '248',
  n => 'intinterval', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime tinterval' },
{ oid => '249', descr => 'tinterval to reltime',
  n => 'tintervalrel', is => 't', v => 'i', p => 's', rt => 'reltime', at => 'tinterval' },
{ oid => '250', descr => 'current date and time (abstime)',
  n => 'timenow', is => 't', v => 's', p => 's', rt => 'abstime', at => '' },
{ oid => '251',
  n => 'abstimeeq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime abstime' },
{ oid => '252',
  n => 'abstimene', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime abstime' },
{ oid => '253',
  n => 'abstimelt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime abstime' },
{ oid => '254',
  n => 'abstimegt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime abstime' },
{ oid => '255',
  n => 'abstimele', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime abstime' },
{ oid => '256',
  n => 'abstimege', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime abstime' },
{ oid => '257',
  n => 'reltimeeq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'reltime reltime' },
{ oid => '258',
  n => 'reltimene', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'reltime reltime' },
{ oid => '259',
  n => 'reltimelt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'reltime reltime' },
{ oid => '260',
  n => 'reltimegt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'reltime reltime' },
{ oid => '261',
  n => 'reltimele', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'reltime reltime' },
{ oid => '262',
  n => 'reltimege', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'reltime reltime' },
{ oid => '263',
  n => 'tintervalsame', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '264',
  n => 'tintervalct', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '265',
  n => 'tintervalov', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '266',
  n => 'tintervalleneq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval reltime' },
{ oid => '267',
  n => 'tintervallenne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval reltime' },
{ oid => '268',
  n => 'tintervallenlt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval reltime' },
{ oid => '269',
  n => 'tintervallengt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval reltime' },
{ oid => '270',
  n => 'tintervallenle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval reltime' },
{ oid => '271',
  n => 'tintervallenge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval reltime' },
{ oid => '272',
  n => 'tintervalstart', is => 't', v => 'i', p => 's', rt => 'abstime', at => 'tinterval' },
{ oid => '273', descr => 'end of interval',
  n => 'tintervalend', is => 't', v => 'i', p => 's', rt => 'abstime', at => 'tinterval' },
{ oid => '274', descr => 'current date and time - increments during transactions',
  n => 'timeofday', is => 't', p => 's', rt => 'text', at => '' },
{ oid => '275', descr => 'finite abstime?',
  n => 'isfinite', is => 't', v => 'i', p => 's', rt => 'bool', at => 'abstime', s => 'abstime_finite' },

{ oid => '277',
  n => 'inter_sl', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg line' },
{ oid => '278',
  n => 'inter_lb', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line box' },

{ oid => '279',
  n => 'float48mul', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float4 float8' },
{ oid => '280',
  n => 'float48div', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float4 float8' },
{ oid => '281',
  n => 'float48pl', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float4 float8' },
{ oid => '282',
  n => 'float48mi', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float4 float8' },
{ oid => '283',
  n => 'float84mul', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float4' },
{ oid => '284',
  n => 'float84div', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float4' },
{ oid => '285',
  n => 'float84pl', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float4' },
{ oid => '286',
  n => 'float84mi', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float4' },

{ oid => '287',
  n => 'float4eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float4' },
{ oid => '288',
  n => 'float4ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float4' },
{ oid => '289',
  n => 'float4lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float4' },
{ oid => '290',
  n => 'float4le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float4' },
{ oid => '291',
  n => 'float4gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float4' },
{ oid => '292',
  n => 'float4ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float4' },

{ oid => '293',
  n => 'float8eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float8' },
{ oid => '294',
  n => 'float8ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float8' },
{ oid => '295',
  n => 'float8lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float8' },
{ oid => '296',
  n => 'float8le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float8' },
{ oid => '297',
  n => 'float8gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float8' },
{ oid => '298',
  n => 'float8ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float8' },

{ oid => '299',
  n => 'float48eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float8' },

# OIDS 300 - 399

{ oid => '300',
  n => 'float48ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float8' },
{ oid => '301',
  n => 'float48lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float8' },
{ oid => '302',
  n => 'float48le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float8' },
{ oid => '303',
  n => 'float48gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float8' },
{ oid => '304',
  n => 'float48ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float4 float8' },
{ oid => '305',
  n => 'float84eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float4' },
{ oid => '306',
  n => 'float84ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float4' },
{ oid => '307',
  n => 'float84lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float4' },
{ oid => '308',
  n => 'float84le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float4' },
{ oid => '309',
  n => 'float84gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float4' },
{ oid => '310',
  n => 'float84ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'float8 float4' },
{ oid => '320', descr => 'bucket number of operand in equal-width histogram',
  n => 'width_bucket', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float8 float8 float8 int4', s => 'width_bucket_float8' },

{ oid => '311', descr => 'convert float4 to float8',
  n => 'float8', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'ftod' },
{ oid => '312', descr => 'convert float8 to float4',
  n => 'float4', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float8', s => 'dtof' },
{ oid => '313', descr => 'convert int2 to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2', s => 'i2toi4' },
{ oid => '314', descr => 'convert int4 to int2',
  n => 'int2', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int4', s => 'i4toi2' },
{ oid => '316', descr => 'convert int4 to float8',
  n => 'float8', is => 't', v => 'i', p => 's', rt => 'float8', at => 'int4', s => 'i4tod' },
{ oid => '317', descr => 'convert float8 to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float8', s => 'dtoi4' },
{ oid => '318', descr => 'convert int4 to float4',
  n => 'float4', is => 't', v => 'i', p => 's', rt => 'float4', at => 'int4', s => 'i4tof' },
{ oid => '319', descr => 'convert float4 to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float4', s => 'ftoi4' },

# Index access method handlers
{ oid => '330', descr => 'btree index access method handler',
  n => 'bthandler', is => 't', p => 's', rt => 'index_am_handler', at => 'internal' },
{ oid => '331', descr => 'hash index access method handler',
  n => 'hashhandler', is => 't', p => 's', rt => 'index_am_handler', at => 'internal' },
{ oid => '332', descr => 'gist index access method handler',
  n => 'gisthandler', is => 't', p => 's', rt => 'index_am_handler', at => 'internal' },
{ oid => '333', descr => 'gin index access method handler',
  n => 'ginhandler', is => 't', p => 's', rt => 'index_am_handler', at => 'internal' },
{ oid => '334', descr => 'spgist index access method handler',
  n => 'spghandler', is => 't', p => 's', rt => 'index_am_handler', at => 'internal' },
{ oid => '335', descr => 'brin index access method handler',
  n => 'brinhandler', is => 't', p => 's', rt => 'index_am_handler', at => 'internal' },
{ oid => '3952', descr => 'brin: standalone scan new table pages',
  n => 'brin_summarize_new_values', is => 't', p => 's', rt => 'int4', at => 'regclass' },
{ oid => '3999', descr => 'brin: standalone scan new table pages',
  n => 'brin_summarize_range', is => 't', p => 's', rt => 'int4', at => 'regclass int8' },
{ oid => '4014', descr => 'brin: desummarize page range',
  n => 'brin_desummarize_range', is => 't', p => 's', rt => 'void', at => 'regclass int8' },

{ oid => '338', descr => 'validate an operator class',
  n => 'amvalidate', is => 't', p => 's', rt => 'bool', at => 'oid' },

{ oid => '636', descr => 'test property of an index access method',
  n => 'pg_indexam_has_property', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text' },
{ oid => '637', descr => 'test property of an index',
  n => 'pg_index_has_property', is => 't', v => 's', p => 's', rt => 'bool', at => 'regclass text' },
{ oid => '638', descr => 'test property of an index column',
  n => 'pg_index_column_has_property', is => 't', v => 's', p => 's', rt => 'bool', at => 'regclass int4 text' },

{ oid => '339',
  n => 'poly_same', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '340',
  n => 'poly_contain', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '341',
  n => 'poly_left', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '342',
  n => 'poly_overleft', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '343',
  n => 'poly_overright', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '344',
  n => 'poly_right', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '345',
  n => 'poly_contained', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '346',
  n => 'poly_overlap', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '347', descr => 'I/O',
  n => 'poly_in', is => 't', v => 'i', p => 's', rt => 'polygon', at => 'cstring' },
{ oid => '348', descr => 'I/O',
  n => 'poly_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'polygon' },

{ oid => '350', descr => 'less-equal-greater',
  n => 'btint2cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int2' },
{ oid => '3129', descr => 'sort support',
  n => 'btint2sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '351', descr => 'less-equal-greater',
  n => 'btint4cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '3130', descr => 'sort support',
  n => 'btint4sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '842', descr => 'less-equal-greater',
  n => 'btint8cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int8 int8' },
{ oid => '3131', descr => 'sort support',
  n => 'btint8sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '354', descr => 'less-equal-greater',
  n => 'btfloat4cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float4 float4' },
{ oid => '3132', descr => 'sort support',
  n => 'btfloat4sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '355', descr => 'less-equal-greater',
  n => 'btfloat8cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float8 float8' },
{ oid => '3133', descr => 'sort support',
  n => 'btfloat8sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '356', descr => 'less-equal-greater',
  n => 'btoidcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'oid oid' },
{ oid => '3134', descr => 'sort support',
  n => 'btoidsortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '404', descr => 'less-equal-greater',
  n => 'btoidvectorcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'oidvector oidvector' },
{ oid => '357', descr => 'less-equal-greater',
  n => 'btabstimecmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'abstime abstime' },
{ oid => '358', descr => 'less-equal-greater',
  n => 'btcharcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'char char' },
{ oid => '359', descr => 'less-equal-greater',
  n => 'btnamecmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'name name' },
{ oid => '3135', descr => 'sort support',
  n => 'btnamesortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '360', descr => 'less-equal-greater',
  n => 'bttextcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text' },
{ oid => '3255', descr => 'sort support',
  n => 'bttextsortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '377', descr => 'less-equal-greater',
  n => 'cash_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'money money' },
{ oid => '380', descr => 'less-equal-greater',
  n => 'btreltimecmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'reltime reltime' },
{ oid => '381', descr => 'less-equal-greater',
  n => 'bttintervalcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'tinterval tinterval' },
{ oid => '382', descr => 'less-equal-greater',
  n => 'btarraycmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray anyarray' },

{ oid => '361',
  n => 'lseg_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'lseg lseg' },
{ oid => '362',
  n => 'lseg_interpt', is => 't', v => 'i', p => 's', rt => 'point', at => 'lseg lseg' },
{ oid => '363',
  n => 'dist_ps', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point lseg' },
{ oid => '364',
  n => 'dist_pb', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point box' },
{ oid => '365',
  n => 'dist_sb', is => 't', v => 'i', p => 's', rt => 'float8', at => 'lseg box' },
{ oid => '366',
  n => 'close_ps', is => 't', v => 'i', p => 's', rt => 'point', at => 'point lseg' },
{ oid => '367',
  n => 'close_pb', is => 't', v => 'i', p => 's', rt => 'point', at => 'point box' },
{ oid => '368',
  n => 'close_sb', is => 't', v => 'i', p => 's', rt => 'point', at => 'lseg box' },
{ oid => '369',
  n => 'on_ps', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point lseg' },
{ oid => '370',
  n => 'path_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'path path' },
{ oid => '371',
  n => 'dist_ppath', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point path' },
{ oid => '372',
  n => 'on_sb', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg box' },
{ oid => '373',
  n => 'inter_sb', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg box' },

# OIDS 400 - 499

{ oid => '401', descr => 'convert char(n) to text',
  n => 'text', is => 't', v => 'i', p => 's', rt => 'text', at => 'bpchar', s => 'rtrim1' },
{ oid => '406', descr => 'convert name to text',
  n => 'text', is => 't', v => 'i', p => 's', rt => 'text', at => 'name', s => 'name_text' },
{ oid => '407', descr => 'convert text to name',
  n => 'name', is => 't', v => 'i', p => 's', rt => 'name', at => 'text', s => 'text_name' },
{ oid => '408', descr => 'convert name to char(n)',
  n => 'bpchar', is => 't', v => 'i', p => 's', rt => 'bpchar', at => 'name', s => 'name_bpchar' },
{ oid => '409', descr => 'convert char(n) to name',
  n => 'name', is => 't', v => 'i', p => 's', rt => 'name', at => 'bpchar', s => 'bpchar_name' },

{ oid => '449', descr => 'hash',
  n => 'hashint2', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2' },
{ oid => '441', descr => 'hash',
  n => 'hashint2extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int2 int8' },
{ oid => '450', descr => 'hash',
  n => 'hashint4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4' },
{ oid => '425', descr => 'hash',
  n => 'hashint4extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int4 int8' },
{ oid => '949', descr => 'hash',
  n => 'hashint8', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int8' },
{ oid => '442', descr => 'hash',
  n => 'hashint8extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '451', descr => 'hash',
  n => 'hashfloat4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float4' },
{ oid => '443', descr => 'hash',
  n => 'hashfloat4extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'float4 int8' },
{ oid => '452', descr => 'hash',
  n => 'hashfloat8', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float8' },
{ oid => '444', descr => 'hash',
  n => 'hashfloat8extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'float8 int8' },
{ oid => '453', descr => 'hash',
  n => 'hashoid', is => 't', v => 'i', p => 's', rt => 'int4', at => 'oid' },
{ oid => '445', descr => 'hash',
  n => 'hashoidextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'oid int8' },
{ oid => '454', descr => 'hash',
  n => 'hashchar', is => 't', v => 'i', p => 's', rt => 'int4', at => 'char' },
{ oid => '446', descr => 'hash',
  n => 'hashcharextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'char int8' },
{ oid => '455', descr => 'hash',
  n => 'hashname', is => 't', v => 'i', p => 's', rt => 'int4', at => 'name' },
{ oid => '447', descr => 'hash',
  n => 'hashnameextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'name int8' },
{ oid => '400', descr => 'hash',
  n => 'hashtext', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text' },
{ oid => '448', descr => 'hash',
  n => 'hashtextextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'text int8' },
{ oid => '456', descr => 'hash',
  n => 'hashvarlena', is => 't', v => 'i', p => 's', rt => 'int4', at => 'internal' },
{ oid => '772', descr => 'hash',
  n => 'hashvarlenaextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'internal int8' },
{ oid => '457', descr => 'hash',
  n => 'hashoidvector', is => 't', v => 'i', p => 's', rt => 'int4', at => 'oidvector' },
{ oid => '776', descr => 'hash',
  n => 'hashoidvectorextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'oidvector int8' },
{ oid => '329', descr => 'hash',
  n => 'hash_aclitem', is => 't', v => 'i', p => 's', rt => 'int4', at => 'aclitem' },
{ oid => '777', descr => 'hash',
  n => 'hash_aclitem_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'aclitem int8' },
{ oid => '399', descr => 'hash',
  n => 'hashmacaddr', is => 't', v => 'i', p => 's', rt => 'int4', at => 'macaddr' },
{ oid => '778', descr => 'hash',
  n => 'hashmacaddrextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'macaddr int8' },
{ oid => '422', descr => 'hash',
  n => 'hashinet', is => 't', v => 'i', p => 's', rt => 'int4', at => 'inet' },
{ oid => '779', descr => 'hash',
  n => 'hashinetextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'inet int8' },
{ oid => '432', descr => 'hash',
  n => 'hash_numeric', is => 't', v => 'i', p => 's', rt => 'int4', at => 'numeric' },
{ oid => '780', descr => 'hash',
  n => 'hash_numeric_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'numeric int8' },
{ oid => '328', descr => 'hash',
  n => 'hashmacaddr8', is => 't', v => 'i', p => 's', rt => 'int4', at => 'macaddr8' },
{ oid => '781', descr => 'hash',
  n => 'hashmacaddr8extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'macaddr8 int8' },

{ oid => '438', descr => 'count the number of NULL arguments',
  n => 'num_nulls', provariadic => '2276', v => 'i', p => 's', rt => 'int4', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'pg_num_nulls' },
{ oid => '440', descr => 'count the number of non-NULL arguments',
  n => 'num_nonnulls', provariadic => '2276', v => 'i', p => 's', rt => 'int4', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'pg_num_nonnulls' },

{ oid => '458', descr => 'larger of two',
  n => 'text_larger', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },
{ oid => '459', descr => 'smaller of two',
  n => 'text_smaller', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },

{ oid => '460', descr => 'I/O',
  n => 'int8in', is => 't', v => 'i', p => 's', rt => 'int8', at => 'cstring' },
{ oid => '461', descr => 'I/O',
  n => 'int8out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int8' },
{ oid => '462',
  n => 'int8um', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8' },
{ oid => '463',
  n => 'int8pl', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '464',
  n => 'int8mi', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '465',
  n => 'int8mul', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '466',
  n => 'int8div', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '467',
  n => 'int8eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int8' },
{ oid => '468',
  n => 'int8ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int8' },
{ oid => '469',
  n => 'int8lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int8' },
{ oid => '470',
  n => 'int8gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int8' },
{ oid => '471',
  n => 'int8le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int8' },
{ oid => '472',
  n => 'int8ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int8' },

{ oid => '474',
  n => 'int84eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int4' },
{ oid => '475',
  n => 'int84ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int4' },
{ oid => '476',
  n => 'int84lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int4' },
{ oid => '477',
  n => 'int84gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int4' },
{ oid => '478',
  n => 'int84le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int4' },
{ oid => '479',
  n => 'int84ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int4' },

{ oid => '480', descr => 'convert int8 to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int8', s => 'int84' },
{ oid => '481', descr => 'convert int4 to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int4', s => 'int48' },
{ oid => '482', descr => 'convert int8 to float8',
  n => 'float8', is => 't', v => 'i', p => 's', rt => 'float8', at => 'int8', s => 'i8tod' },
{ oid => '483', descr => 'convert float8 to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'float8', s => 'dtoi8' },

# OIDS 500 - 599

# OIDS 600 - 699

{ oid => '626', descr => 'hash',
  n => 'hash_array', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray' },
{ oid => '782', descr => 'hash',
  n => 'hash_array_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'anyarray int8' },

{ oid => '652', descr => 'convert int8 to float4',
  n => 'float4', is => 't', v => 'i', p => 's', rt => 'float4', at => 'int8', s => 'i8tof' },
{ oid => '653', descr => 'convert float4 to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'float4', s => 'ftoi8' },

{ oid => '714', descr => 'convert int8 to int2',
  n => 'int2', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int8', s => 'int82' },
{ oid => '754', descr => 'convert int2 to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int2', s => 'int28' },

{ oid => '655',
  n => 'namelt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name name' },
{ oid => '656',
  n => 'namele', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name name' },
{ oid => '657',
  n => 'namegt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name name' },
{ oid => '658',
  n => 'namege', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name name' },
{ oid => '659',
  n => 'namene', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name name' },

{ oid => '668', descr => 'adjust char() to typmod length',
  n => 'bpchar', is => 't', v => 'i', p => 's', rt => 'bpchar', at => 'bpchar int4 bool' },
{ oid => '3097', descr => 'transform a varchar length coercion',
  n => 'varchar_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '669', descr => 'adjust varchar() to typmod length',
  n => 'varchar', protransform => 'varchar_transform', is => 't', v => 'i', p => 's', rt => 'varchar', at => 'varchar int4 bool' },

{ oid => '676',
  n => 'mktinterval', is => 't', v => 'i', p => 's', rt => 'tinterval', at => 'abstime abstime' },

{ oid => '619',
  n => 'oidvectorne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oidvector oidvector' },
{ oid => '677',
  n => 'oidvectorlt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oidvector oidvector' },
{ oid => '678',
  n => 'oidvectorle', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oidvector oidvector' },
{ oid => '679',
  n => 'oidvectoreq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oidvector oidvector' },
{ oid => '680',
  n => 'oidvectorge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oidvector oidvector' },
{ oid => '681',
  n => 'oidvectorgt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oidvector oidvector' },

# OIDS 700 - 799
{ oid => '710', descr => 'deprecated, use current_user instead',
  n => 'getpgusername', is => 't', v => 's', p => 's', rt => 'name', at => '', s => 'current_user' },
{ oid => '716',
  n => 'oidlt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oid oid' },
{ oid => '717',
  n => 'oidle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oid oid' },

{ oid => '720', descr => 'octet length',
  n => 'octet_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea', s => 'byteaoctetlen' },
{ oid => '721', descr => 'get byte',
  n => 'get_byte', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea int4', s => 'byteaGetByte' },
{ oid => '722', descr => 'set byte',
  n => 'set_byte', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea int4 int4', s => 'byteaSetByte' },
{ oid => '723', descr => 'get bit',
  n => 'get_bit', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea int4', s => 'byteaGetBit' },
{ oid => '724', descr => 'set bit',
  n => 'set_bit', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea int4 int4', s => 'byteaSetBit' },
{ oid => '749', descr => 'substitute portion of string',
  n => 'overlay', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea bytea int4 int4', s => 'byteaoverlay' },
{ oid => '752', descr => 'substitute portion of string',
  n => 'overlay', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea bytea int4', s => 'byteaoverlay_no_len' },

{ oid => '725',
  n => 'dist_pl', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point line' },
{ oid => '726',
  n => 'dist_lb', is => 't', v => 'i', p => 's', rt => 'float8', at => 'line box' },
{ oid => '727',
  n => 'dist_sl', is => 't', v => 'i', p => 's', rt => 'float8', at => 'lseg line' },
{ oid => '728',
  n => 'dist_cpoly', is => 't', v => 'i', p => 's', rt => 'float8', at => 'circle polygon' },
{ oid => '729',
  n => 'poly_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'polygon polygon' },
{ oid => '3275',
  n => 'dist_ppoly', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point polygon' },
{ oid => '3292',
  n => 'dist_polyp', is => 't', v => 'i', p => 's', rt => 'float8', at => 'polygon point' },
{ oid => '3290',
  n => 'dist_cpoint', is => 't', v => 'i', p => 's', rt => 'float8', at => 'circle point' },

{ oid => '740',
  n => 'text_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '741',
  n => 'text_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '742',
  n => 'text_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '743',
  n => 'text_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },

{ oid => '745', descr => 'current user name',
  n => 'current_user', is => 't', v => 's', p => 's', rt => 'name', at => '' },
{ oid => '746', descr => 'session user name',
  n => 'session_user', is => 't', v => 's', p => 's', rt => 'name', at => '' },

{ oid => '744',
  n => 'array_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '390',
  n => 'array_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '391',
  n => 'array_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '392',
  n => 'array_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '393',
  n => 'array_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '396',
  n => 'array_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '747', descr => 'array dimensions',
  n => 'array_dims', is => 't', v => 'i', p => 's', rt => 'text', at => 'anyarray' },
{ oid => '748', descr => 'number of array dimensions',
  n => 'array_ndims', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray' },
{ oid => '750', descr => 'I/O',
  n => 'array_in', is => 't', v => 's', p => 's', rt => 'anyarray', at => 'cstring oid int4' },
{ oid => '751', descr => 'I/O',
  n => 'array_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'anyarray' },
{ oid => '2091', descr => 'array lower dimension',
  n => 'array_lower', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray int4' },
{ oid => '2092', descr => 'array upper dimension',
  n => 'array_upper', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray int4' },
{ oid => '2176', descr => 'array length',
  n => 'array_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray int4' },
{ oid => '3179', descr => 'array cardinality',
  n => 'cardinality', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray', s => 'array_cardinality' },
{ oid => '378', descr => 'append element onto end of array',
  n => 'array_append', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray anyelement' },
{ oid => '379', descr => 'prepend element onto front of array',
  n => 'array_prepend', v => 'i', p => 's', rt => 'anyarray', at => 'anyelement anyarray' },
{ oid => '383',
  n => 'array_cat', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray anyarray' },
{ oid => '394', descr => 'split delimited text into text[]',
  n => 'string_to_array', v => 'i', p => 's', rt => '_text', at => 'text text', s => 'text_to_array' },
{ oid => '395', descr => 'concatenate array elements, using delimiter, into text',
  n => 'array_to_string', is => 't', v => 's', p => 's', rt => 'text', at => 'anyarray text', s => 'array_to_text' },
{ oid => '376', descr => 'split delimited text into text[], with null string',
  n => 'string_to_array', v => 'i', p => 's', rt => '_text', at => 'text text text', s => 'text_to_array_null' },
{ oid => '384', descr => 'concatenate array elements, using delimiter and null string, into text',
  n => 'array_to_string', v => 's', p => 's', rt => 'text', at => 'anyarray text text', s => 'array_to_text_null' },
{ oid => '515', descr => 'larger of two',
  n => 'array_larger', is => 't', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray anyarray' },
{ oid => '516', descr => 'smaller of two',
  n => 'array_smaller', is => 't', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray anyarray' },
{ oid => '3277', descr => 'returns an offset of value in array',
  n => 'array_position', v => 'i', p => 's', rt => 'int4', at => 'anyarray anyelement' },
{ oid => '3278', descr => 'returns an offset of value in array with start index',
  n => 'array_position', v => 'i', p => 's', rt => 'int4', at => 'anyarray anyelement int4', s => 'array_position_start' },
{ oid => '3279', descr => 'returns an array of offsets of some value in array',
  n => 'array_positions', v => 'i', p => 's', rt => '_int4', at => 'anyarray anyelement' },
{ oid => '1191', descr => 'array subscripts generator',
  n => 'generate_subscripts', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray int4 bool' },
{ oid => '1192', descr => 'array subscripts generator',
  n => 'generate_subscripts', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int4', at => 'anyarray int4', s => 'generate_subscripts_nodir' },
{ oid => '1193', descr => 'array constructor with value',
  n => 'array_fill', v => 'i', p => 's', rt => 'anyarray', at => 'anyelement _int4' },
{ oid => '1286', descr => 'array constructor with value',
  n => 'array_fill', v => 'i', p => 's', rt => 'anyarray', at => 'anyelement _int4 _int4', s => 'array_fill_with_lower_bounds' },
{ oid => '2331', descr => 'expand array to set of rows',
  n => 'unnest', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyarray', s => 'array_unnest' },
{ oid => '3167', descr => 'remove any occurrences of an element from an array',
  n => 'array_remove', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray anyelement' },
{ oid => '3168', descr => 'replace any occurrences of an element in an array',
  n => 'array_replace', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray anyelement anyelement' },
{ oid => '2333', descr => 'aggregate transition function',
  n => 'array_agg_transfn', v => 'i', p => 's', rt => 'internal', at => 'internal anynonarray' },
{ oid => '2334', descr => 'aggregate final function',
  n => 'array_agg_finalfn', v => 'i', p => 's', rt => 'anyarray', at => 'internal anynonarray' },
{ oid => '2335', descr => 'concatenate aggregate input into an array',
  n => 'array_agg', proisagg => 't', v => 'i', p => 's', rt => 'anyarray', at => 'anynonarray', s => 'aggregate_dummy' },
{ oid => '4051', descr => 'aggregate transition function',
  n => 'array_agg_array_transfn', v => 'i', p => 's', rt => 'internal', at => 'internal anyarray' },
{ oid => '4052', descr => 'aggregate final function',
  n => 'array_agg_array_finalfn', v => 'i', p => 's', rt => 'anyarray', at => 'internal anyarray' },
{ oid => '4053', descr => 'concatenate aggregate input into an array',
  n => 'array_agg', proisagg => 't', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray', s => 'aggregate_dummy' },
{ oid => '3218', descr => 'bucket number of operand given a sorted array of bucket lower bounds',
  n => 'width_bucket', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyelement anyarray', s => 'width_bucket_array' },
{ oid => '3816', descr => 'array typanalyze',
  n => 'array_typanalyze', is => 't', v => 's', p => 's', rt => 'bool', at => 'internal' },
{ oid => '3817', descr => 'restriction selectivity for array-containment operators',
  n => 'arraycontsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '3818', descr => 'join selectivity for array-containment operators',
  n => 'arraycontjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },

{ oid => '760', descr => 'I/O',
  n => 'smgrin', is => 't', v => 's', p => 's', rt => 'smgr', at => 'cstring' },
{ oid => '761', descr => 'I/O',
  n => 'smgrout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'smgr' },
{ oid => '762', descr => 'storage manager',
  n => 'smgreq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'smgr smgr' },
{ oid => '763', descr => 'storage manager',
  n => 'smgrne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'smgr smgr' },

{ oid => '764', descr => 'large object import',
  n => 'lo_import', is => 't', rt => 'oid', at => 'text', s => 'be_lo_import' },
{ oid => '767', descr => 'large object import',
  n => 'lo_import', is => 't', rt => 'oid', at => 'text oid', s => 'be_lo_import_with_oid' },
{ oid => '765', descr => 'large object export',
  n => 'lo_export', is => 't', rt => 'int4', at => 'oid text', s => 'be_lo_export' },

{ oid => '766', descr => 'increment',
  n => 'int4inc', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4' },
{ oid => '768', descr => 'larger of two',
  n => 'int4larger', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '769', descr => 'smaller of two',
  n => 'int4smaller', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '770', descr => 'larger of two',
  n => 'int2larger', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '771', descr => 'smaller of two',
  n => 'int2smaller', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },

{ oid => '784',
  n => 'tintervaleq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '785',
  n => 'tintervalne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '786',
  n => 'tintervallt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '787',
  n => 'tintervalgt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '788',
  n => 'tintervalle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },
{ oid => '789',
  n => 'tintervalge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tinterval tinterval' },

# OIDS 800 - 899

{ oid => '846',
  n => 'cash_mul_flt4', is => 't', v => 'i', p => 's', rt => 'money', at => 'money float4' },
{ oid => '847',
  n => 'cash_div_flt4', is => 't', v => 'i', p => 's', rt => 'money', at => 'money float4' },
{ oid => '848',
  n => 'flt4_mul_cash', is => 't', v => 'i', p => 's', rt => 'money', at => 'float4 money' },

{ oid => '849', descr => 'position of substring',
  n => 'position', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text', s => 'textpos' },
{ oid => '850',
  n => 'textlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '851',
  n => 'textnlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },

{ oid => '852',
  n => 'int48eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int8' },
{ oid => '853',
  n => 'int48ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int8' },
{ oid => '854',
  n => 'int48lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int8' },
{ oid => '855',
  n => 'int48gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int8' },
{ oid => '856',
  n => 'int48le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int8' },
{ oid => '857',
  n => 'int48ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4 int8' },

{ oid => '858',
  n => 'namelike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },
{ oid => '859',
  n => 'namenlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },

{ oid => '860', descr => 'convert char to char(n)',
  n => 'bpchar', is => 't', v => 'i', p => 's', rt => 'bpchar', at => 'char', s => 'char_bpchar' },

{ oid => '861', descr => 'name of the current database',
  n => 'current_database', is => 't', v => 's', p => 's', rt => 'name', at => '' },
{ oid => '817', descr => 'get the currently executing query',
  n => 'current_query', p => 'r', rt => 'text', at => '' },

{ oid => '3399',
  n => 'int8_mul_cash', is => 't', v => 'i', p => 's', rt => 'money', at => 'int8 money' },
{ oid => '862',
  n => 'int4_mul_cash', is => 't', v => 'i', p => 's', rt => 'money', at => 'int4 money' },
{ oid => '863',
  n => 'int2_mul_cash', is => 't', v => 'i', p => 's', rt => 'money', at => 'int2 money' },
{ oid => '3344',
  n => 'cash_mul_int8', is => 't', v => 'i', p => 's', rt => 'money', at => 'money int8' },
{ oid => '3345',
  n => 'cash_div_int8', is => 't', v => 'i', p => 's', rt => 'money', at => 'money int8' },
{ oid => '864',
  n => 'cash_mul_int4', is => 't', v => 'i', p => 's', rt => 'money', at => 'money int4' },
{ oid => '865',
  n => 'cash_div_int4', is => 't', v => 'i', p => 's', rt => 'money', at => 'money int4' },
{ oid => '866',
  n => 'cash_mul_int2', is => 't', v => 'i', p => 's', rt => 'money', at => 'money int2' },
{ oid => '867',
  n => 'cash_div_int2', is => 't', v => 'i', p => 's', rt => 'money', at => 'money int2' },

{ oid => '886', descr => 'I/O',
  n => 'cash_in', is => 't', v => 's', p => 's', rt => 'money', at => 'cstring' },
{ oid => '887', descr => 'I/O',
  n => 'cash_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'money' },
{ oid => '888',
  n => 'cash_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'money money' },
{ oid => '889',
  n => 'cash_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'money money' },
{ oid => '890',
  n => 'cash_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'money money' },
{ oid => '891',
  n => 'cash_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'money money' },
{ oid => '892',
  n => 'cash_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'money money' },
{ oid => '893',
  n => 'cash_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'money money' },
{ oid => '894',
  n => 'cash_pl', is => 't', v => 'i', p => 's', rt => 'money', at => 'money money' },
{ oid => '895',
  n => 'cash_mi', is => 't', v => 'i', p => 's', rt => 'money', at => 'money money' },
{ oid => '896',
  n => 'cash_mul_flt8', is => 't', v => 'i', p => 's', rt => 'money', at => 'money float8' },
{ oid => '897',
  n => 'cash_div_flt8', is => 't', v => 'i', p => 's', rt => 'money', at => 'money float8' },
{ oid => '898', descr => 'larger of two',
  n => 'cashlarger', is => 't', v => 'i', p => 's', rt => 'money', at => 'money money' },
{ oid => '899', descr => 'smaller of two',
  n => 'cashsmaller', is => 't', v => 'i', p => 's', rt => 'money', at => 'money money' },
{ oid => '919',
  n => 'flt8_mul_cash', is => 't', v => 'i', p => 's', rt => 'money', at => 'float8 money' },
{ oid => '935', descr => 'output money amount as words',
  n => 'cash_words', is => 't', v => 'i', p => 's', rt => 'text', at => 'money' },
{ oid => '3822',
  n => 'cash_div_cash', is => 't', v => 'i', p => 's', rt => 'float8', at => 'money money' },
{ oid => '3823', descr => 'convert money to numeric',
  n => 'numeric', is => 't', v => 's', p => 's', rt => 'numeric', at => 'money', s => 'cash_numeric' },
{ oid => '3824', descr => 'convert numeric to money',
  n => 'money', is => 't', v => 's', p => 's', rt => 'money', at => 'numeric', s => 'numeric_cash' },
{ oid => '3811', descr => 'convert int4 to money',
  n => 'money', is => 't', v => 's', p => 's', rt => 'money', at => 'int4', s => 'int4_cash' },
{ oid => '3812', descr => 'convert int8 to money',
  n => 'money', is => 't', v => 's', p => 's', rt => 'money', at => 'int8', s => 'int8_cash' },

# OIDS 900 - 999

{ oid => '940', descr => 'modulus',
  n => 'mod', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2', s => 'int2mod' },
{ oid => '941', descr => 'modulus',
  n => 'mod', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4', s => 'int4mod' },

{ oid => '945',
  n => 'int8mod', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '947', descr => 'modulus',
  n => 'mod', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8', s => 'int8mod' },

{ oid => '944', descr => 'convert text to char',
  n => 'char', is => 't', v => 'i', p => 's', rt => 'char', at => 'text', s => 'text_char' },
{ oid => '946', descr => 'convert char to text',
  n => 'text', is => 't', v => 'i', p => 's', rt => 'text', at => 'char', s => 'char_text' },

{ oid => '952', descr => 'large object open',
  n => 'lo_open', is => 't', rt => 'int4', at => 'oid int4', s => 'be_lo_open' },
{ oid => '953', descr => 'large object close',
  n => 'lo_close', is => 't', rt => 'int4', at => 'int4', s => 'be_lo_close' },
{ oid => '954', descr => 'large object read',
  n => 'loread', is => 't', rt => 'bytea', at => 'int4 int4', s => 'be_loread' },
{ oid => '955', descr => 'large object write',
  n => 'lowrite', is => 't', rt => 'int4', at => 'int4 bytea', s => 'be_lowrite' },
{ oid => '956', descr => 'large object seek',
  n => 'lo_lseek', is => 't', rt => 'int4', at => 'int4 int4 int4', s => 'be_lo_lseek' },
{ oid => '3170', descr => 'large object seek (64 bit)',
  n => 'lo_lseek64', is => 't', rt => 'int8', at => 'int4 int8 int4', s => 'be_lo_lseek64' },
{ oid => '957', descr => 'large object create',
  n => 'lo_creat', is => 't', rt => 'oid', at => 'int4', s => 'be_lo_creat' },
{ oid => '715', descr => 'large object create',
  n => 'lo_create', is => 't', rt => 'oid', at => 'oid', s => 'be_lo_create' },
{ oid => '958', descr => 'large object position',
  n => 'lo_tell', is => 't', rt => 'int4', at => 'int4', s => 'be_lo_tell' },
{ oid => '3171', descr => 'large object position (64 bit)',
  n => 'lo_tell64', is => 't', rt => 'int8', at => 'int4', s => 'be_lo_tell64' },
{ oid => '1004', descr => 'truncate large object',
  n => 'lo_truncate', is => 't', rt => 'int4', at => 'int4 int4', s => 'be_lo_truncate' },
{ oid => '3172', descr => 'truncate large object (64 bit)',
  n => 'lo_truncate64', is => 't', rt => 'int4', at => 'int4 int8', s => 'be_lo_truncate64' },

{ oid => '3457', descr => 'create new large object with given content',
  n => 'lo_from_bytea', is => 't', rt => 'oid', at => 'oid bytea', s => 'be_lo_from_bytea' },
{ oid => '3458', descr => 'read entire large object',
  n => 'lo_get', is => 't', rt => 'bytea', at => 'oid', s => 'be_lo_get' },
{ oid => '3459', descr => 'read large object from offset for length',
  n => 'lo_get', is => 't', rt => 'bytea', at => 'oid int8 int4', s => 'be_lo_get_fragment' },
{ oid => '3460', descr => 'write data at offset',
  n => 'lo_put', is => 't', rt => 'void', at => 'oid int8 bytea', s => 'be_lo_put' },

{ oid => '959',
  n => 'on_pl', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point line' },
{ oid => '960',
  n => 'on_sl', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg line' },
{ oid => '961',
  n => 'close_pl', is => 't', v => 'i', p => 's', rt => 'point', at => 'point line' },
{ oid => '962',
  n => 'close_sl', is => 't', v => 'i', p => 's', rt => 'point', at => 'lseg line' },
{ oid => '963',
  n => 'close_lb', is => 't', v => 'i', p => 's', rt => 'point', at => 'line box' },

{ oid => '964', descr => 'large object unlink (delete)',
  n => 'lo_unlink', is => 't', rt => 'int4', at => 'oid', s => 'be_lo_unlink' },

{ oid => '973',
  n => 'path_inter', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path path' },
{ oid => '975', descr => 'box area',
  n => 'area', is => 't', v => 'i', p => 's', rt => 'float8', at => 'box', s => 'box_area' },
{ oid => '976', descr => 'box width',
  n => 'width', is => 't', v => 'i', p => 's', rt => 'float8', at => 'box', s => 'box_width' },
{ oid => '977', descr => 'box height',
  n => 'height', is => 't', v => 'i', p => 's', rt => 'float8', at => 'box', s => 'box_height' },
{ oid => '978',
  n => 'box_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'box box' },
{ oid => '979', descr => 'area of a closed path',
  n => 'area', is => 't', v => 'i', p => 's', rt => 'float8', at => 'path', s => 'path_area' },
{ oid => '980',
  n => 'box_intersect', is => 't', v => 'i', p => 's', rt => 'box', at => 'box box' },
{ oid => '4067', descr => 'bounding box of two boxes',
  n => 'bound_box', is => 't', v => 'i', p => 's', rt => 'box', at => 'box box', s => 'boxes_bound_box' },
{ oid => '981', descr => 'box diagonal',
  n => 'diagonal', is => 't', v => 'i', p => 's', rt => 'lseg', at => 'box', s => 'box_diagonal' },
{ oid => '982',
  n => 'path_n_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path path' },
{ oid => '983',
  n => 'path_n_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path path' },
{ oid => '984',
  n => 'path_n_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path path' },
{ oid => '985',
  n => 'path_n_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path path' },
{ oid => '986',
  n => 'path_n_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path path' },
{ oid => '987',
  n => 'path_length', is => 't', v => 'i', p => 's', rt => 'float8', at => 'path' },
{ oid => '988',
  n => 'point_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '989',
  n => 'point_vert', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '990',
  n => 'point_horiz', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point' },
{ oid => '991',
  n => 'point_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point point' },
{ oid => '992', descr => 'slope between points',
  n => 'slope', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point point', s => 'point_slope' },
{ oid => '993', descr => 'convert points to line segment',
  n => 'lseg', is => 't', v => 'i', p => 's', rt => 'lseg', at => 'point point', s => 'lseg_construct' },
{ oid => '994',
  n => 'lseg_intersect', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '995',
  n => 'lseg_parallel', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '996',
  n => 'lseg_perp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '997',
  n => 'lseg_vertical', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg' },
{ oid => '998',
  n => 'lseg_horizontal', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg' },
{ oid => '999',
  n => 'lseg_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },

# OIDS 1000 - 1999

{ oid => '3994', descr => 'transform a time zone adjustment',
  n => 'timestamp_izone_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '1026', descr => 'adjust timestamp to new time zone',
  n => 'timezone', protransform => 'timestamp_izone_transform', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'interval timestamptz', s => 'timestamptz_izone' },

{ oid => '1031', descr => 'I/O',
  n => 'aclitemin', is => 't', v => 's', p => 's', rt => 'aclitem', at => 'cstring' },
{ oid => '1032', descr => 'I/O',
  n => 'aclitemout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'aclitem' },
{ oid => '1035', descr => 'add/update ACL item',
  n => 'aclinsert', is => 't', v => 'i', p => 's', rt => '_aclitem', at => '_aclitem aclitem' },
{ oid => '1036', descr => 'remove ACL item',
  n => 'aclremove', is => 't', v => 'i', p => 's', rt => '_aclitem', at => '_aclitem aclitem' },
{ oid => '1037', descr => 'contains',
  n => 'aclcontains', is => 't', v => 'i', p => 's', rt => 'bool', at => '_aclitem aclitem' },
{ oid => '1062',
  n => 'aclitemeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'aclitem aclitem', s => 'aclitem_eq' },
{ oid => '1365', descr => 'make ACL item',
  n => 'makeaclitem', is => 't', v => 'i', p => 's', rt => 'aclitem', at => 'oid oid text bool' },
{ oid => '3943', descr => 'TODO',
  n => 'acldefault', is => 't', v => 'i', p => 's', rt => '_aclitem', at => 'char oid', s => 'acldefault_sql' },
{ oid => '1689', descr => 'convert ACL item array to table, for use by information schema',
  n => 'aclexplode', prorows => '10', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '_aclitem', proallargtypes => '{_aclitem,oid,oid,text,bool}', proargmodes => '{i,o,o,o,o}', proargnames => '{acl,grantor,grantee,privilege_type,is_grantable}' },
{ oid => '1044', descr => 'I/O',
  n => 'bpcharin', is => 't', v => 'i', p => 's', rt => 'bpchar', at => 'cstring oid int4' },
{ oid => '1045', descr => 'I/O',
  n => 'bpcharout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'bpchar' },
{ oid => '2913', descr => 'I/O typmod',
  n => 'bpchartypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2914', descr => 'I/O typmod',
  n => 'bpchartypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1046', descr => 'I/O',
  n => 'varcharin', is => 't', v => 'i', p => 's', rt => 'varchar', at => 'cstring oid int4' },
{ oid => '1047', descr => 'I/O',
  n => 'varcharout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'varchar' },
{ oid => '2915', descr => 'I/O typmod',
  n => 'varchartypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2916', descr => 'I/O typmod',
  n => 'varchartypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1048',
  n => 'bpchareq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '1049',
  n => 'bpcharlt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '1050',
  n => 'bpcharle', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '1051',
  n => 'bpchargt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '1052',
  n => 'bpcharge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '1053',
  n => 'bpcharne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '1063', descr => 'larger of two',
  n => 'bpchar_larger', is => 't', v => 'i', p => 's', rt => 'bpchar', at => 'bpchar bpchar' },
{ oid => '1064', descr => 'smaller of two',
  n => 'bpchar_smaller', is => 't', v => 'i', p => 's', rt => 'bpchar', at => 'bpchar bpchar' },
{ oid => '1078', descr => 'less-equal-greater',
  n => 'bpcharcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar bpchar' },
{ oid => '3328', descr => 'sort support',
  n => 'bpchar_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '1080', descr => 'hash',
  n => 'hashbpchar', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar' },
{ oid => '972', descr => 'hash',
  n => 'hashbpcharextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'bpchar int8' },
{ oid => '1081', descr => 'format a type oid and atttypmod to canonical SQL',
  n => 'format_type', v => 's', p => 's', rt => 'text', at => 'oid int4' },
{ oid => '1084', descr => 'I/O',
  n => 'date_in', is => 't', v => 's', p => 's', rt => 'date', at => 'cstring' },
{ oid => '1085', descr => 'I/O',
  n => 'date_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'date' },
{ oid => '1086',
  n => 'date_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date date' },
{ oid => '1087',
  n => 'date_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date date' },
{ oid => '1088',
  n => 'date_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date date' },
{ oid => '1089',
  n => 'date_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date date' },
{ oid => '1090',
  n => 'date_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date date' },
{ oid => '1091',
  n => 'date_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date date' },
{ oid => '1092', descr => 'less-equal-greater',
  n => 'date_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'date date' },
{ oid => '3136', descr => 'sort support',
  n => 'date_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },

# OIDS 1100 - 1199

{ oid => '1102',
  n => 'time_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'time time' },
{ oid => '1103',
  n => 'time_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'time time' },
{ oid => '1104',
  n => 'time_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'time time' },
{ oid => '1105',
  n => 'time_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'time time' },
{ oid => '1106',
  n => 'time_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'time time' },
{ oid => '1107', descr => 'less-equal-greater',
  n => 'time_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'time time' },
{ oid => '1138', descr => 'larger of two',
  n => 'date_larger', is => 't', v => 'i', p => 's', rt => 'date', at => 'date date' },
{ oid => '1139', descr => 'smaller of two',
  n => 'date_smaller', is => 't', v => 'i', p => 's', rt => 'date', at => 'date date' },
{ oid => '1140',
  n => 'date_mi', is => 't', v => 'i', p => 's', rt => 'int4', at => 'date date' },
{ oid => '1141',
  n => 'date_pli', is => 't', v => 'i', p => 's', rt => 'date', at => 'date int4' },
{ oid => '1142',
  n => 'date_mii', is => 't', v => 'i', p => 's', rt => 'date', at => 'date int4' },
{ oid => '1143', descr => 'I/O',
  n => 'time_in', is => 't', v => 's', p => 's', rt => 'time', at => 'cstring oid int4' },
{ oid => '1144', descr => 'I/O',
  n => 'time_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'time' },
{ oid => '2909', descr => 'I/O typmod',
  n => 'timetypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2910', descr => 'I/O typmod',
  n => 'timetypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1145',
  n => 'time_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'time time' },

{ oid => '1146',
  n => 'circle_add_pt', is => 't', v => 'i', p => 's', rt => 'circle', at => 'circle point' },
{ oid => '1147',
  n => 'circle_sub_pt', is => 't', v => 'i', p => 's', rt => 'circle', at => 'circle point' },
{ oid => '1148',
  n => 'circle_mul_pt', is => 't', v => 'i', p => 's', rt => 'circle', at => 'circle point' },
{ oid => '1149',
  n => 'circle_div_pt', is => 't', v => 'i', p => 's', rt => 'circle', at => 'circle point' },

{ oid => '1150', descr => 'I/O',
  n => 'timestamptz_in', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'cstring oid int4' },
{ oid => '1151', descr => 'I/O',
  n => 'timestamptz_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'timestamptz' },
{ oid => '2907', descr => 'I/O typmod',
  n => 'timestamptztypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2908', descr => 'I/O typmod',
  n => 'timestamptztypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1152',
  n => 'timestamptz_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz', s => 'timestamp_eq' },
{ oid => '1153',
  n => 'timestamptz_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz', s => 'timestamp_ne' },
{ oid => '1154',
  n => 'timestamptz_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz', s => 'timestamp_lt' },
{ oid => '1155',
  n => 'timestamptz_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz', s => 'timestamp_le' },
{ oid => '1156',
  n => 'timestamptz_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz', s => 'timestamp_ge' },
{ oid => '1157',
  n => 'timestamptz_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz', s => 'timestamp_gt' },
{ oid => '1158', descr => 'convert UNIX epoch to timestamptz',
  n => 'to_timestamp', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'float8', s => 'float8_timestamptz' },
{ oid => '3995', descr => 'transform a time zone adjustment',
  n => 'timestamp_zone_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '1159', descr => 'adjust timestamp to new time zone',
  n => 'timezone', protransform => 'timestamp_zone_transform', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'text timestamptz', s => 'timestamptz_zone' },

{ oid => '1160', descr => 'I/O',
  n => 'interval_in', is => 't', v => 's', p => 's', rt => 'interval', at => 'cstring oid int4' },
{ oid => '1161', descr => 'I/O',
  n => 'interval_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'interval' },
{ oid => '2903', descr => 'I/O typmod',
  n => 'intervaltypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2904', descr => 'I/O typmod',
  n => 'intervaltypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1162',
  n => 'interval_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval interval' },
{ oid => '1163',
  n => 'interval_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval interval' },
{ oid => '1164',
  n => 'interval_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval interval' },
{ oid => '1165',
  n => 'interval_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval interval' },
{ oid => '1166',
  n => 'interval_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval interval' },
{ oid => '1167',
  n => 'interval_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval interval' },
{ oid => '1168',
  n => 'interval_um', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval' },
{ oid => '1169',
  n => 'interval_pl', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval interval' },
{ oid => '1170',
  n => 'interval_mi', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval interval' },
{ oid => '1171', descr => 'extract field from timestamp with time zone',
  n => 'date_part', is => 't', v => 's', p => 's', rt => 'float8', at => 'text timestamptz', s => 'timestamptz_part' },
{ oid => '1172', descr => 'extract field from interval',
  n => 'date_part', is => 't', v => 'i', p => 's', rt => 'float8', at => 'text interval', s => 'interval_part' },
{ oid => '1173', descr => 'convert abstime to timestamp with time zone',
  n => 'timestamptz', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'abstime', s => 'abstime_timestamptz' },
{ oid => '1174', descr => 'convert date to timestamp with time zone',
  n => 'timestamptz', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'date', s => 'date_timestamptz' },
{ oid => '2711', descr => 'promote groups of 24 hours to numbers of days and promote groups of 30 days to numbers of months',
  n => 'justify_interval', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'interval_justify_interval' },
{ oid => '1175', descr => 'promote groups of 24 hours to numbers of days',
  n => 'justify_hours', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'interval_justify_hours' },
{ oid => '1295', descr => 'promote groups of 30 days to numbers of months',
  n => 'justify_days', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'interval_justify_days' },
{ oid => '1176', descr => 'convert date and time to timestamp with time zone',
  n => 'timestamptz', prolang => '14', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'date time', s => 'select cast(($1 + $2) as timestamp with time zone)' },
{ oid => '1177', descr => 'convert reltime to interval',
  n => 'interval', is => 't', v => 'i', p => 's', rt => 'interval', at => 'reltime', s => 'reltime_interval' },
{ oid => '1178', descr => 'convert timestamp with time zone to date',
  n => 'date', is => 't', v => 's', p => 's', rt => 'date', at => 'timestamptz', s => 'timestamptz_date' },
{ oid => '1179', descr => 'convert abstime to date',
  n => 'date', is => 't', v => 's', p => 's', rt => 'date', at => 'abstime', s => 'abstime_date' },
{ oid => '1180', descr => 'convert timestamp with time zone to abstime',
  n => 'abstime', is => 't', v => 'i', p => 's', rt => 'abstime', at => 'timestamptz', s => 'timestamptz_abstime' },
{ oid => '1181', descr => 'age of a transaction ID, in transactions before current transaction',
  n => 'age', is => 't', v => 's', p => 'r', rt => 'int4', at => 'xid', s => 'xid_age' },
{ oid => '3939', descr => 'age of a multi-transaction ID, in multi-transactions before current multi-transaction',
  n => 'mxid_age', is => 't', v => 's', p => 's', rt => 'int4', at => 'xid' },

{ oid => '1188',
  n => 'timestamptz_mi', is => 't', v => 'i', p => 's', rt => 'interval', at => 'timestamptz timestamptz', s => 'timestamp_mi' },
{ oid => '1189',
  n => 'timestamptz_pl_interval', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'timestamptz interval' },
{ oid => '1190',
  n => 'timestamptz_mi_interval', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'timestamptz interval' },
{ oid => '1194', descr => 'convert interval to reltime',
  n => 'reltime', is => 't', v => 'i', p => 's', rt => 'reltime', at => 'interval', s => 'interval_reltime' },
{ oid => '1195', descr => 'smaller of two',
  n => 'timestamptz_smaller', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'timestamptz timestamptz', s => 'timestamp_smaller' },
{ oid => '1196', descr => 'larger of two',
  n => 'timestamptz_larger', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'timestamptz timestamptz', s => 'timestamp_larger' },
{ oid => '1197', descr => 'smaller of two',
  n => 'interval_smaller', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval interval' },
{ oid => '1198', descr => 'larger of two',
  n => 'interval_larger', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval interval' },
{ oid => '1199', descr => 'date difference preserving months and years',
  n => 'age', is => 't', v => 'i', p => 's', rt => 'interval', at => 'timestamptz timestamptz', s => 'timestamptz_age' },

# OIDS 1200 - 1299

{ oid => '3918', descr => 'transform an interval length coercion',
  n => 'interval_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '1200', descr => 'adjust interval precision',
  n => 'interval', protransform => 'interval_transform', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval int4', s => 'interval_scale' },

{ oid => '1215', descr => 'get description for object id and catalog name',
  n => 'obj_description', prolang => '14', procost => '100', is => 't', v => 's', p => 's', rt => 'text', at => 'oid name', s => 'select description from pg_catalog.pg_description where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = PGNSP) and objsubid = 0' },
{ oid => '1216', descr => 'get description for table column',
  n => 'col_description', prolang => '14', procost => '100', is => 't', v => 's', p => 's', rt => 'text', at => 'oid int4', s => 'select description from pg_catalog.pg_description where objoid = $1 and classoid = \'\'pg_catalog.pg_class\'\'::pg_catalog.regclass and objsubid = $2' },
{ oid => '1993', descr => 'get description for object id and shared catalog name',
  n => 'shobj_description', prolang => '14', procost => '100', is => 't', v => 's', p => 's', rt => 'text', at => 'oid name', s => 'select description from pg_catalog.pg_shdescription where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = PGNSP)' },

{ oid => '1217', descr => 'truncate timestamp with time zone to specified units',
  n => 'date_trunc', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'text timestamptz', s => 'timestamptz_trunc' },
{ oid => '1218', descr => 'truncate interval to specified units',
  n => 'date_trunc', is => 't', v => 'i', p => 's', rt => 'interval', at => 'text interval', s => 'interval_trunc' },

{ oid => '1219', descr => 'increment',
  n => 'int8inc', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8' },
{ oid => '3546', descr => 'decrement',
  n => 'int8dec', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8' },
{ oid => '2804', descr => 'increment, ignores second argument',
  n => 'int8inc_any', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 any' },
{ oid => '3547', descr => 'decrement, ignores second argument',
  n => 'int8dec_any', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 any' },
{ oid => '1230',
  n => 'int8abs', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8' },

{ oid => '1236', descr => 'larger of two',
  n => 'int8larger', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '1237', descr => 'smaller of two',
  n => 'int8smaller', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },

{ oid => '1238',
  n => 'texticregexeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '1239',
  n => 'texticregexne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '1240',
  n => 'nameicregexeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },
{ oid => '1241',
  n => 'nameicregexne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },

{ oid => '1251',
  n => 'int4abs', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4' },
{ oid => '1253',
  n => 'int2abs', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2' },

{ oid => '1271', descr => 'intervals overlap?',
  n => 'overlaps', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz timetz timetz', s => 'overlaps_timetz' },
{ oid => '1272',
  n => 'datetime_pl', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'date time', s => 'datetime_timestamp' },
{ oid => '1273', descr => 'extract field from time with time zone',
  n => 'date_part', is => 't', v => 'i', p => 's', rt => 'float8', at => 'text timetz', s => 'timetz_part' },
{ oid => '1274',
  n => 'int84pl', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },
{ oid => '1275',
  n => 'int84mi', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },
{ oid => '1276',
  n => 'int84mul', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },
{ oid => '1277',
  n => 'int84div', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },
{ oid => '1278',
  n => 'int48pl', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int4 int8' },
{ oid => '1279',
  n => 'int48mi', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int4 int8' },
{ oid => '1280',
  n => 'int48mul', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int4 int8' },
{ oid => '1281',
  n => 'int48div', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int4 int8' },

{ oid => '837',
  n => 'int82pl', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int2' },
{ oid => '838',
  n => 'int82mi', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int2' },
{ oid => '839',
  n => 'int82mul', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int2' },
{ oid => '840',
  n => 'int82div', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int2' },
{ oid => '841',
  n => 'int28pl', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int2 int8' },
{ oid => '942',
  n => 'int28mi', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int2 int8' },
{ oid => '943',
  n => 'int28mul', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int2 int8' },
{ oid => '948',
  n => 'int28div', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int2 int8' },

{ oid => '1287', descr => 'convert int8 to oid',
  n => 'oid', is => 't', v => 'i', p => 's', rt => 'oid', at => 'int8', s => 'i8tooid' },
{ oid => '1288', descr => 'convert oid to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'oid', s => 'oidtoi8' },

{ oid => '1291', descr => 'trigger to suppress updates when new and old records match',
  n => 'suppress_redundant_updates_trigger', is => 't', p => 's', rt => 'trigger', at => '' },

{ oid => '1292',
  n => 'tideq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tid tid' },
{ oid => '1293', descr => 'latest tid of a tuple',
  n => 'currtid', is => 't', rt => 'tid', at => 'oid tid', s => 'currtid_byreloid' },
{ oid => '1294', descr => 'latest tid of a tuple',
  n => 'currtid2', is => 't', rt => 'tid', at => 'text tid', s => 'currtid_byrelname' },
{ oid => '1265',
  n => 'tidne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tid tid' },
{ oid => '2790',
  n => 'tidgt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tid tid' },
{ oid => '2791',
  n => 'tidlt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tid tid' },
{ oid => '2792',
  n => 'tidge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tid tid' },
{ oid => '2793',
  n => 'tidle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tid tid' },
{ oid => '2794', descr => 'less-equal-greater',
  n => 'bttidcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'tid tid' },
{ oid => '2795', descr => 'larger of two',
  n => 'tidlarger', is => 't', v => 'i', p => 's', rt => 'tid', at => 'tid tid' },
{ oid => '2796', descr => 'smaller of two',
  n => 'tidsmaller', is => 't', v => 'i', p => 's', rt => 'tid', at => 'tid tid' },

{ oid => '1296',
  n => 'timedate_pl', prolang => '14', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'time date', s => 'select ($2 + $1)' },
{ oid => '1297',
  n => 'datetimetz_pl', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'date timetz', s => 'datetimetz_timestamptz' },
{ oid => '1298',
  n => 'timetzdate_pl', prolang => '14', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'timetz date', s => 'select ($2 + $1)' },
{ oid => '1299', descr => 'current transaction time',
  n => 'now', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => '' },
{ oid => '2647', descr => 'current transaction time',
  n => 'transaction_timestamp', is => 't', v => 's', p => 's', rt => 'timestamptz', at => '', s => 'now' },
{ oid => '2648', descr => 'current statement time',
  n => 'statement_timestamp', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => '' },
{ oid => '2649', descr => 'current clock time',
  n => 'clock_timestamp', is => 't', p => 's', rt => 'timestamptz', at => '' },

# OIDS 1300 - 1399

{ oid => '1300', descr => 'restriction selectivity for position-comparison operators',
  n => 'positionsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1301', descr => 'join selectivity for position-comparison operators',
  n => 'positionjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1302', descr => 'restriction selectivity for containment comparison operators',
  n => 'contsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1303', descr => 'join selectivity for containment comparison operators',
  n => 'contjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },

{ oid => '1304', descr => 'intervals overlap?',
  n => 'overlaps', v => 'i', p => 's', rt => 'bool', at => 'timestamptz timestamptz timestamptz timestamptz', s => 'overlaps_timestamp' },
{ oid => '1305', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 's', p => 's', rt => 'bool', at => 'timestamptz interval timestamptz interval', s => 'select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))' },
{ oid => '1306', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamptz timestamptz interval', s => 'select ($1, $2) overlaps ($3, ($3 + $4))' },
{ oid => '1307', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 's', p => 's', rt => 'bool', at => 'timestamptz interval timestamptz timestamptz', s => 'select ($1, ($1 + $2)) overlaps ($3, $4)' },

{ oid => '1308', descr => 'intervals overlap?',
  n => 'overlaps', v => 'i', p => 's', rt => 'bool', at => 'time time time time', s => 'overlaps_time' },
{ oid => '1309', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 'i', p => 's', rt => 'bool', at => 'time interval time interval', s => 'select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))' },
{ oid => '1310', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 'i', p => 's', rt => 'bool', at => 'time time time interval', s => 'select ($1, $2) overlaps ($3, ($3 + $4))' },
{ oid => '1311', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 'i', p => 's', rt => 'bool', at => 'time interval time time', s => 'select ($1, ($1 + $2)) overlaps ($3, $4)' },

{ oid => '1312', descr => 'I/O',
  n => 'timestamp_in', is => 't', v => 's', p => 's', rt => 'timestamp', at => 'cstring oid int4' },
{ oid => '1313', descr => 'I/O',
  n => 'timestamp_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'timestamp' },
{ oid => '2905', descr => 'I/O typmod',
  n => 'timestamptypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2906', descr => 'I/O typmod',
  n => 'timestamptypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1314', descr => 'less-equal-greater',
  n => 'timestamptz_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'timestamptz timestamptz', s => 'timestamp_cmp' },
{ oid => '1315', descr => 'less-equal-greater',
  n => 'interval_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'interval interval' },
{ oid => '1316', descr => 'convert timestamp to time',
  n => 'time', is => 't', v => 'i', p => 's', rt => 'time', at => 'timestamp', s => 'timestamp_time' },

{ oid => '1317', descr => 'length',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text', s => 'textlen' },
{ oid => '1318', descr => 'character length',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar', s => 'bpcharlen' },

{ oid => '1319',
  n => 'xideqint4', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'xid int4', s => 'xideq' },
{ oid => '3309',
  n => 'xidneqint4', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'xid int4', s => 'xidneq' },

{ oid => '1326',
  n => 'interval_div', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval float8' },

{ oid => '1339', descr => 'base 10 logarithm',
  n => 'dlog10', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '1340', descr => 'base 10 logarithm',
  n => 'log', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dlog10' },
{ oid => '1341', descr => 'natural logarithm',
  n => 'ln', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dlog1' },
{ oid => '1342', descr => 'round to nearest integer',
  n => 'round', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dround' },
{ oid => '1343', descr => 'truncate to integer',
  n => 'trunc', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dtrunc' },
{ oid => '1344', descr => 'square root',
  n => 'sqrt', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dsqrt' },
{ oid => '1345', descr => 'cube root',
  n => 'cbrt', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dcbrt' },
{ oid => '1346', descr => 'exponentiation',
  n => 'pow', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'dpow' },
{ oid => '1368', descr => 'exponentiation',
  n => 'power', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'dpow' },
{ oid => '1347', descr => 'natural exponential (e^x)',
  n => 'exp', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dexp' },

# This form of obj_description is now deprecated, since it will fail if
# OIDs are not unique across system catalogs.  Use the other form instead.
{ oid => '1348', descr => 'deprecated, use two-argument form instead',
  n => 'obj_description', prolang => '14', procost => '100', is => 't', v => 's', p => 's', rt => 'text', at => 'oid', s => 'select description from pg_catalog.pg_description where objoid = $1 and objsubid = 0' },

{ oid => '1349', descr => 'print type names of oidvector field',
  n => 'oidvectortypes', is => 't', v => 's', p => 's', rt => 'text', at => 'oidvector' },

{ oid => '1350', descr => 'I/O',
  n => 'timetz_in', is => 't', v => 's', p => 's', rt => 'timetz', at => 'cstring oid int4' },
{ oid => '1351', descr => 'I/O',
  n => 'timetz_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'timetz' },
{ oid => '2911', descr => 'I/O typmod',
  n => 'timetztypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2912', descr => 'I/O typmod',
  n => 'timetztypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '1352',
  n => 'timetz_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz' },
{ oid => '1353',
  n => 'timetz_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz' },
{ oid => '1354',
  n => 'timetz_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz' },
{ oid => '1355',
  n => 'timetz_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz' },
{ oid => '1356',
  n => 'timetz_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz' },
{ oid => '1357',
  n => 'timetz_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timetz timetz' },
{ oid => '1358', descr => 'less-equal-greater',
  n => 'timetz_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'timetz timetz' },
{ oid => '1359', descr => 'convert date and time with time zone to timestamp with time zone',
  n => 'timestamptz', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'date timetz', s => 'datetimetz_timestamptz' },

{ oid => '1364', descr => 'convert abstime to time',
  n => 'time', prolang => '14', is => 't', v => 's', p => 's', rt => 'time', at => 'abstime', s => 'select cast(cast($1 as timestamp without time zone) as pg_catalog.time)' },

{ oid => '1367', descr => 'character length',
  n => 'character_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar', s => 'bpcharlen' },
{ oid => '1369', descr => 'character length',
  n => 'character_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text', s => 'textlen' },

{ oid => '1370', descr => 'convert time to interval',
  n => 'interval', is => 't', v => 'i', p => 's', rt => 'interval', at => 'time', s => 'time_interval' },
{ oid => '1372', descr => 'character length',
  n => 'char_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar', s => 'bpcharlen' },
{ oid => '1374', descr => 'octet length',
  n => 'octet_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text', s => 'textoctetlen' },
{ oid => '1375', descr => 'octet length',
  n => 'octet_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar', s => 'bpcharoctetlen' },

{ oid => '1377', descr => 'larger of two',
  n => 'time_larger', is => 't', v => 'i', p => 's', rt => 'time', at => 'time time' },
{ oid => '1378', descr => 'smaller of two',
  n => 'time_smaller', is => 't', v => 'i', p => 's', rt => 'time', at => 'time time' },
{ oid => '1379', descr => 'larger of two',
  n => 'timetz_larger', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz timetz' },
{ oid => '1380', descr => 'smaller of two',
  n => 'timetz_smaller', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz timetz' },

{ oid => '1381', descr => 'character length',
  n => 'char_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text', s => 'textlen' },

{ oid => '1382', descr => 'extract field from abstime',
  n => 'date_part', prolang => '14', is => 't', v => 's', p => 's', rt => 'float8', at => 'text abstime', s => 'select pg_catalog.date_part($1, cast($2 as timestamp with time zone))' },
{ oid => '1383', descr => 'extract field from reltime',
  n => 'date_part', prolang => '14', is => 't', v => 's', p => 's', rt => 'float8', at => 'text reltime', s => 'select pg_catalog.date_part($1, cast($2 as pg_catalog.interval))' },
{ oid => '1384', descr => 'extract field from date',
  n => 'date_part', prolang => '14', is => 't', v => 'i', p => 's', rt => 'float8', at => 'text date', s => 'select pg_catalog.date_part($1, cast($2 as timestamp without time zone))' },
{ oid => '1385', descr => 'extract field from time',
  n => 'date_part', is => 't', v => 'i', p => 's', rt => 'float8', at => 'text time', s => 'time_part' },
{ oid => '1386', descr => 'date difference from today preserving months and years',
  n => 'age', prolang => '14', is => 't', v => 's', p => 's', rt => 'interval', at => 'timestamptz', s => 'select pg_catalog.age(cast(current_date as timestamp with time zone), $1)' },

{ oid => '1388', descr => 'convert timestamp with time zone to time with time zone',
  n => 'timetz', is => 't', v => 's', p => 's', rt => 'timetz', at => 'timestamptz', s => 'timestamptz_timetz' },

{ oid => '1373', descr => 'finite date?',
  n => 'isfinite', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date', s => 'date_finite' },
{ oid => '1389', descr => 'finite timestamp?',
  n => 'isfinite', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamptz', s => 'timestamp_finite' },
{ oid => '1390', descr => 'finite interval?',
  n => 'isfinite', is => 't', v => 'i', p => 's', rt => 'bool', at => 'interval', s => 'interval_finite' },

{ oid => '1376', descr => 'factorial',
  n => 'factorial', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'numeric_fac' },
{ oid => '1394', descr => 'absolute value',
  n => 'abs', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4', s => 'float4abs' },
{ oid => '1395', descr => 'absolute value',
  n => 'abs', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'float8abs' },
{ oid => '1396', descr => 'absolute value',
  n => 'abs', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8', s => 'int8abs' },
{ oid => '1397', descr => 'absolute value',
  n => 'abs', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'int4abs' },
{ oid => '1398', descr => 'absolute value',
  n => 'abs', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2', s => 'int2abs' },

# OIDS 1400 - 1499

{ oid => '1400', descr => 'convert varchar to name',
  n => 'name', is => 't', v => 'i', p => 's', rt => 'name', at => 'varchar', s => 'text_name' },
{ oid => '1401', descr => 'convert name to varchar',
  n => 'varchar', is => 't', v => 'i', p => 's', rt => 'varchar', at => 'name', s => 'name_text' },

{ oid => '1402', descr => 'current schema name',
  n => 'current_schema', is => 't', v => 's', p => 's', rt => 'name', at => '' },
{ oid => '1403', descr => 'current schema search list',
  n => 'current_schemas', is => 't', v => 's', p => 's', rt => '_name', at => 'bool' },

{ oid => '1404', descr => 'substitute portion of string',
  n => 'overlay', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text int4 int4', s => 'textoverlay' },
{ oid => '1405', descr => 'substitute portion of string',
  n => 'overlay', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text int4', s => 'textoverlay_no_len' },

{ oid => '1406', descr => 'vertically aligned',
  n => 'isvertical', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point', s => 'point_vert' },
{ oid => '1407', descr => 'horizontally aligned',
  n => 'ishorizontal', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point point', s => 'point_horiz' },
{ oid => '1408', descr => 'parallel',
  n => 'isparallel', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg', s => 'lseg_parallel' },
{ oid => '1409', descr => 'perpendicular',
  n => 'isperp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg', s => 'lseg_perp' },
{ oid => '1410', descr => 'vertical',
  n => 'isvertical', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg', s => 'lseg_vertical' },
{ oid => '1411', descr => 'horizontal',
  n => 'ishorizontal', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg', s => 'lseg_horizontal' },
{ oid => '1412', descr => 'parallel',
  n => 'isparallel', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line line', s => 'line_parallel' },
{ oid => '1413', descr => 'perpendicular',
  n => 'isperp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line line', s => 'line_perp' },
{ oid => '1414', descr => 'vertical',
  n => 'isvertical', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line', s => 'line_vertical' },
{ oid => '1415', descr => 'horizontal',
  n => 'ishorizontal', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line', s => 'line_horizontal' },
{ oid => '1416', descr => 'center of',
  n => 'point', is => 't', v => 'i', p => 's', rt => 'point', at => 'circle', s => 'circle_center' },

{ oid => '1419', descr => 'convert interval to time',
  n => 'time', is => 't', v => 'i', p => 's', rt => 'time', at => 'interval', s => 'interval_time' },

{ oid => '1421', descr => 'convert points to box',
  n => 'box', is => 't', v => 'i', p => 's', rt => 'box', at => 'point point', s => 'points_box' },
{ oid => '1422',
  n => 'box_add', is => 't', v => 'i', p => 's', rt => 'box', at => 'box point' },
{ oid => '1423',
  n => 'box_sub', is => 't', v => 'i', p => 's', rt => 'box', at => 'box point' },
{ oid => '1424',
  n => 'box_mul', is => 't', v => 'i', p => 's', rt => 'box', at => 'box point' },
{ oid => '1425',
  n => 'box_div', is => 't', v => 'i', p => 's', rt => 'box', at => 'box point' },
{ oid => '1426',
  n => 'path_contain_pt', prolang => '14', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path point', s => 'select pg_catalog.on_ppath($2, $1)' },
{ oid => '1428',
  n => 'poly_contain_pt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon point' },
{ oid => '1429',
  n => 'pt_contained_poly', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point polygon' },

{ oid => '1430', descr => 'path closed?',
  n => 'isclosed', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path', s => 'path_isclosed' },
{ oid => '1431', descr => 'path open?',
  n => 'isopen', is => 't', v => 'i', p => 's', rt => 'bool', at => 'path', s => 'path_isopen' },
{ oid => '1432',
  n => 'path_npoints', is => 't', v => 'i', p => 's', rt => 'int4', at => 'path' },

# pclose and popen might better be named close and open, but that crashes initdb.
# - thomas 97/04/20
{ oid => '1433', descr => 'close path',
  n => 'pclose', is => 't', v => 'i', p => 's', rt => 'path', at => 'path', s => 'path_close' },
{ oid => '1434', descr => 'open path',
  n => 'popen', is => 't', v => 'i', p => 's', rt => 'path', at => 'path', s => 'path_open' },

{ oid => '1435',
  n => 'path_add', is => 't', v => 'i', p => 's', rt => 'path', at => 'path path' },
{ oid => '1436',
  n => 'path_add_pt', is => 't', v => 'i', p => 's', rt => 'path', at => 'path point' },
{ oid => '1437',
  n => 'path_sub_pt', is => 't', v => 'i', p => 's', rt => 'path', at => 'path point' },
{ oid => '1438',
  n => 'path_mul_pt', is => 't', v => 'i', p => 's', rt => 'path', at => 'path point' },
{ oid => '1439',
  n => 'path_div_pt', is => 't', v => 'i', p => 's', rt => 'path', at => 'path point' },

{ oid => '1440', descr => 'convert x, y to point',
  n => 'point', is => 't', v => 'i', p => 's', rt => 'point', at => 'float8 float8', s => 'construct_point' },
{ oid => '1441',
  n => 'point_add', is => 't', v => 'i', p => 's', rt => 'point', at => 'point point' },
{ oid => '1442',
  n => 'point_sub', is => 't', v => 'i', p => 's', rt => 'point', at => 'point point' },
{ oid => '1443',
  n => 'point_mul', is => 't', v => 'i', p => 's', rt => 'point', at => 'point point' },
{ oid => '1444',
  n => 'point_div', is => 't', v => 'i', p => 's', rt => 'point', at => 'point point' },

{ oid => '1445',
  n => 'poly_npoints', is => 't', v => 'i', p => 's', rt => 'int4', at => 'polygon' },
{ oid => '1446', descr => 'convert polygon to bounding box',
  n => 'box', is => 't', v => 'i', p => 's', rt => 'box', at => 'polygon', s => 'poly_box' },
{ oid => '1447', descr => 'convert polygon to path',
  n => 'path', is => 't', v => 'i', p => 's', rt => 'path', at => 'polygon', s => 'poly_path' },
{ oid => '1448', descr => 'convert box to polygon',
  n => 'polygon', is => 't', v => 'i', p => 's', rt => 'polygon', at => 'box', s => 'box_poly' },
{ oid => '1449', descr => 'convert path to polygon',
  n => 'polygon', is => 't', v => 'i', p => 's', rt => 'polygon', at => 'path', s => 'path_poly' },

{ oid => '1450', descr => 'I/O',
  n => 'circle_in', is => 't', v => 'i', p => 's', rt => 'circle', at => 'cstring' },
{ oid => '1451', descr => 'I/O',
  n => 'circle_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'circle' },
{ oid => '1452',
  n => 'circle_same', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1453',
  n => 'circle_contain', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1454',
  n => 'circle_left', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1455',
  n => 'circle_overleft', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1456',
  n => 'circle_overright', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1457',
  n => 'circle_right', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1458',
  n => 'circle_contained', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1459',
  n => 'circle_overlap', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1460',
  n => 'circle_below', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1461',
  n => 'circle_above', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1462',
  n => 'circle_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1463',
  n => 'circle_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1464',
  n => 'circle_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1465',
  n => 'circle_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1466',
  n => 'circle_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1467',
  n => 'circle_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '1468', descr => 'area of circle',
  n => 'area', is => 't', v => 'i', p => 's', rt => 'float8', at => 'circle', s => 'circle_area' },
{ oid => '1469', descr => 'diameter of circle',
  n => 'diameter', is => 't', v => 'i', p => 's', rt => 'float8', at => 'circle', s => 'circle_diameter' },
{ oid => '1470', descr => 'radius of circle',
  n => 'radius', is => 't', v => 'i', p => 's', rt => 'float8', at => 'circle', s => 'circle_radius' },
{ oid => '1471',
  n => 'circle_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'circle circle' },
{ oid => '1472',
  n => 'circle_center', is => 't', v => 'i', p => 's', rt => 'point', at => 'circle' },
{ oid => '1473', descr => 'convert point and radius to circle',
  n => 'circle', is => 't', v => 'i', p => 's', rt => 'circle', at => 'point float8', s => 'cr_circle' },
{ oid => '1474', descr => 'convert polygon to circle',
  n => 'circle', is => 't', v => 'i', p => 's', rt => 'circle', at => 'polygon', s => 'poly_circle' },
{ oid => '1475', descr => 'convert vertex count and circle to polygon',
  n => 'polygon', is => 't', v => 'i', p => 's', rt => 'polygon', at => 'int4 circle', s => 'circle_poly' },
{ oid => '1476',
  n => 'dist_pc', is => 't', v => 'i', p => 's', rt => 'float8', at => 'point circle' },
{ oid => '1477',
  n => 'circle_contain_pt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle point' },
{ oid => '1478',
  n => 'pt_contained_circle', is => 't', v => 'i', p => 's', rt => 'bool', at => 'point circle' },
{ oid => '4091', descr => 'convert point to empty box',
  n => 'box', is => 't', v => 'i', p => 's', rt => 'box', at => 'point', s => 'point_box' },
{ oid => '1479', descr => 'convert box to circle',
  n => 'circle', is => 't', v => 'i', p => 's', rt => 'circle', at => 'box', s => 'box_circle' },
{ oid => '1480', descr => 'convert circle to box',
  n => 'box', is => 't', v => 'i', p => 's', rt => 'box', at => 'circle', s => 'circle_box' },
{ oid => '1481', descr => 'convert to tinterval',
  n => 'tinterval', is => 't', v => 'i', p => 's', rt => 'tinterval', at => 'abstime abstime', s => 'mktinterval' },

{ oid => '1482',
  n => 'lseg_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '1483',
  n => 'lseg_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '1484',
  n => 'lseg_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '1485',
  n => 'lseg_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '1486',
  n => 'lseg_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'lseg lseg' },
{ oid => '1487',
  n => 'lseg_length', is => 't', v => 'i', p => 's', rt => 'float8', at => 'lseg' },
{ oid => '1488',
  n => 'close_ls', is => 't', v => 'i', p => 's', rt => 'point', at => 'line lseg' },
{ oid => '1489',
  n => 'close_lseg', is => 't', v => 'i', p => 's', rt => 'point', at => 'lseg lseg' },

{ oid => '1490', descr => 'I/O',
  n => 'line_in', is => 't', v => 'i', p => 's', rt => 'line', at => 'cstring' },
{ oid => '1491', descr => 'I/O',
  n => 'line_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'line' },
{ oid => '1492',
  n => 'line_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line line' },
{ oid => '1493', descr => 'construct line from points',
  n => 'line', is => 't', v => 'i', p => 's', rt => 'line', at => 'point point', s => 'line_construct_pp' },
{ oid => '1494',
  n => 'line_interpt', is => 't', v => 'i', p => 's', rt => 'point', at => 'line line' },
{ oid => '1495',
  n => 'line_intersect', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line line' },
{ oid => '1496',
  n => 'line_parallel', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line line' },
{ oid => '1497',
  n => 'line_perp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line line' },
{ oid => '1498',
  n => 'line_vertical', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line' },
{ oid => '1499',
  n => 'line_horizontal', is => 't', v => 'i', p => 's', rt => 'bool', at => 'line' },

# OIDS 1500 - 1599

{ oid => '1530', descr => 'distance between endpoints',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'float8', at => 'lseg', s => 'lseg_length' },
{ oid => '1531', descr => 'sum of path segments',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'float8', at => 'path', s => 'path_length' },

{ oid => '1532', descr => 'center of',
  n => 'point', is => 't', v => 'i', p => 's', rt => 'point', at => 'lseg', s => 'lseg_center' },
{ oid => '1533', descr => 'center of',
  n => 'point', is => 't', v => 'i', p => 's', rt => 'point', at => 'path', s => 'path_center' },
{ oid => '1534', descr => 'center of',
  n => 'point', is => 't', v => 'i', p => 's', rt => 'point', at => 'box', s => 'box_center' },
{ oid => '1540', descr => 'center of',
  n => 'point', is => 't', v => 'i', p => 's', rt => 'point', at => 'polygon', s => 'poly_center' },
{ oid => '1541', descr => 'diagonal of',
  n => 'lseg', is => 't', v => 'i', p => 's', rt => 'lseg', at => 'box', s => 'box_diagonal' },
{ oid => '1542', descr => 'center of',
  n => 'center', is => 't', v => 'i', p => 's', rt => 'point', at => 'box', s => 'box_center' },
{ oid => '1543', descr => 'center of',
  n => 'center', is => 't', v => 'i', p => 's', rt => 'point', at => 'circle', s => 'circle_center' },
{ oid => '1544', descr => 'convert circle to 12-vertex polygon',
  n => 'polygon', prolang => '14', is => 't', v => 'i', p => 's', rt => 'polygon', at => 'circle', s => 'select pg_catalog.polygon(12, $1)' },
{ oid => '1545', descr => 'number of points',
  n => 'npoints', is => 't', v => 'i', p => 's', rt => 'int4', at => 'path', s => 'path_npoints' },
{ oid => '1556', descr => 'number of points',
  n => 'npoints', is => 't', v => 'i', p => 's', rt => 'int4', at => 'polygon', s => 'poly_npoints' },

{ oid => '1564', descr => 'I/O',
  n => 'bit_in', is => 't', v => 'i', p => 's', rt => 'bit', at => 'cstring oid int4' },
{ oid => '1565', descr => 'I/O',
  n => 'bit_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'bit' },
{ oid => '2919', descr => 'I/O typmod',
  n => 'bittypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2920', descr => 'I/O typmod',
  n => 'bittypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },

{ oid => '1569', descr => 'matches LIKE expression',
  n => 'like', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text', s => 'textlike' },
{ oid => '1570', descr => 'does not match LIKE expression',
  n => 'notlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text', s => 'textnlike' },
{ oid => '1571', descr => 'matches LIKE expression',
  n => 'like', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text', s => 'namelike' },
{ oid => '1572', descr => 'does not match LIKE expression',
  n => 'notlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text', s => 'namenlike' },

# SEQUENCE functions
{ oid => '1574', descr => 'sequence next value',
  n => 'nextval', is => 't', rt => 'int8', at => 'regclass', s => 'nextval_oid' },
{ oid => '1575', descr => 'sequence current value',
  n => 'currval', is => 't', rt => 'int8', at => 'regclass', s => 'currval_oid' },
{ oid => '1576', descr => 'set sequence value',
  n => 'setval', is => 't', rt => 'int8', at => 'regclass int8', s => 'setval_oid' },
{ oid => '1765', descr => 'set sequence value and is_called status',
  n => 'setval', is => 't', rt => 'int8', at => 'regclass int8 bool', s => 'setval3_oid' },
{ oid => '3078', descr => 'sequence parameters, for use by information schema',
  n => 'pg_sequence_parameters', is => 't', v => 's', p => 's', rt => 'record', at => 'oid', proallargtypes => '{oid,int8,int8,int8,int8,bool,int8,oid}', proargmodes => '{i,o,o,o,o,o,o,o}', proargnames => '{sequence_oid,start_value,minimum_value,maximum_value,increment,cycle_option,cache_size,data_type}' },
{ oid => '4032', descr => 'sequence last value',
  n => 'pg_sequence_last_value', is => 't', rt => 'int8', at => 'regclass' },

{ oid => '1579', descr => 'I/O',
  n => 'varbit_in', is => 't', v => 'i', p => 's', rt => 'varbit', at => 'cstring oid int4' },
{ oid => '1580', descr => 'I/O',
  n => 'varbit_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'varbit' },
{ oid => '2902', descr => 'I/O typmod',
  n => 'varbittypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2921', descr => 'I/O typmod',
  n => 'varbittypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },

{ oid => '1581',
  n => 'biteq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bit bit' },
{ oid => '1582',
  n => 'bitne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bit bit' },
{ oid => '1592',
  n => 'bitge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bit bit' },
{ oid => '1593',
  n => 'bitgt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bit bit' },
{ oid => '1594',
  n => 'bitle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bit bit' },
{ oid => '1595',
  n => 'bitlt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bit bit' },
{ oid => '1596', descr => 'less-equal-greater',
  n => 'bitcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit bit' },

{ oid => '1598', descr => 'random value',
  n => 'random', is => 't', p => 'r', rt => 'float8', at => '', s => 'drandom' },
{ oid => '1599', descr => 'set random seed',
  n => 'setseed', is => 't', p => 'r', rt => 'void', at => 'float8' },

# OIDS 1600 - 1699

{ oid => '1600', descr => 'arcsine',
  n => 'asin', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dasin' },
{ oid => '1601', descr => 'arccosine',
  n => 'acos', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dacos' },
{ oid => '1602', descr => 'arctangent',
  n => 'atan', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'datan' },
{ oid => '1603', descr => 'arctangent, two arguments',
  n => 'atan2', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'datan2' },
{ oid => '1604', descr => 'sine',
  n => 'sin', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dsin' },
{ oid => '1605', descr => 'cosine',
  n => 'cos', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dcos' },
{ oid => '1606', descr => 'tangent',
  n => 'tan', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dtan' },
{ oid => '1607', descr => 'cotangent',
  n => 'cot', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dcot' },

{ oid => '2731', descr => 'arcsine, degrees',
  n => 'asind', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dasind' },
{ oid => '2732', descr => 'arccosine, degrees',
  n => 'acosd', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dacosd' },
{ oid => '2733', descr => 'arctangent, degrees',
  n => 'atand', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'datand' },
{ oid => '2734', descr => 'arctangent, two arguments, degrees',
  n => 'atan2d', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'datan2d' },
{ oid => '2735', descr => 'sine, degrees',
  n => 'sind', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dsind' },
{ oid => '2736', descr => 'cosine, degrees',
  n => 'cosd', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dcosd' },
{ oid => '2737', descr => 'tangent, degrees',
  n => 'tand', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dtand' },
{ oid => '2738', descr => 'cotangent, degrees',
  n => 'cotd', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'dcotd' },

{ oid => '1608', descr => 'radians to degrees',
  n => 'degrees', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '1609', descr => 'degrees to radians',
  n => 'radians', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '1610', descr => 'PI',
  n => 'pi', is => 't', v => 'i', p => 's', rt => 'float8', at => '', s => 'dpi' },

{ oid => '1618',
  n => 'interval_mul', is => 't', v => 'i', p => 's', rt => 'interval', at => 'interval float8' },

{ oid => '1620', descr => 'convert first char to int4',
  n => 'ascii', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text' },
{ oid => '1621', descr => 'convert int4 to char',
  n => 'chr', is => 't', v => 'i', p => 's', rt => 'text', at => 'int4' },
{ oid => '1622', descr => 'replicate string n times',
  n => 'repeat', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4' },

{ oid => '1623', descr => 'convert SQL99 regexp pattern to POSIX style',
  n => 'similar_escape', v => 'i', p => 's', rt => 'text', at => 'text text' },

{ oid => '1624',
  n => 'mul_d_interval', is => 't', v => 'i', p => 's', rt => 'interval', at => 'float8 interval' },

{ oid => '1631',
  n => 'bpcharlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'textlike' },
{ oid => '1632',
  n => 'bpcharnlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'textnlike' },

{ oid => '1633',
  n => 'texticlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '1634',
  n => 'texticnlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '1635',
  n => 'nameiclike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },
{ oid => '1636',
  n => 'nameicnlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'name text' },
{ oid => '1637', descr => 'convert LIKE pattern to use backslash escapes',
  n => 'like_escape', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },

{ oid => '1656',
  n => 'bpcharicregexeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'texticregexeq' },
{ oid => '1657',
  n => 'bpcharicregexne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'texticregexne' },
{ oid => '1658',
  n => 'bpcharregexeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'textregexeq' },
{ oid => '1659',
  n => 'bpcharregexne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'textregexne' },
{ oid => '1660',
  n => 'bpchariclike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'texticlike' },
{ oid => '1661',
  n => 'bpcharicnlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar text', s => 'texticnlike' },

# Oracle Compatibility Related Functions - By Edmund Mergl <E.Mergl@bawue.de>
{ oid => '868', descr => 'position of substring',
  n => 'strpos', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text', s => 'textpos' },
{ oid => '870', descr => 'lowercase',
  n => 'lower', is => 't', v => 'i', p => 's', rt => 'text', at => 'text' },
{ oid => '871', descr => 'uppercase',
  n => 'upper', is => 't', v => 'i', p => 's', rt => 'text', at => 'text' },
{ oid => '872', descr => 'capitalize each word',
  n => 'initcap', is => 't', v => 'i', p => 's', rt => 'text', at => 'text' },
{ oid => '873', descr => 'left-pad string to length',
  n => 'lpad', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4 text' },
{ oid => '874', descr => 'right-pad string to length',
  n => 'rpad', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4 text' },
{ oid => '875', descr => 'trim selected characters from left end of string',
  n => 'ltrim', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },
{ oid => '876', descr => 'trim selected characters from right end of string',
  n => 'rtrim', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },
{ oid => '877', descr => 'extract portion of string',
  n => 'substr', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4 int4', s => 'text_substr' },
{ oid => '878', descr => 'map a set of characters appearing in string',
  n => 'translate', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text text' },
{ oid => '879', descr => 'left-pad string to length',
  n => 'lpad', prolang => '14', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'select pg_catalog.lpad($1, $2, \'\' \'\')' },
{ oid => '880', descr => 'right-pad string to length',
  n => 'rpad', prolang => '14', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'select pg_catalog.rpad($1, $2, \'\' \'\')' },
{ oid => '881', descr => 'trim spaces from left end of string',
  n => 'ltrim', is => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'ltrim1' },
{ oid => '882', descr => 'trim spaces from right end of string',
  n => 'rtrim', is => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'rtrim1' },
{ oid => '883', descr => 'extract portion of string',
  n => 'substr', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'text_substr_no_len' },
{ oid => '884', descr => 'trim selected characters from both ends of string',
  n => 'btrim', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text' },
{ oid => '885', descr => 'trim spaces from both ends of string',
  n => 'btrim', is => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'btrim1' },

{ oid => '936', descr => 'extract portion of string',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4 int4', s => 'text_substr' },
{ oid => '937', descr => 'extract portion of string',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'text_substr_no_len' },
{ oid => '2087', descr => 'replace all occurrences in string of old_substr with new_substr',
  n => 'replace', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text text', s => 'replace_text' },
{ oid => '2284', descr => 'replace text using regexp',
  n => 'regexp_replace', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text text', s => 'textregexreplace_noopt' },
{ oid => '2285', descr => 'replace text using regexp',
  n => 'regexp_replace', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text text text', s => 'textregexreplace' },
{ oid => '3396', descr => 'find first match for regexp',
  n => 'regexp_match', is => 't', v => 'i', p => 's', rt => '_text', at => 'text text', s => 'regexp_match_no_flags' },
{ oid => '3397', descr => 'find first match for regexp',
  n => 'regexp_match', is => 't', v => 'i', p => 's', rt => '_text', at => 'text text text' },
{ oid => '2763', descr => 'find match(es) for regexp',
  n => 'regexp_matches', prorows => '1', is => 't', proretset => 't', v => 'i', p => 's', rt => '_text', at => 'text text', s => 'regexp_matches_no_flags' },
{ oid => '2764', descr => 'find match(es) for regexp',
  n => 'regexp_matches', prorows => '10', is => 't', proretset => 't', v => 'i', p => 's', rt => '_text', at => 'text text text' },
{ oid => '2088', descr => 'split string by field_sep and return field_num',
  n => 'split_part', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text int4', s => 'split_text' },
{ oid => '2765', descr => 'split string by pattern',
  n => 'regexp_split_to_table', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'text', at => 'text text', s => 'regexp_split_to_table_no_flags' },
{ oid => '2766', descr => 'split string by pattern',
  n => 'regexp_split_to_table', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'text', at => 'text text text' },
{ oid => '2767', descr => 'split string by pattern',
  n => 'regexp_split_to_array', is => 't', v => 'i', p => 's', rt => '_text', at => 'text text', s => 'regexp_split_to_array_no_flags' },
{ oid => '2768', descr => 'split string by pattern',
  n => 'regexp_split_to_array', is => 't', v => 'i', p => 's', rt => '_text', at => 'text text text' },
{ oid => '2089', descr => 'convert int4 number to hex',
  n => 'to_hex', is => 't', v => 'i', p => 's', rt => 'text', at => 'int4', s => 'to_hex32' },
{ oid => '2090', descr => 'convert int8 number to hex',
  n => 'to_hex', is => 't', v => 'i', p => 's', rt => 'text', at => 'int8', s => 'to_hex64' },

# for character set encoding support

# return database encoding name
{ oid => '1039', descr => 'encoding name of current database',
  n => 'getdatabaseencoding', is => 't', v => 's', p => 's', rt => 'name', at => '' },

# return client encoding name i.e. session encoding
{ oid => '810', descr => 'encoding name of current database',
  n => 'pg_client_encoding', is => 't', v => 's', p => 's', rt => 'name', at => '' },

{ oid => '1713', descr => 'length of string in specified encoding',
  n => 'length', is => 't', v => 's', p => 's', rt => 'int4', at => 'bytea name', s => 'length_in_encoding' },

{ oid => '1714', descr => 'convert string with specified source encoding name',
  n => 'convert_from', is => 't', v => 's', p => 's', rt => 'text', at => 'bytea name', s => 'pg_convert_from' },

{ oid => '1717', descr => 'convert string with specified destination encoding name',
  n => 'convert_to', is => 't', v => 's', p => 's', rt => 'bytea', at => 'text name', s => 'pg_convert_to' },

{ oid => '1813', descr => 'convert string with specified encoding names',
  n => 'convert', is => 't', v => 's', p => 's', rt => 'bytea', at => 'bytea name name', s => 'pg_convert' },

{ oid => '1264', descr => 'convert encoding name to encoding id',
  n => 'pg_char_to_encoding', is => 't', v => 's', p => 's', rt => 'int4', at => 'name', s => 'PG_char_to_encoding' },

{ oid => '1597', descr => 'convert encoding id to encoding name',
  n => 'pg_encoding_to_char', is => 't', v => 's', p => 's', rt => 'name', at => 'int4', s => 'PG_encoding_to_char' },

{ oid => '2319', descr => 'maximum octet length of a character in given encoding',
  n => 'pg_encoding_max_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'pg_encoding_max_length_sql' },

{ oid => '1638',
  n => 'oidgt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oid oid' },
{ oid => '1639',
  n => 'oidge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'oid oid' },

# System-view support functions
{ oid => '1573', descr => 'source text of a rule',
  n => 'pg_get_ruledef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '1640', descr => 'select statement of a view',
  n => 'pg_get_viewdef', is => 't', v => 's', p => 'r', rt => 'text', at => 'text', s => 'pg_get_viewdef_name' },
{ oid => '1641', descr => 'select statement of a view',
  n => 'pg_get_viewdef', is => 't', v => 's', p => 'r', rt => 'text', at => 'oid' },
{ oid => '1642', descr => 'role name by OID (with fallback)',
  n => 'pg_get_userbyid', is => 't', v => 's', p => 's', rt => 'name', at => 'oid' },
{ oid => '1643', descr => 'index description',
  n => 'pg_get_indexdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '3415', descr => 'extended statistics object description',
  n => 'pg_get_statisticsobjdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '3352', descr => 'partition key description',
  n => 'pg_get_partkeydef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '3408', descr => 'partition constraint description',
  n => 'pg_get_partition_constraintdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '1662', descr => 'trigger description',
  n => 'pg_get_triggerdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '1387', descr => 'constraint description',
  n => 'pg_get_constraintdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '1716', descr => 'deparse an encoded expression',
  n => 'pg_get_expr', is => 't', v => 's', p => 's', rt => 'text', at => 'pg_node_tree oid' },
{ oid => '1665', descr => 'name of sequence for a serial column',
  n => 'pg_get_serial_sequence', is => 't', v => 's', p => 's', rt => 'text', at => 'text text' },
{ oid => '2098', descr => 'definition of a function',
  n => 'pg_get_functiondef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '2162', descr => 'argument list of a function',
  n => 'pg_get_function_arguments', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '2232', descr => 'identity argument list of a function',
  n => 'pg_get_function_identity_arguments', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '2165', descr => 'result type of a function',
  n => 'pg_get_function_result', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },
{ oid => '3808', descr => 'function argument default',
  n => 'pg_get_function_arg_default', is => 't', v => 's', p => 's', rt => 'text', at => 'oid int4' },

{ oid => '1686', descr => 'list of SQL keywords',
  n => 'pg_get_keywords', procost => '10', prorows => '400', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{text,char,text}', proargmodes => '{o,o,o}', proargnames => '{word,catcode,catdesc}' },

{ oid => '2289', descr => 'convert generic options array to name/value table',
  n => 'pg_options_to_table', prorows => '3', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '_text', proallargtypes => '{_text,text,text}', proargmodes => '{i,o,o}', proargnames => '{options_array,option_name,option_value}' },

{ oid => '1619', descr => 'type of the argument',
  n => 'pg_typeof', v => 's', p => 's', rt => 'regtype', at => 'any' },
{ oid => '3162', descr => 'collation of the argument; implementation of the COLLATION FOR expression',
  n => 'pg_collation_for', v => 's', p => 's', rt => 'text', at => 'any' },

{ oid => '3842', descr => 'is a relation insertable/updatable/deletable',
  n => 'pg_relation_is_updatable', procost => '10', is => 't', v => 's', p => 's', rt => 'int4', at => 'regclass bool' },
{ oid => '3843', descr => 'is a column updatable',
  n => 'pg_column_is_updatable', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'regclass int2 bool' },

{ oid => '6120', descr => 'oid of replica identity index if any',
  n => 'pg_get_replica_identity_index', procost => '10', is => 't', v => 's', p => 's', rt => 'regclass', at => 'regclass' },

# Deferrable unique constraint trigger
{ oid => '1250', descr => 'deferred UNIQUE constraint check',
  n => 'unique_key_recheck', is => 't', p => 's', rt => 'trigger', at => '' },

# Generic referential integrity constraint triggers
{ oid => '1644', descr => 'referential integrity FOREIGN KEY ... REFERENCES',
  n => 'RI_FKey_check_ins', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1645', descr => 'referential integrity FOREIGN KEY ... REFERENCES',
  n => 'RI_FKey_check_upd', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1646', descr => 'referential integrity ON DELETE CASCADE',
  n => 'RI_FKey_cascade_del', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1647', descr => 'referential integrity ON UPDATE CASCADE',
  n => 'RI_FKey_cascade_upd', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1648', descr => 'referential integrity ON DELETE RESTRICT',
  n => 'RI_FKey_restrict_del', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1649', descr => 'referential integrity ON UPDATE RESTRICT',
  n => 'RI_FKey_restrict_upd', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1650', descr => 'referential integrity ON DELETE SET NULL',
  n => 'RI_FKey_setnull_del', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1651', descr => 'referential integrity ON UPDATE SET NULL',
  n => 'RI_FKey_setnull_upd', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1652', descr => 'referential integrity ON DELETE SET DEFAULT',
  n => 'RI_FKey_setdefault_del', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1653', descr => 'referential integrity ON UPDATE SET DEFAULT',
  n => 'RI_FKey_setdefault_upd', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1654', descr => 'referential integrity ON DELETE NO ACTION',
  n => 'RI_FKey_noaction_del', is => 't', p => 's', rt => 'trigger', at => '' },
{ oid => '1655', descr => 'referential integrity ON UPDATE NO ACTION',
  n => 'RI_FKey_noaction_upd', is => 't', p => 's', rt => 'trigger', at => '' },

{ oid => '1666',
  n => 'varbiteq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'varbit varbit', s => 'biteq' },
{ oid => '1667',
  n => 'varbitne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'varbit varbit', s => 'bitne' },
{ oid => '1668',
  n => 'varbitge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'varbit varbit', s => 'bitge' },
{ oid => '1669',
  n => 'varbitgt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'varbit varbit', s => 'bitgt' },
{ oid => '1670',
  n => 'varbitle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'varbit varbit', s => 'bitle' },
{ oid => '1671',
  n => 'varbitlt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'varbit varbit', s => 'bitlt' },
{ oid => '1672', descr => 'less-equal-greater',
  n => 'varbitcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'varbit varbit', s => 'bitcmp' },

# avoid the C names bitand and bitor, since they are C++ keywords
{ oid => '1673',
  n => 'bitand', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit bit', s => 'bit_and' },
{ oid => '1674',
  n => 'bitor', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit bit', s => 'bit_or' },
{ oid => '1675',
  n => 'bitxor', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit bit' },
{ oid => '1676',
  n => 'bitnot', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit' },
{ oid => '1677',
  n => 'bitshiftleft', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit int4' },
{ oid => '1678',
  n => 'bitshiftright', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit int4' },
{ oid => '1679',
  n => 'bitcat', is => 't', v => 'i', p => 's', rt => 'varbit', at => 'varbit varbit' },
{ oid => '1680', descr => 'extract portion of bitstring',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit int4 int4', s => 'bitsubstr' },
{ oid => '1681', descr => 'bitstring length',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit', s => 'bitlength' },
{ oid => '1682', descr => 'octet length',
  n => 'octet_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit', s => 'bitoctetlength' },
{ oid => '1683', descr => 'convert int4 to bitstring',
  n => 'bit', is => 't', v => 'i', p => 's', rt => 'bit', at => 'int4 int4', s => 'bitfromint4' },
{ oid => '1684', descr => 'convert bitstring to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit', s => 'bittoint4' },

{ oid => '1685', descr => 'adjust bit() to typmod length',
  n => 'bit', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit int4 bool' },
{ oid => '3158', descr => 'transform a varbit length coercion',
  n => 'varbit_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '1687', descr => 'adjust varbit() to typmod length',
  n => 'varbit', protransform => 'varbit_transform', is => 't', v => 'i', p => 's', rt => 'varbit', at => 'varbit int4 bool' },

{ oid => '1698', descr => 'position of sub-bitstring',
  n => 'position', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit bit', s => 'bitposition' },
{ oid => '1699', descr => 'extract portion of bitstring',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit int4', s => 'bitsubstr_no_len' },

{ oid => '3030', descr => 'substitute portion of bitstring',
  n => 'overlay', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit bit int4 int4', s => 'bitoverlay' },
{ oid => '3031', descr => 'substitute portion of bitstring',
  n => 'overlay', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit bit int4', s => 'bitoverlay_no_len' },
{ oid => '3032', descr => 'get bit',
  n => 'get_bit', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit int4', s => 'bitgetbit' },
{ oid => '3033', descr => 'set bit',
  n => 'set_bit', is => 't', v => 'i', p => 's', rt => 'bit', at => 'bit int4 int4', s => 'bitsetbit' },

# for macaddr type support
{ oid => '436', descr => 'I/O',
  n => 'macaddr_in', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'cstring' },
{ oid => '437', descr => 'I/O',
  n => 'macaddr_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'macaddr' },

{ oid => '753', descr => 'MACADDR manufacturer fields',
  n => 'trunc', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'macaddr', s => 'macaddr_trunc' },

{ oid => '830',
  n => 'macaddr_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr macaddr' },
{ oid => '831',
  n => 'macaddr_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr macaddr' },
{ oid => '832',
  n => 'macaddr_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr macaddr' },
{ oid => '833',
  n => 'macaddr_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr macaddr' },
{ oid => '834',
  n => 'macaddr_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr macaddr' },
{ oid => '835',
  n => 'macaddr_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr macaddr' },
{ oid => '836', descr => 'less-equal-greater',
  n => 'macaddr_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'macaddr macaddr' },
{ oid => '3144',
  n => 'macaddr_not', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'macaddr' },
{ oid => '3145',
  n => 'macaddr_and', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'macaddr macaddr' },
{ oid => '3146',
  n => 'macaddr_or', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'macaddr macaddr' },
{ oid => '3359', descr => 'sort support',
  n => 'macaddr_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },

# for macaddr8 type support
{ oid => '4110', descr => 'I/O',
  n => 'macaddr8_in', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'cstring' },
{ oid => '4111', descr => 'I/O',
  n => 'macaddr8_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'macaddr8' },

{ oid => '4112', descr => 'MACADDR8 manufacturer fields',
  n => 'trunc', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'macaddr8', s => 'macaddr8_trunc' },

{ oid => '4113',
  n => 'macaddr8_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr8 macaddr8' },
{ oid => '4114',
  n => 'macaddr8_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr8 macaddr8' },
{ oid => '4115',
  n => 'macaddr8_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr8 macaddr8' },
{ oid => '4116',
  n => 'macaddr8_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr8 macaddr8' },
{ oid => '4117',
  n => 'macaddr8_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr8 macaddr8' },
{ oid => '4118',
  n => 'macaddr8_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'macaddr8 macaddr8' },
{ oid => '4119', descr => 'less-equal-greater',
  n => 'macaddr8_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'macaddr8 macaddr8' },
{ oid => '4120',
  n => 'macaddr8_not', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'macaddr8' },
{ oid => '4121',
  n => 'macaddr8_and', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'macaddr8 macaddr8' },
{ oid => '4122',
  n => 'macaddr8_or', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'macaddr8 macaddr8' },
{ oid => '4123', descr => 'convert macaddr to macaddr8',
  n => 'macaddr8', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'macaddr', s => 'macaddrtomacaddr8' },
{ oid => '4124', descr => 'convert macaddr8 to macaddr',
  n => 'macaddr', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'macaddr8', s => 'macaddr8tomacaddr' },
{ oid => '4125', descr => 'set 7th bit in macaddr8',
  n => 'macaddr8_set7bit', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'macaddr8' },

# for inet type support
{ oid => '910', descr => 'I/O',
  n => 'inet_in', is => 't', v => 'i', p => 's', rt => 'inet', at => 'cstring' },
{ oid => '911', descr => 'I/O',
  n => 'inet_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'inet' },

# for cidr type support
{ oid => '1267', descr => 'I/O',
  n => 'cidr_in', is => 't', v => 'i', p => 's', rt => 'cidr', at => 'cstring' },
{ oid => '1427', descr => 'I/O',
  n => 'cidr_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'cidr' },

# these are used for both inet and cidr
{ oid => '920',
  n => 'network_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '921',
  n => 'network_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '922',
  n => 'network_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '923',
  n => 'network_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '924',
  n => 'network_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '925',
  n => 'network_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '3562', descr => 'larger of two',
  n => 'network_larger', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet inet' },
{ oid => '3563', descr => 'smaller of two',
  n => 'network_smaller', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet inet' },
{ oid => '926', descr => 'less-equal-greater',
  n => 'network_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'inet inet' },
{ oid => '927',
  n => 'network_sub', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '928',
  n => 'network_subeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '929',
  n => 'network_sup', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '930',
  n => 'network_supeq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '3551',
  n => 'network_overlap', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },

# inet/cidr functions
{ oid => '598', descr => 'abbreviated display of inet value',
  n => 'abbrev', is => 't', v => 'i', p => 's', rt => 'text', at => 'inet', s => 'inet_abbrev' },
{ oid => '599', descr => 'abbreviated display of cidr value',
  n => 'abbrev', is => 't', v => 'i', p => 's', rt => 'text', at => 'cidr', s => 'cidr_abbrev' },
{ oid => '605', descr => 'change netmask of inet',
  n => 'set_masklen', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet int4', s => 'inet_set_masklen' },
{ oid => '635', descr => 'change netmask of cidr',
  n => 'set_masklen', is => 't', v => 'i', p => 's', rt => 'cidr', at => 'cidr int4', s => 'cidr_set_masklen' },
{ oid => '711', descr => 'address family (4 for IPv4, 6 for IPv6)',
  n => 'family', is => 't', v => 'i', p => 's', rt => 'int4', at => 'inet', s => 'network_family' },
{ oid => '683', descr => 'network part of address',
  n => 'network', is => 't', v => 'i', p => 's', rt => 'cidr', at => 'inet', s => 'network_network' },
{ oid => '696', descr => 'netmask of address',
  n => 'netmask', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet', s => 'network_netmask' },
{ oid => '697', descr => 'netmask length',
  n => 'masklen', is => 't', v => 'i', p => 's', rt => 'int4', at => 'inet', s => 'network_masklen' },
{ oid => '698', descr => 'broadcast address of network',
  n => 'broadcast', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet', s => 'network_broadcast' },
{ oid => '699', descr => 'show address octets only',
  n => 'host', is => 't', v => 'i', p => 's', rt => 'text', at => 'inet', s => 'network_host' },
{ oid => '730', descr => 'show all parts of inet/cidr value',
  n => 'text', is => 't', v => 'i', p => 's', rt => 'text', at => 'inet', s => 'network_show' },
{ oid => '1362', descr => 'hostmask of address',
  n => 'hostmask', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet', s => 'network_hostmask' },
{ oid => '1715', descr => 'convert inet to cidr',
  n => 'cidr', is => 't', v => 'i', p => 's', rt => 'cidr', at => 'inet', s => 'inet_to_cidr' },

{ oid => '2196', descr => 'inet address of the client',
  n => 'inet_client_addr', v => 's', p => 'r', rt => 'inet', at => '' },
{ oid => '2197', descr => 'client\'s port number for this connection',
  n => 'inet_client_port', v => 's', p => 'r', rt => 'int4', at => '' },
{ oid => '2198', descr => 'inet address of the server',
  n => 'inet_server_addr', v => 's', p => 's', rt => 'inet', at => '' },
{ oid => '2199', descr => 'server\'s port number for this connection',
  n => 'inet_server_port', v => 's', p => 's', rt => 'int4', at => '' },

{ oid => '2627',
  n => 'inetnot', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet' },
{ oid => '2628',
  n => 'inetand', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet inet' },
{ oid => '2629',
  n => 'inetor', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet inet' },
{ oid => '2630',
  n => 'inetpl', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet int8' },
{ oid => '2631',
  n => 'int8pl_inet', prolang => '14', is => 't', v => 'i', p => 's', rt => 'inet', at => 'int8 inet', s => 'select $2 + $1' },
{ oid => '2632',
  n => 'inetmi_int8', is => 't', v => 'i', p => 's', rt => 'inet', at => 'inet int8' },
{ oid => '2633',
  n => 'inetmi', is => 't', v => 'i', p => 's', rt => 'int8', at => 'inet inet' },
{ oid => '4071', descr => 'are the addresses from the same family?',
  n => 'inet_same_family', is => 't', v => 'i', p => 's', rt => 'bool', at => 'inet inet' },
{ oid => '4063', descr => 'the smallest network which includes both of the given networks',
  n => 'inet_merge', is => 't', v => 'i', p => 's', rt => 'cidr', at => 'inet inet' },

# GiST support for inet and cidr
{ oid => '3553', descr => 'GiST support',
  n => 'inet_gist_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal inet int2 oid internal' },
{ oid => '3554', descr => 'GiST support',
  n => 'inet_gist_union', is => 't', v => 'i', p => 's', rt => 'inet', at => 'internal internal' },
{ oid => '3555', descr => 'GiST support',
  n => 'inet_gist_compress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3573', descr => 'GiST support',
  n => 'inet_gist_fetch', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3557', descr => 'GiST support',
  n => 'inet_gist_penalty', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal' },
{ oid => '3558', descr => 'GiST support',
  n => 'inet_gist_picksplit', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '3559', descr => 'GiST support',
  n => 'inet_gist_same', is => 't', v => 'i', p => 's', rt => 'internal', at => 'inet inet internal' },

# SP-GiST support for inet and cidr
{ oid => '3795', descr => 'SP-GiST support',
  n => 'inet_spg_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3796', descr => 'SP-GiST support',
  n => 'inet_spg_choose', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3797', descr => 'SP-GiST support',
  n => 'inet_spg_picksplit', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3798', descr => 'SP-GiST support',
  n => 'inet_spg_inner_consistent', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3799', descr => 'SP-GiST support',
  n => 'inet_spg_leaf_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal' },

# Selectivity estimation for inet and cidr
{ oid => '3560', descr => 'restriction selectivity for network operators',
  n => 'networksel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '3561', descr => 'join selectivity for network operators',
  n => 'networkjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },

{ oid => '1690',
  n => 'time_mi_time', is => 't', v => 'i', p => 's', rt => 'interval', at => 'time time' },

{ oid => '1691',
  n => 'boolle', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '1692',
  n => 'boolge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '1693', descr => 'less-equal-greater',
  n => 'btboolcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bool bool' },

{ oid => '1688', descr => 'hash',
  n => 'time_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'time' },
{ oid => '3409', descr => 'hash',
  n => 'time_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'time int8' },
{ oid => '1696', descr => 'hash',
  n => 'timetz_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'timetz' },
{ oid => '3410', descr => 'hash',
  n => 'timetz_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'timetz int8' },
{ oid => '1697', descr => 'hash',
  n => 'interval_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'interval' },
{ oid => '3418', descr => 'hash',
  n => 'interval_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'interval int8' },

# OID's 1700 - 1799 NUMERIC data type

{ oid => '1701', descr => 'I/O',
  n => 'numeric_in', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'cstring oid int4' },
{ oid => '1702', descr => 'I/O',
  n => 'numeric_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'numeric' },
{ oid => '2917', descr => 'I/O typmod',
  n => 'numerictypmodin', is => 't', v => 'i', p => 's', rt => 'int4', at => '_cstring' },
{ oid => '2918', descr => 'I/O typmod',
  n => 'numerictypmodout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'int4' },
{ oid => '3157', descr => 'transform a numeric length coercion',
  n => 'numeric_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '1703', descr => 'adjust numeric to typmod precision/scale',
  n => 'numeric', protransform => 'numeric_transform', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric int4' },
{ oid => '1704',
  n => 'numeric_abs', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },
{ oid => '1705', descr => 'absolute value',
  n => 'abs', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_abs' },
{ oid => '1706', descr => 'sign of value',
  n => 'sign', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_sign' },
{ oid => '1707', descr => 'value rounded to \'scale\'',
  n => 'round', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric int4', s => 'numeric_round' },
{ oid => '1708', descr => 'value rounded to \'scale\' of zero',
  n => 'round', prolang => '14', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'select pg_catalog.round($1,0)' },
{ oid => '1709', descr => 'value truncated to \'scale\'',
  n => 'trunc', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric int4', s => 'numeric_trunc' },
{ oid => '1710', descr => 'value truncated to \'scale\' of zero',
  n => 'trunc', prolang => '14', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'select pg_catalog.trunc($1,0)' },
{ oid => '1711', descr => 'nearest integer >= value',
  n => 'ceil', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_ceil' },
{ oid => '2167', descr => 'nearest integer >= value',
  n => 'ceiling', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_ceil' },
{ oid => '1712', descr => 'nearest integer <= value',
  n => 'floor', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_floor' },
{ oid => '1718',
  n => 'numeric_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'numeric numeric' },
{ oid => '1719',
  n => 'numeric_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'numeric numeric' },
{ oid => '1720',
  n => 'numeric_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'numeric numeric' },
{ oid => '1721',
  n => 'numeric_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'numeric numeric' },
{ oid => '1722',
  n => 'numeric_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'numeric numeric' },
{ oid => '1723',
  n => 'numeric_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'numeric numeric' },
{ oid => '1724',
  n => 'numeric_add', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1725',
  n => 'numeric_sub', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1726',
  n => 'numeric_mul', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1727',
  n => 'numeric_div', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1728', descr => 'modulus',
  n => 'mod', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric', s => 'numeric_mod' },
{ oid => '1729',
  n => 'numeric_mod', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1730', descr => 'square root',
  n => 'sqrt', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_sqrt' },
{ oid => '1731', descr => 'square root',
  n => 'numeric_sqrt', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },
{ oid => '1732', descr => 'natural exponential (e^x)',
  n => 'exp', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_exp' },
{ oid => '1733', descr => 'natural exponential (e^x)',
  n => 'numeric_exp', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },
{ oid => '1734', descr => 'natural logarithm',
  n => 'ln', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'numeric_ln' },
{ oid => '1735', descr => 'natural logarithm',
  n => 'numeric_ln', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },
{ oid => '1736', descr => 'logarithm base m of n',
  n => 'log', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric', s => 'numeric_log' },
{ oid => '1737', descr => 'logarithm base m of n',
  n => 'numeric_log', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1738', descr => 'exponentiation',
  n => 'pow', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric', s => 'numeric_power' },
{ oid => '2169', descr => 'exponentiation',
  n => 'power', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric', s => 'numeric_power' },
{ oid => '1739',
  n => 'numeric_power', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '8888', descr => 'number of decimal digits in the fractional part',
  n => 'scale', is => 't', v => 'i', p => 's', rt => 'int4', at => 'numeric', s => 'numeric_scale' },
{ oid => '1740', descr => 'convert int4 to numeric',
  n => 'numeric', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'int4_numeric' },
{ oid => '1741', descr => 'base 10 logarithm',
  n => 'log', prolang => '14', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'select pg_catalog.log(10, $1)' },
{ oid => '1742', descr => 'convert float4 to numeric',
  n => 'numeric', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'float4', s => 'float4_numeric' },
{ oid => '1743', descr => 'convert float8 to numeric',
  n => 'numeric', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'float8', s => 'float8_numeric' },
{ oid => '1744', descr => 'convert numeric to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'numeric', s => 'numeric_int4' },
{ oid => '1745', descr => 'convert numeric to float4',
  n => 'float4', is => 't', v => 'i', p => 's', rt => 'float4', at => 'numeric', s => 'numeric_float4' },
{ oid => '1746', descr => 'convert numeric to float8',
  n => 'float8', is => 't', v => 'i', p => 's', rt => 'float8', at => 'numeric', s => 'numeric_float8' },
{ oid => '1973', descr => 'trunc(x/y)',
  n => 'div', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric', s => 'numeric_div_trunc' },
{ oid => '1980', descr => 'trunc(x/y)',
  n => 'numeric_div_trunc', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '2170', descr => 'bucket number of operand in equal-width histogram',
  n => 'width_bucket', is => 't', v => 'i', p => 's', rt => 'int4', at => 'numeric numeric numeric int4', s => 'width_bucket_numeric' },

{ oid => '1747',
  n => 'time_pl_interval', is => 't', v => 'i', p => 's', rt => 'time', at => 'time interval' },
{ oid => '1748',
  n => 'time_mi_interval', is => 't', v => 'i', p => 's', rt => 'time', at => 'time interval' },
{ oid => '1749',
  n => 'timetz_pl_interval', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz interval' },
{ oid => '1750',
  n => 'timetz_mi_interval', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz interval' },

{ oid => '1764', descr => 'increment by one',
  n => 'numeric_inc', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },
{ oid => '1766', descr => 'smaller of two',
  n => 'numeric_smaller', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1767', descr => 'larger of two',
  n => 'numeric_larger', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric' },
{ oid => '1769', descr => 'less-equal-greater',
  n => 'numeric_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'numeric numeric' },
{ oid => '3283', descr => 'sort support',
  n => 'numeric_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '1771',
  n => 'numeric_uminus', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },
{ oid => '1779', descr => 'convert numeric to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'numeric', s => 'numeric_int8' },
{ oid => '1781', descr => 'convert int8 to numeric',
  n => 'numeric', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'int8_numeric' },
{ oid => '1782', descr => 'convert int2 to numeric',
  n => 'numeric', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'int2_numeric' },
{ oid => '1783', descr => 'convert numeric to int2',
  n => 'int2', is => 't', v => 'i', p => 's', rt => 'int2', at => 'numeric', s => 'numeric_int2' },

# formatting
{ oid => '1770', descr => 'format timestamp with time zone to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'timestamptz text', s => 'timestamptz_to_char' },
{ oid => '1772', descr => 'format numeric to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'numeric text', s => 'numeric_to_char' },
{ oid => '1773', descr => 'format int4 to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'int4 text', s => 'int4_to_char' },
{ oid => '1774', descr => 'format int8 to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'int8 text', s => 'int8_to_char' },
{ oid => '1775', descr => 'format float4 to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'float4 text', s => 'float4_to_char' },
{ oid => '1776', descr => 'format float8 to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'float8 text', s => 'float8_to_char' },
{ oid => '1777', descr => 'convert text to numeric',
  n => 'to_number', is => 't', v => 's', p => 's', rt => 'numeric', at => 'text text', s => 'numeric_to_number' },
{ oid => '1778', descr => 'convert text to timestamp with time zone',
  n => 'to_timestamp', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'text text' },
{ oid => '1780', descr => 'convert text to date',
  n => 'to_date', is => 't', v => 's', p => 's', rt => 'date', at => 'text text' },
{ oid => '1768', descr => 'format interval to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'interval text', s => 'interval_to_char' },

{ oid => '1282', descr => 'quote an identifier for usage in a querystring',
  n => 'quote_ident', is => 't', v => 'i', p => 's', rt => 'text', at => 'text' },
{ oid => '1283', descr => 'quote a literal for usage in a querystring',
  n => 'quote_literal', is => 't', v => 'i', p => 's', rt => 'text', at => 'text' },
{ oid => '1285', descr => 'quote a data value for usage in a querystring',
  n => 'quote_literal', prolang => '14', is => 't', v => 's', p => 's', rt => 'text', at => 'anyelement', s => 'select pg_catalog.quote_literal($1::pg_catalog.text)' },
{ oid => '1289', descr => 'quote a possibly-null literal for usage in a querystring',
  n => 'quote_nullable', v => 'i', p => 's', rt => 'text', at => 'text' },
{ oid => '1290', descr => 'quote a possibly-null data value for usage in a querystring',
  n => 'quote_nullable', prolang => '14', v => 's', p => 's', rt => 'text', at => 'anyelement', s => 'select pg_catalog.quote_nullable($1::pg_catalog.text)' },

{ oid => '1798', descr => 'I/O',
  n => 'oidin', is => 't', v => 'i', p => 's', rt => 'oid', at => 'cstring' },
{ oid => '1799', descr => 'I/O',
  n => 'oidout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'oid' },

{ oid => '3058', descr => 'concatenate values',
  n => 'concat', provariadic => '2276', v => 's', p => 's', rt => 'text', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'text_concat' },
{ oid => '3059', descr => 'concatenate values with separators',
  n => 'concat_ws', provariadic => '2276', v => 's', p => 's', rt => 'text', at => 'text any', proallargtypes => '{text,any}', proargmodes => '{i,v}', s => 'text_concat_ws' },
{ oid => '3060', descr => 'extract the first n characters',
  n => 'left', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'text_left' },
{ oid => '3061', descr => 'extract the last n characters',
  n => 'right', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'text_right' },
{ oid => '3062', descr => 'reverse text',
  n => 'reverse', is => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'text_reverse' },
{ oid => '3539', descr => 'format text message',
  n => 'format', provariadic => '2276', v => 's', p => 's', rt => 'text', at => 'text any', proallargtypes => '{text,any}', proargmodes => '{i,v}', s => 'text_format' },
{ oid => '3540', descr => 'format text message',
  n => 'format', v => 's', p => 's', rt => 'text', at => 'text', s => 'text_format_nv' },

{ oid => '1810', descr => 'length in bits',
  n => 'bit_length', prolang => '14', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea', s => 'select pg_catalog.octet_length($1) * 8' },
{ oid => '1811', descr => 'length in bits',
  n => 'bit_length', prolang => '14', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text', s => 'select pg_catalog.octet_length($1) * 8' },
{ oid => '1812', descr => 'length in bits',
  n => 'bit_length', prolang => '14', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bit', s => 'select pg_catalog.length($1)' },

# Selectivity estimators for LIKE and related operators
{ oid => '1814', descr => 'restriction selectivity of ILIKE',
  n => 'iclikesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1815', descr => 'restriction selectivity of NOT ILIKE',
  n => 'icnlikesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1816', descr => 'join selectivity of ILIKE',
  n => 'iclikejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1817', descr => 'join selectivity of NOT ILIKE',
  n => 'icnlikejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1818', descr => 'restriction selectivity of regex match',
  n => 'regexeqsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1819', descr => 'restriction selectivity of LIKE',
  n => 'likesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1820', descr => 'restriction selectivity of case-insensitive regex match',
  n => 'icregexeqsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1821', descr => 'restriction selectivity of regex non-match',
  n => 'regexnesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1822', descr => 'restriction selectivity of NOT LIKE',
  n => 'nlikesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1823', descr => 'restriction selectivity of case-insensitive regex non-match',
  n => 'icregexnesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '1824', descr => 'join selectivity of regex match',
  n => 'regexeqjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1825', descr => 'join selectivity of LIKE',
  n => 'likejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1826', descr => 'join selectivity of case-insensitive regex match',
  n => 'icregexeqjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1827', descr => 'join selectivity of regex non-match',
  n => 'regexnejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1828', descr => 'join selectivity of NOT LIKE',
  n => 'nlikejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '1829', descr => 'join selectivity of case-insensitive regex non-match',
  n => 'icregexnejoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },

# Aggregate-related functions
{ oid => '1830', descr => 'aggregate final function',
  n => 'float8_avg', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2512', descr => 'aggregate final function',
  n => 'float8_var_pop', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '1831', descr => 'aggregate final function',
  n => 'float8_var_samp', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2513', descr => 'aggregate final function',
  n => 'float8_stddev_pop', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '1832', descr => 'aggregate final function',
  n => 'float8_stddev_samp', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '1833', descr => 'aggregate transition function',
  n => 'numeric_accum', v => 'i', p => 's', rt => 'internal', at => 'internal numeric' },
{ oid => '3341', descr => 'aggregate combine function',
  n => 'numeric_combine', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '2858', descr => 'aggregate transition function',
  n => 'numeric_avg_accum', v => 'i', p => 's', rt => 'internal', at => 'internal numeric' },
{ oid => '3337', descr => 'aggregate combine function',
  n => 'numeric_avg_combine', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '2740', descr => 'aggregate serial function',
  n => 'numeric_avg_serialize', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'internal' },
{ oid => '2741', descr => 'aggregate deserial function',
  n => 'numeric_avg_deserialize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'bytea internal' },
{ oid => '3335', descr => 'aggregate serial function',
  n => 'numeric_serialize', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'internal' },
{ oid => '3336', descr => 'aggregate deserial function',
  n => 'numeric_deserialize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'bytea internal' },
{ oid => '3548', descr => 'aggregate transition function',
  n => 'numeric_accum_inv', v => 'i', p => 's', rt => 'internal', at => 'internal numeric' },
{ oid => '1834', descr => 'aggregate transition function',
  n => 'int2_accum', v => 'i', p => 's', rt => 'internal', at => 'internal int2' },
{ oid => '1835', descr => 'aggregate transition function',
  n => 'int4_accum', v => 'i', p => 's', rt => 'internal', at => 'internal int4' },
{ oid => '1836', descr => 'aggregate transition function',
  n => 'int8_accum', v => 'i', p => 's', rt => 'internal', at => 'internal int8' },
{ oid => '3338', descr => 'aggregate combine function',
  n => 'numeric_poly_combine', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '3339', descr => 'aggregate serial function',
  n => 'numeric_poly_serialize', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'internal' },
{ oid => '3340', descr => 'aggregate deserial function',
  n => 'numeric_poly_deserialize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'bytea internal' },
{ oid => '2746', descr => 'aggregate transition function',
  n => 'int8_avg_accum', v => 'i', p => 's', rt => 'internal', at => 'internal int8' },
{ oid => '3567', descr => 'aggregate transition function',
  n => 'int2_accum_inv', v => 'i', p => 's', rt => 'internal', at => 'internal int2' },
{ oid => '3568', descr => 'aggregate transition function',
  n => 'int4_accum_inv', v => 'i', p => 's', rt => 'internal', at => 'internal int4' },
{ oid => '3569', descr => 'aggregate transition function',
  n => 'int8_accum_inv', v => 'i', p => 's', rt => 'internal', at => 'internal int8' },
{ oid => '3387', descr => 'aggregate transition function',
  n => 'int8_avg_accum_inv', v => 'i', p => 's', rt => 'internal', at => 'internal int8' },
{ oid => '2785', descr => 'aggregate combine function',
  n => 'int8_avg_combine', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '2786', descr => 'aggregate serial function',
  n => 'int8_avg_serialize', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'internal' },
{ oid => '2787', descr => 'aggregate deserial function',
  n => 'int8_avg_deserialize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'bytea internal' },
{ oid => '3324', descr => 'aggregate combine function',
  n => 'int4_avg_combine', is => 't', v => 'i', p => 's', rt => '_int8', at => '_int8 _int8' },
{ oid => '3178', descr => 'aggregate final function',
  n => 'numeric_sum', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '1837', descr => 'aggregate final function',
  n => 'numeric_avg', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '2514', descr => 'aggregate final function',
  n => 'numeric_var_pop', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '1838', descr => 'aggregate final function',
  n => 'numeric_var_samp', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '2596', descr => 'aggregate final function',
  n => 'numeric_stddev_pop', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '1839', descr => 'aggregate final function',
  n => 'numeric_stddev_samp', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '1840', descr => 'aggregate transition function',
  n => 'int2_sum', v => 'i', p => 's', rt => 'int8', at => 'int8 int2' },
{ oid => '1841', descr => 'aggregate transition function',
  n => 'int4_sum', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },
{ oid => '1842', descr => 'aggregate transition function',
  n => 'int8_sum', v => 'i', p => 's', rt => 'numeric', at => 'numeric int8' },
{ oid => '3388', descr => 'aggregate final function',
  n => 'numeric_poly_sum', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '3389', descr => 'aggregate final function',
  n => 'numeric_poly_avg', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '3390', descr => 'aggregate final function',
  n => 'numeric_poly_var_pop', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '3391', descr => 'aggregate final function',
  n => 'numeric_poly_var_samp', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '3392', descr => 'aggregate final function',
  n => 'numeric_poly_stddev_pop', v => 'i', p => 's', rt => 'numeric', at => 'internal' },
{ oid => '3393', descr => 'aggregate final function',
  n => 'numeric_poly_stddev_samp', v => 'i', p => 's', rt => 'numeric', at => 'internal' },

{ oid => '1843', descr => 'aggregate transition function',
  n => 'interval_accum', is => 't', v => 'i', p => 's', rt => '_interval', at => '_interval interval' },
{ oid => '3325', descr => 'aggregate combine function',
  n => 'interval_combine', is => 't', v => 'i', p => 's', rt => '_interval', at => '_interval _interval' },
{ oid => '3549', descr => 'aggregate transition function',
  n => 'interval_accum_inv', is => 't', v => 'i', p => 's', rt => '_interval', at => '_interval interval' },
{ oid => '1844', descr => 'aggregate final function',
  n => 'interval_avg', is => 't', v => 'i', p => 's', rt => 'interval', at => '_interval' },
{ oid => '1962', descr => 'aggregate transition function',
  n => 'int2_avg_accum', is => 't', v => 'i', p => 's', rt => '_int8', at => '_int8 int2' },
{ oid => '1963', descr => 'aggregate transition function',
  n => 'int4_avg_accum', is => 't', v => 'i', p => 's', rt => '_int8', at => '_int8 int4' },
{ oid => '3570', descr => 'aggregate transition function',
  n => 'int2_avg_accum_inv', is => 't', v => 'i', p => 's', rt => '_int8', at => '_int8 int2' },
{ oid => '3571', descr => 'aggregate transition function',
  n => 'int4_avg_accum_inv', is => 't', v => 'i', p => 's', rt => '_int8', at => '_int8 int4' },
{ oid => '1964', descr => 'aggregate final function',
  n => 'int8_avg', is => 't', v => 'i', p => 's', rt => 'numeric', at => '_int8' },
{ oid => '3572', descr => 'aggregate final function',
  n => 'int2int4_sum', is => 't', v => 'i', p => 's', rt => 'int8', at => '_int8' },
{ oid => '2805', descr => 'aggregate transition function',
  n => 'int8inc_float8_float8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 float8 float8' },
{ oid => '2806', descr => 'aggregate transition function',
  n => 'float8_regr_accum', is => 't', v => 'i', p => 's', rt => '_float8', at => '_float8 float8 float8' },
{ oid => '3342', descr => 'aggregate combine function',
  n => 'float8_regr_combine', is => 't', v => 'i', p => 's', rt => '_float8', at => '_float8 _float8' },
{ oid => '2807', descr => 'aggregate final function',
  n => 'float8_regr_sxx', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2808', descr => 'aggregate final function',
  n => 'float8_regr_syy', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2809', descr => 'aggregate final function',
  n => 'float8_regr_sxy', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2810', descr => 'aggregate final function',
  n => 'float8_regr_avgx', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2811', descr => 'aggregate final function',
  n => 'float8_regr_avgy', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2812', descr => 'aggregate final function',
  n => 'float8_regr_r2', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2813', descr => 'aggregate final function',
  n => 'float8_regr_slope', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2814', descr => 'aggregate final function',
  n => 'float8_regr_intercept', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2815', descr => 'aggregate final function',
  n => 'float8_covar_pop', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2816', descr => 'aggregate final function',
  n => 'float8_covar_samp', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },
{ oid => '2817', descr => 'aggregate final function',
  n => 'float8_corr', is => 't', v => 'i', p => 's', rt => 'float8', at => '_float8' },

{ oid => '3535', descr => 'aggregate transition function',
  n => 'string_agg_transfn', v => 'i', p => 's', rt => 'internal', at => 'internal text text' },
{ oid => '3536', descr => 'aggregate final function',
  n => 'string_agg_finalfn', v => 'i', p => 's', rt => 'text', at => 'internal' },
{ oid => '3538', descr => 'concatenate aggregate input into a string',
  n => 'string_agg', proisagg => 't', v => 'i', p => 's', rt => 'text', at => 'text text', s => 'aggregate_dummy' },
{ oid => '3543', descr => 'aggregate transition function',
  n => 'bytea_string_agg_transfn', v => 'i', p => 's', rt => 'internal', at => 'internal bytea bytea' },
{ oid => '3544', descr => 'aggregate final function',
  n => 'bytea_string_agg_finalfn', v => 'i', p => 's', rt => 'bytea', at => 'internal' },
{ oid => '3545', descr => 'concatenate aggregate input into a bytea',
  n => 'string_agg', proisagg => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea bytea', s => 'aggregate_dummy' },

# To ASCII conversion
{ oid => '1845', descr => 'encode text from DB encoding to ASCII text',
  n => 'to_ascii', is => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'to_ascii_default' },
{ oid => '1846', descr => 'encode text from encoding to ASCII text',
  n => 'to_ascii', is => 't', v => 'i', p => 's', rt => 'text', at => 'text int4', s => 'to_ascii_enc' },
{ oid => '1847', descr => 'encode text from encoding to ASCII text',
  n => 'to_ascii', is => 't', v => 'i', p => 's', rt => 'text', at => 'text name', s => 'to_ascii_encname' },

{ oid => '1848',
  n => 'interval_pl_time', prolang => '14', is => 't', v => 'i', p => 's', rt => 'time', at => 'interval time', s => 'select $2 + $1' },

{ oid => '1850',
  n => 'int28eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int8' },
{ oid => '1851',
  n => 'int28ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int8' },
{ oid => '1852',
  n => 'int28lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int8' },
{ oid => '1853',
  n => 'int28gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int8' },
{ oid => '1854',
  n => 'int28le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int8' },
{ oid => '1855',
  n => 'int28ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int2 int8' },

{ oid => '1856',
  n => 'int82eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int2' },
{ oid => '1857',
  n => 'int82ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int2' },
{ oid => '1858',
  n => 'int82lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int2' },
{ oid => '1859',
  n => 'int82gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int2' },
{ oid => '1860',
  n => 'int82le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int2' },
{ oid => '1861',
  n => 'int82ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 int2' },

{ oid => '1892',
  n => 'int2and', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '1893',
  n => 'int2or', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '1894',
  n => 'int2xor', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int2' },
{ oid => '1895',
  n => 'int2not', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2' },
{ oid => '1896',
  n => 'int2shl', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int4' },
{ oid => '1897',
  n => 'int2shr', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2 int4' },

{ oid => '1898',
  n => 'int4and', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '1899',
  n => 'int4or', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '1900',
  n => 'int4xor', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '1901',
  n => 'int4not', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4' },
{ oid => '1902',
  n => 'int4shl', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },
{ oid => '1903',
  n => 'int4shr', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4' },

{ oid => '1904',
  n => 'int8and', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '1905',
  n => 'int8or', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '1906',
  n => 'int8xor', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8' },
{ oid => '1907',
  n => 'int8not', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8' },
{ oid => '1908',
  n => 'int8shl', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },
{ oid => '1909',
  n => 'int8shr', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int4' },

{ oid => '1910',
  n => 'int8up', is => 't', v => 'i', p => 's', rt => 'int8', at => 'int8' },
{ oid => '1911',
  n => 'int2up', is => 't', v => 'i', p => 's', rt => 'int2', at => 'int2' },
{ oid => '1912',
  n => 'int4up', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4' },
{ oid => '1913',
  n => 'float4up', is => 't', v => 'i', p => 's', rt => 'float4', at => 'float4' },
{ oid => '1914',
  n => 'float8up', is => 't', v => 'i', p => 's', rt => 'float8', at => 'float8' },
{ oid => '1915',
  n => 'numeric_uplus', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric' },

{ oid => '1922', descr => 'user privilege on relation by username, rel name',
  n => 'has_table_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_table_privilege_name_name' },
{ oid => '1923', descr => 'user privilege on relation by username, rel oid',
  n => 'has_table_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_table_privilege_name_id' },
{ oid => '1924', descr => 'user privilege on relation by user oid, rel name',
  n => 'has_table_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_table_privilege_id_name' },
{ oid => '1925', descr => 'user privilege on relation by user oid, rel oid',
  n => 'has_table_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_table_privilege_id_id' },
{ oid => '1926', descr => 'current user privilege on relation by rel name',
  n => 'has_table_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_table_privilege_name' },
{ oid => '1927', descr => 'current user privilege on relation by rel oid',
  n => 'has_table_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_table_privilege_id' },

{ oid => '2181', descr => 'user privilege on sequence by username, seq name',
  n => 'has_sequence_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_sequence_privilege_name_name' },
{ oid => '2182', descr => 'user privilege on sequence by username, seq oid',
  n => 'has_sequence_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_sequence_privilege_name_id' },
{ oid => '2183', descr => 'user privilege on sequence by user oid, seq name',
  n => 'has_sequence_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_sequence_privilege_id_name' },
{ oid => '2184', descr => 'user privilege on sequence by user oid, seq oid',
  n => 'has_sequence_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_sequence_privilege_id_id' },
{ oid => '2185', descr => 'current user privilege on sequence by seq name',
  n => 'has_sequence_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_sequence_privilege_name' },
{ oid => '2186', descr => 'current user privilege on sequence by seq oid',
  n => 'has_sequence_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_sequence_privilege_id' },

{ oid => '3012', descr => 'user privilege on column by username, rel name, col name',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text text', s => 'has_column_privilege_name_name_name' },
{ oid => '3013', descr => 'user privilege on column by username, rel name, col attnum',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text int2 text', s => 'has_column_privilege_name_name_attnum' },
{ oid => '3014', descr => 'user privilege on column by username, rel oid, col name',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text text', s => 'has_column_privilege_name_id_name' },
{ oid => '3015', descr => 'user privilege on column by username, rel oid, col attnum',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid int2 text', s => 'has_column_privilege_name_id_attnum' },
{ oid => '3016', descr => 'user privilege on column by user oid, rel name, col name',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text text', s => 'has_column_privilege_id_name_name' },
{ oid => '3017', descr => 'user privilege on column by user oid, rel name, col attnum',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text int2 text', s => 'has_column_privilege_id_name_attnum' },
{ oid => '3018', descr => 'user privilege on column by user oid, rel oid, col name',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text text', s => 'has_column_privilege_id_id_name' },
{ oid => '3019', descr => 'user privilege on column by user oid, rel oid, col attnum',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid int2 text', s => 'has_column_privilege_id_id_attnum' },
{ oid => '3020', descr => 'current user privilege on column by rel name, col name',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text text', s => 'has_column_privilege_name_name' },
{ oid => '3021', descr => 'current user privilege on column by rel name, col attnum',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text int2 text', s => 'has_column_privilege_name_attnum' },
{ oid => '3022', descr => 'current user privilege on column by rel oid, col name',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_column_privilege_id_name' },
{ oid => '3023', descr => 'current user privilege on column by rel oid, col attnum',
  n => 'has_column_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid int2 text', s => 'has_column_privilege_id_attnum' },

{ oid => '3024', descr => 'user privilege on any column by username, rel name',
  n => 'has_any_column_privilege', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_any_column_privilege_name_name' },
{ oid => '3025', descr => 'user privilege on any column by username, rel oid',
  n => 'has_any_column_privilege', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_any_column_privilege_name_id' },
{ oid => '3026', descr => 'user privilege on any column by user oid, rel name',
  n => 'has_any_column_privilege', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_any_column_privilege_id_name' },
{ oid => '3027', descr => 'user privilege on any column by user oid, rel oid',
  n => 'has_any_column_privilege', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_any_column_privilege_id_id' },
{ oid => '3028', descr => 'current user privilege on any column by rel name',
  n => 'has_any_column_privilege', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_any_column_privilege_name' },
{ oid => '3029', descr => 'current user privilege on any column by rel oid',
  n => 'has_any_column_privilege', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_any_column_privilege_id' },

{ oid => '3355', descr => 'I/O',
  n => 'pg_ndistinct_in', is => 't', v => 'i', p => 's', rt => 'pg_ndistinct', at => 'cstring' },
{ oid => '3356', descr => 'I/O',
  n => 'pg_ndistinct_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'pg_ndistinct' },
{ oid => '3357', descr => 'I/O',
  n => 'pg_ndistinct_recv', is => 't', v => 's', p => 's', rt => 'pg_ndistinct', at => 'internal' },
{ oid => '3358', descr => 'I/O',
  n => 'pg_ndistinct_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'pg_ndistinct' },

{ oid => '3404', descr => 'I/O',
  n => 'pg_dependencies_in', is => 't', v => 'i', p => 's', rt => 'pg_dependencies', at => 'cstring' },
{ oid => '3405', descr => 'I/O',
  n => 'pg_dependencies_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'pg_dependencies' },
{ oid => '3406', descr => 'I/O',
  n => 'pg_dependencies_recv', is => 't', v => 's', p => 's', rt => 'pg_dependencies', at => 'internal' },
{ oid => '3407', descr => 'I/O',
  n => 'pg_dependencies_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'pg_dependencies' },

{ oid => '1928', descr => 'statistics: number of scans done for table/index',
  n => 'pg_stat_get_numscans', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1929', descr => 'statistics: number of tuples read by seqscan',
  n => 'pg_stat_get_tuples_returned', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1930', descr => 'statistics: number of tuples fetched by idxscan',
  n => 'pg_stat_get_tuples_fetched', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1931', descr => 'statistics: number of tuples inserted',
  n => 'pg_stat_get_tuples_inserted', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1932', descr => 'statistics: number of tuples updated',
  n => 'pg_stat_get_tuples_updated', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1933', descr => 'statistics: number of tuples deleted',
  n => 'pg_stat_get_tuples_deleted', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1972', descr => 'statistics: number of tuples hot updated',
  n => 'pg_stat_get_tuples_hot_updated', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2878', descr => 'statistics: number of live tuples',
  n => 'pg_stat_get_live_tuples', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2879', descr => 'statistics: number of dead tuples',
  n => 'pg_stat_get_dead_tuples', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3177', descr => 'statistics: number of tuples changed since last analyze',
  n => 'pg_stat_get_mod_since_analyze', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1934', descr => 'statistics: number of blocks fetched',
  n => 'pg_stat_get_blocks_fetched', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1935', descr => 'statistics: number of blocks found in cache',
  n => 'pg_stat_get_blocks_hit', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2781', descr => 'statistics: last manual vacuum time for a table',
  n => 'pg_stat_get_last_vacuum_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'oid' },
{ oid => '2782', descr => 'statistics: last auto vacuum time for a table',
  n => 'pg_stat_get_last_autovacuum_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'oid' },
{ oid => '2783', descr => 'statistics: last manual analyze time for a table',
  n => 'pg_stat_get_last_analyze_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'oid' },
{ oid => '2784', descr => 'statistics: last auto analyze time for a table',
  n => 'pg_stat_get_last_autoanalyze_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'oid' },
{ oid => '3054', descr => 'statistics: number of manual vacuums for a table',
  n => 'pg_stat_get_vacuum_count', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3055', descr => 'statistics: number of auto vacuums for a table',
  n => 'pg_stat_get_autovacuum_count', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3056', descr => 'statistics: number of manual analyzes for a table',
  n => 'pg_stat_get_analyze_count', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3057', descr => 'statistics: number of auto analyzes for a table',
  n => 'pg_stat_get_autoanalyze_count', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1936', descr => 'statistics: currently active backend IDs',
  n => 'pg_stat_get_backend_idset', prorows => '100', is => 't', proretset => 't', v => 's', p => 'r', rt => 'int4', at => '' },
{ oid => '2022', descr => 'statistics: information about currently active backends',
  n => 'pg_stat_get_activity', prorows => '100', proretset => 't', v => 's', p => 'r', rt => 'record', at => 'int4', proallargtypes => '{int4,oid,int4,oid,text,text,text,text,text,timestamptz,timestamptz,timestamptz,timestamptz,inet,text,int4,xid,xid,text,bool,text,text,int4,bool,text}', proargmodes => '{i,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{pid,datid,pid,usesysid,application_name,state,query,wait_event_type,wait_event,xact_start,query_start,backend_start,state_change,client_addr,client_hostname,client_port,backend_xid,backend_xmin,backend_type,ssl,sslversion,sslcipher,sslbits,sslcompression,sslclientdn}' },
{ oid => '3318', descr => 'statistics: information about progress of backends running maintenance command',
  n => 'pg_stat_get_progress_info', prorows => '100', is => 't', proretset => 't', v => 's', p => 'r', rt => 'record', at => 'text', proallargtypes => '{text,int4,oid,oid,int8,int8,int8,int8,int8,int8,int8,int8,int8,int8}', proargmodes => '{i,o,o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{cmdtype,pid,datid,relid,param1,param2,param3,param4,param5,param6,param7,param8,param9,param10}' },
{ oid => '3099', descr => 'statistics: information about currently active replication',
  n => 'pg_stat_get_wal_senders', prorows => '10', proretset => 't', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{int4,text,pg_lsn,pg_lsn,pg_lsn,pg_lsn,interval,interval,interval,int4,text}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{pid,state,sent_lsn,write_lsn,flush_lsn,replay_lsn,write_lag,flush_lag,replay_lag,sync_priority,sync_state}' },
{ oid => '3317', descr => 'statistics: information about WAL receiver',
  n => 'pg_stat_get_wal_receiver', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{int4,text,pg_lsn,int4,pg_lsn,int4,timestamptz,timestamptz,pg_lsn,timestamptz,text,text}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{pid,status,receive_start_lsn,receive_start_tli,received_lsn,received_tli,last_msg_send_time,last_msg_receipt_time,latest_end_lsn,latest_end_time,slot_name,conninfo}' },
{ oid => '6118', descr => 'statistics: information about subscription',
  n => 'pg_stat_get_subscription', v => 's', p => 'r', rt => 'record', at => 'oid', proallargtypes => '{oid,oid,oid,int4,pg_lsn,timestamptz,timestamptz,pg_lsn,timestamptz}', proargmodes => '{i,o,o,o,o,o,o,o,o}', proargnames => '{subid,subid,relid,pid,received_lsn,last_msg_send_time,last_msg_receipt_time,latest_end_lsn,latest_end_time}' },
{ oid => '2026', descr => 'statistics: current backend PID',
  n => 'pg_backend_pid', is => 't', v => 's', p => 'r', rt => 'int4', at => '' },
{ oid => '1937', descr => 'statistics: PID of backend',
  n => 'pg_stat_get_backend_pid', is => 't', v => 's', p => 'r', rt => 'int4', at => 'int4' },
{ oid => '1938', descr => 'statistics: database ID of backend',
  n => 'pg_stat_get_backend_dbid', is => 't', v => 's', p => 'r', rt => 'oid', at => 'int4' },
{ oid => '1939', descr => 'statistics: user ID of backend',
  n => 'pg_stat_get_backend_userid', is => 't', v => 's', p => 'r', rt => 'oid', at => 'int4' },
{ oid => '1940', descr => 'statistics: current query of backend',
  n => 'pg_stat_get_backend_activity', is => 't', v => 's', p => 'r', rt => 'text', at => 'int4' },
{ oid => '2788', descr => 'statistics: wait event type on which backend is currently waiting',
  n => 'pg_stat_get_backend_wait_event_type', is => 't', v => 's', p => 'r', rt => 'text', at => 'int4' },
{ oid => '2853', descr => 'statistics: wait event on which backend is currently waiting',
  n => 'pg_stat_get_backend_wait_event', is => 't', v => 's', p => 'r', rt => 'text', at => 'int4' },
{ oid => '2094', descr => 'statistics: start time for current query of backend',
  n => 'pg_stat_get_backend_activity_start', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'int4' },
{ oid => '2857', descr => 'statistics: start time for backend\'s current transaction',
  n => 'pg_stat_get_backend_xact_start', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'int4' },
{ oid => '1391', descr => 'statistics: start time for current backend session',
  n => 'pg_stat_get_backend_start', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'int4' },
{ oid => '1392', descr => 'statistics: address of client connected to backend',
  n => 'pg_stat_get_backend_client_addr', is => 't', v => 's', p => 'r', rt => 'inet', at => 'int4' },
{ oid => '1393', descr => 'statistics: port number of client connected to backend',
  n => 'pg_stat_get_backend_client_port', is => 't', v => 's', p => 'r', rt => 'int4', at => 'int4' },
{ oid => '1941', descr => 'statistics: number of backends in database',
  n => 'pg_stat_get_db_numbackends', is => 't', v => 's', p => 'r', rt => 'int4', at => 'oid' },
{ oid => '1942', descr => 'statistics: transactions committed',
  n => 'pg_stat_get_db_xact_commit', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1943', descr => 'statistics: transactions rolled back',
  n => 'pg_stat_get_db_xact_rollback', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1944', descr => 'statistics: blocks fetched for database',
  n => 'pg_stat_get_db_blocks_fetched', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '1945', descr => 'statistics: blocks found in cache for database',
  n => 'pg_stat_get_db_blocks_hit', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2758', descr => 'statistics: tuples returned for database',
  n => 'pg_stat_get_db_tuples_returned', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2759', descr => 'statistics: tuples fetched for database',
  n => 'pg_stat_get_db_tuples_fetched', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2760', descr => 'statistics: tuples inserted in database',
  n => 'pg_stat_get_db_tuples_inserted', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2761', descr => 'statistics: tuples updated in database',
  n => 'pg_stat_get_db_tuples_updated', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2762', descr => 'statistics: tuples deleted in database',
  n => 'pg_stat_get_db_tuples_deleted', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3065', descr => 'statistics: recovery conflicts in database caused by drop tablespace',
  n => 'pg_stat_get_db_conflict_tablespace', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3066', descr => 'statistics: recovery conflicts in database caused by relation lock',
  n => 'pg_stat_get_db_conflict_lock', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3067', descr => 'statistics: recovery conflicts in database caused by snapshot expiry',
  n => 'pg_stat_get_db_conflict_snapshot', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3068', descr => 'statistics: recovery conflicts in database caused by shared buffer pin',
  n => 'pg_stat_get_db_conflict_bufferpin', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3069', descr => 'statistics: recovery conflicts in database caused by buffer deadlock',
  n => 'pg_stat_get_db_conflict_startup_deadlock', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3070', descr => 'statistics: recovery conflicts in database',
  n => 'pg_stat_get_db_conflict_all', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3152', descr => 'statistics: deadlocks detected in database',
  n => 'pg_stat_get_db_deadlocks', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3074', descr => 'statistics: last reset for a database',
  n => 'pg_stat_get_db_stat_reset_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => 'oid' },
{ oid => '3150', descr => 'statistics: number of temporary files written',
  n => 'pg_stat_get_db_temp_files', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3151', descr => 'statistics: number of bytes in temporary files written',
  n => 'pg_stat_get_db_temp_bytes', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2844', descr => 'statistics: block read time, in milliseconds',
  n => 'pg_stat_get_db_blk_read_time', is => 't', v => 's', p => 'r', rt => 'float8', at => 'oid' },
{ oid => '2845', descr => 'statistics: block write time, in milliseconds',
  n => 'pg_stat_get_db_blk_write_time', is => 't', v => 's', p => 'r', rt => 'float8', at => 'oid' },
{ oid => '3195', descr => 'statistics: information about WAL archiver',
  n => 'pg_stat_get_archiver', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{int8,text,timestamptz,int8,text,timestamptz,timestamptz}', proargmodes => '{o,o,o,o,o,o,o}', proargnames => '{archived_count,last_archived_wal,last_archived_time,failed_count,last_failed_wal,last_failed_time,stats_reset}' },
{ oid => '2769', descr => 'statistics: number of timed checkpoints started by the bgwriter',
  n => 'pg_stat_get_bgwriter_timed_checkpoints', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '2770', descr => 'statistics: number of backend requested checkpoints started by the bgwriter',
  n => 'pg_stat_get_bgwriter_requested_checkpoints', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '2771', descr => 'statistics: number of buffers written by the bgwriter during checkpoints',
  n => 'pg_stat_get_bgwriter_buf_written_checkpoints', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '2772', descr => 'statistics: number of buffers written by the bgwriter for cleaning dirty buffers',
  n => 'pg_stat_get_bgwriter_buf_written_clean', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '2773', descr => 'statistics: number of times the bgwriter stopped processing when it had written too many buffers while cleaning',
  n => 'pg_stat_get_bgwriter_maxwritten_clean', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '3075', descr => 'statistics: last reset for the bgwriter',
  n => 'pg_stat_get_bgwriter_stat_reset_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => '' },
{ oid => '3160', descr => 'statistics: checkpoint time spent writing buffers to disk, in milliseconds',
  n => 'pg_stat_get_checkpoint_write_time', is => 't', v => 's', p => 'r', rt => 'float8', at => '' },
{ oid => '3161', descr => 'statistics: checkpoint time spent synchronizing buffers to disk, in milliseconds',
  n => 'pg_stat_get_checkpoint_sync_time', is => 't', v => 's', p => 'r', rt => 'float8', at => '' },
{ oid => '2775', descr => 'statistics: number of buffers written by backends',
  n => 'pg_stat_get_buf_written_backend', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '3063', descr => 'statistics: number of backend buffer writes that did their own fsync',
  n => 'pg_stat_get_buf_fsync_backend', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },
{ oid => '2859', descr => 'statistics: number of buffer allocations',
  n => 'pg_stat_get_buf_alloc', is => 't', v => 's', p => 'r', rt => 'int8', at => '' },

{ oid => '2978', descr => 'statistics: number of function calls',
  n => 'pg_stat_get_function_calls', is => 't', v => 's', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '2979', descr => 'statistics: total execution time of function, in milliseconds',
  n => 'pg_stat_get_function_total_time', is => 't', v => 's', p => 'r', rt => 'float8', at => 'oid' },
{ oid => '2980', descr => 'statistics: self execution time of function, in milliseconds',
  n => 'pg_stat_get_function_self_time', is => 't', v => 's', p => 'r', rt => 'float8', at => 'oid' },

{ oid => '3037', descr => 'statistics: number of scans done for table/index in current transaction',
  n => 'pg_stat_get_xact_numscans', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3038', descr => 'statistics: number of tuples read by seqscan in current transaction',
  n => 'pg_stat_get_xact_tuples_returned', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3039', descr => 'statistics: number of tuples fetched by idxscan in current transaction',
  n => 'pg_stat_get_xact_tuples_fetched', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3040', descr => 'statistics: number of tuples inserted in current transaction',
  n => 'pg_stat_get_xact_tuples_inserted', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3041', descr => 'statistics: number of tuples updated in current transaction',
  n => 'pg_stat_get_xact_tuples_updated', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3042', descr => 'statistics: number of tuples deleted in current transaction',
  n => 'pg_stat_get_xact_tuples_deleted', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3043', descr => 'statistics: number of tuples hot updated in current transaction',
  n => 'pg_stat_get_xact_tuples_hot_updated', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3044', descr => 'statistics: number of blocks fetched in current transaction',
  n => 'pg_stat_get_xact_blocks_fetched', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3045', descr => 'statistics: number of blocks found in cache in current transaction',
  n => 'pg_stat_get_xact_blocks_hit', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3046', descr => 'statistics: number of function calls in current transaction',
  n => 'pg_stat_get_xact_function_calls', is => 't', p => 'r', rt => 'int8', at => 'oid' },
{ oid => '3047', descr => 'statistics: total execution time of function in current transaction, in milliseconds',
  n => 'pg_stat_get_xact_function_total_time', is => 't', p => 'r', rt => 'float8', at => 'oid' },
{ oid => '3048', descr => 'statistics: self execution time of function in current transaction, in milliseconds',
  n => 'pg_stat_get_xact_function_self_time', is => 't', p => 'r', rt => 'float8', at => 'oid' },

{ oid => '3788', descr => 'statistics: timestamp of the current statistics snapshot',
  n => 'pg_stat_get_snapshot_timestamp', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => '' },
{ oid => '2230', descr => 'statistics: discard current transaction\'s statistics snapshot',
  n => 'pg_stat_clear_snapshot', p => 'r', rt => 'void', at => '' },
{ oid => '2274', descr => 'statistics: reset collected statistics for current database',
  n => 'pg_stat_reset', p => 's', rt => 'void', at => '' },
{ oid => '3775', descr => 'statistics: reset collected statistics shared across the cluster',
  n => 'pg_stat_reset_shared', is => 't', p => 's', rt => 'void', at => 'text' },
{ oid => '3776', descr => 'statistics: reset collected statistics for a single table or index in the current database',
  n => 'pg_stat_reset_single_table_counters', is => 't', p => 's', rt => 'void', at => 'oid' },
{ oid => '3777', descr => 'statistics: reset collected statistics for a single function in the current database',
  n => 'pg_stat_reset_single_function_counters', is => 't', p => 's', rt => 'void', at => 'oid' },

{ oid => '3163', descr => 'current trigger depth',
  n => 'pg_trigger_depth', is => 't', v => 's', p => 'r', rt => 'int4', at => '' },

{ oid => '3778', descr => 'tablespace location',
  n => 'pg_tablespace_location', is => 't', v => 's', p => 's', rt => 'text', at => 'oid' },

{ oid => '1946', descr => 'convert bytea value into some ascii-only text string',
  n => 'encode', is => 't', v => 'i', p => 's', rt => 'text', at => 'bytea text', s => 'binary_encode' },
{ oid => '1947', descr => 'convert ascii-encoded text string into bytea value',
  n => 'decode', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'text text', s => 'binary_decode' },

{ oid => '1948',
  n => 'byteaeq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '1949',
  n => 'bytealt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '1950',
  n => 'byteale', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '1951',
  n => 'byteagt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '1952',
  n => 'byteage', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '1953',
  n => 'byteane', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '1954', descr => 'less-equal-greater',
  n => 'byteacmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea bytea' },
{ oid => '3331', descr => 'sort support',
  n => 'bytea_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },

{ oid => '3917', descr => 'transform a timestamp length coercion',
  n => 'timestamp_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3944', descr => 'transform a time length coercion',
  n => 'time_transform', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },

{ oid => '1961', descr => 'adjust timestamp precision',
  n => 'timestamp', protransform => 'timestamp_transform', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp int4', s => 'timestamp_scale' },

{ oid => '1965', descr => 'larger of two',
  n => 'oidlarger', is => 't', v => 'i', p => 's', rt => 'oid', at => 'oid oid' },
{ oid => '1966', descr => 'smaller of two',
  n => 'oidsmaller', is => 't', v => 'i', p => 's', rt => 'oid', at => 'oid oid' },

{ oid => '1967', descr => 'adjust timestamptz precision',
  n => 'timestamptz', protransform => 'timestamp_transform', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'timestamptz int4', s => 'timestamptz_scale' },
{ oid => '1968', descr => 'adjust time precision',
  n => 'time', protransform => 'time_transform', is => 't', v => 'i', p => 's', rt => 'time', at => 'time int4', s => 'time_scale' },
{ oid => '1969', descr => 'adjust time with time zone precision',
  n => 'timetz', protransform => 'time_transform', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz int4', s => 'timetz_scale' },

{ oid => '2003',
  n => 'textanycat', prolang => '14', is => 't', v => 's', p => 's', rt => 'text', at => 'text anynonarray', s => 'select $1 || $2::pg_catalog.text' },
{ oid => '2004',
  n => 'anytextcat', prolang => '14', is => 't', v => 's', p => 's', rt => 'text', at => 'anynonarray text', s => 'select $1::pg_catalog.text || $2' },

{ oid => '2005',
  n => 'bytealike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '2006',
  n => 'byteanlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea' },
{ oid => '2007', descr => 'matches LIKE expression',
  n => 'like', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea', s => 'bytealike' },
{ oid => '2008', descr => 'does not match LIKE expression',
  n => 'notlike', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bytea bytea', s => 'byteanlike' },
{ oid => '2009', descr => 'convert LIKE pattern to use backslash escapes',
  n => 'like_escape', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea bytea', s => 'like_escape_bytea' },
{ oid => '2010', descr => 'octet length',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea', s => 'byteaoctetlen' },
{ oid => '2011',
  n => 'byteacat', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea bytea' },
{ oid => '2012', descr => 'extract portion of string',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea int4 int4', s => 'bytea_substr' },
{ oid => '2013', descr => 'extract portion of string',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea int4', s => 'bytea_substr_no_len' },
{ oid => '2085', descr => 'extract portion of string',
  n => 'substr', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea int4 int4', s => 'bytea_substr' },
{ oid => '2086', descr => 'extract portion of string',
  n => 'substr', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea int4', s => 'bytea_substr_no_len' },
{ oid => '2014', descr => 'position of substring',
  n => 'position', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bytea bytea', s => 'byteapos' },
{ oid => '2015', descr => 'trim both ends of string',
  n => 'btrim', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea bytea', s => 'byteatrim' },

{ oid => '2019', descr => 'convert timestamp with time zone to time',
  n => 'time', is => 't', v => 's', p => 's', rt => 'time', at => 'timestamptz', s => 'timestamptz_time' },
{ oid => '2020', descr => 'truncate timestamp to specified units',
  n => 'date_trunc', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'text timestamp', s => 'timestamp_trunc' },
{ oid => '2021', descr => 'extract field from timestamp',
  n => 'date_part', is => 't', v => 'i', p => 's', rt => 'float8', at => 'text timestamp', s => 'timestamp_part' },
{ oid => '2023', descr => 'convert abstime to timestamp',
  n => 'timestamp', is => 't', v => 's', p => 's', rt => 'timestamp', at => 'abstime', s => 'abstime_timestamp' },
{ oid => '2024', descr => 'convert date to timestamp',
  n => 'timestamp', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'date', s => 'date_timestamp' },
{ oid => '2025', descr => 'convert date and time to timestamp',
  n => 'timestamp', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'date time', s => 'datetime_timestamp' },
{ oid => '2027', descr => 'convert timestamp with time zone to timestamp',
  n => 'timestamp', is => 't', v => 's', p => 's', rt => 'timestamp', at => 'timestamptz', s => 'timestamptz_timestamp' },
{ oid => '2028', descr => 'convert timestamp to timestamp with time zone',
  n => 'timestamptz', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'timestamp', s => 'timestamp_timestamptz' },
{ oid => '2029', descr => 'convert timestamp to date',
  n => 'date', is => 't', v => 'i', p => 's', rt => 'date', at => 'timestamp', s => 'timestamp_date' },
{ oid => '2030', descr => 'convert timestamp to abstime',
  n => 'abstime', is => 't', v => 's', p => 's', rt => 'abstime', at => 'timestamp', s => 'timestamp_abstime' },
{ oid => '2031',
  n => 'timestamp_mi', is => 't', v => 'i', p => 's', rt => 'interval', at => 'timestamp timestamp' },
{ oid => '2032',
  n => 'timestamp_pl_interval', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp interval' },
{ oid => '2033',
  n => 'timestamp_mi_interval', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp interval' },
{ oid => '2035', descr => 'smaller of two',
  n => 'timestamp_smaller', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp timestamp' },
{ oid => '2036', descr => 'larger of two',
  n => 'timestamp_larger', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp timestamp' },
{ oid => '2037', descr => 'adjust time with time zone to new zone',
  n => 'timezone', is => 't', p => 's', rt => 'timetz', at => 'text timetz', s => 'timetz_zone' },
{ oid => '2038', descr => 'adjust time with time zone to new zone',
  n => 'timezone', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'interval timetz', s => 'timetz_izone' },
{ oid => '2039', descr => 'hash',
  n => 'timestamp_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'timestamp' },
{ oid => '3411', descr => 'hash',
  n => 'timestamp_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'timestamp int8' },
{ oid => '2041', descr => 'intervals overlap?',
  n => 'overlaps', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp timestamp timestamp', s => 'overlaps_timestamp' },
{ oid => '2042', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 'i', p => 's', rt => 'bool', at => 'timestamp interval timestamp interval', s => 'select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))' },
{ oid => '2043', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp timestamp interval', s => 'select ($1, $2) overlaps ($3, ($3 + $4))' },
{ oid => '2044', descr => 'intervals overlap?',
  n => 'overlaps', prolang => '14', v => 'i', p => 's', rt => 'bool', at => 'timestamp interval timestamp timestamp', s => 'select ($1, ($1 + $2)) overlaps ($3, $4)' },
{ oid => '2045', descr => 'less-equal-greater',
  n => 'timestamp_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'timestamp timestamp' },
{ oid => '3137', descr => 'sort support',
  n => 'timestamp_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '2046', descr => 'convert time with time zone to time',
  n => 'time', is => 't', v => 'i', p => 's', rt => 'time', at => 'timetz', s => 'timetz_time' },
{ oid => '2047', descr => 'convert time to time with time zone',
  n => 'timetz', is => 't', v => 's', p => 's', rt => 'timetz', at => 'time', s => 'time_timetz' },
{ oid => '2048', descr => 'finite timestamp?',
  n => 'isfinite', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp', s => 'timestamp_finite' },
{ oid => '2049', descr => 'format timestamp to text',
  n => 'to_char', is => 't', v => 's', p => 's', rt => 'text', at => 'timestamp text', s => 'timestamp_to_char' },
{ oid => '2052',
  n => 'timestamp_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp' },
{ oid => '2053',
  n => 'timestamp_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp' },
{ oid => '2054',
  n => 'timestamp_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp' },
{ oid => '2055',
  n => 'timestamp_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp' },
{ oid => '2056',
  n => 'timestamp_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp' },
{ oid => '2057',
  n => 'timestamp_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp timestamp' },
{ oid => '2058', descr => 'date difference preserving months and years',
  n => 'age', is => 't', v => 'i', p => 's', rt => 'interval', at => 'timestamp timestamp', s => 'timestamp_age' },
{ oid => '2059', descr => 'date difference from today preserving months and years',
  n => 'age', prolang => '14', is => 't', v => 's', p => 's', rt => 'interval', at => 'timestamp', s => 'select pg_catalog.age(cast(current_date as timestamp without time zone), $1)' },

{ oid => '2069', descr => 'adjust timestamp to new time zone',
  n => 'timezone', protransform => 'timestamp_zone_transform', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'text timestamp', s => 'timestamp_zone' },
{ oid => '2070', descr => 'adjust timestamp to new time zone',
  n => 'timezone', protransform => 'timestamp_izone_transform', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'interval timestamp', s => 'timestamp_izone' },
{ oid => '2071',
  n => 'date_pl_interval', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'date interval' },
{ oid => '2072',
  n => 'date_mi_interval', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'date interval' },

{ oid => '2073', descr => 'extract text matching regular expression',
  n => 'substring', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text', s => 'textregexsubstr' },
{ oid => '2074', descr => 'extract text matching SQL99 regular expression',
  n => 'substring', prolang => '14', is => 't', v => 'i', p => 's', rt => 'text', at => 'text text text', s => 'select pg_catalog.substring($1, pg_catalog.similar_escape($2, $3))' },

{ oid => '2075', descr => 'convert int8 to bitstring',
  n => 'bit', is => 't', v => 'i', p => 's', rt => 'bit', at => 'int8 int4', s => 'bitfromint8' },
{ oid => '2076', descr => 'convert bitstring to int8',
  n => 'int8', is => 't', v => 'i', p => 's', rt => 'int8', at => 'bit', s => 'bittoint8' },

{ oid => '2077', descr => 'SHOW X as a function',
  n => 'current_setting', is => 't', v => 's', p => 's', rt => 'text', at => 'text', s => 'show_config_by_name' },
{ oid => '3294', descr => 'SHOW X as a function, optionally no error for missing variable',
  n => 'current_setting', is => 't', v => 's', p => 's', rt => 'text', at => 'text bool', s => 'show_config_by_name_missing_ok' },
{ oid => '2078', descr => 'SET X as a function',
  n => 'set_config', rt => 'text', at => 'text text bool', s => 'set_config_by_name' },
{ oid => '2084', descr => 'SHOW ALL as a function',
  n => 'pg_show_all_settings', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{text,text,text,text,text,text,text,text,text,text,text,_text,text,text,text,int4,bool}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{name,setting,unit,category,short_desc,extra_desc,context,vartype,source,min_val,max_val,enumvals,boot_val,reset_val,sourcefile,sourceline,pending_restart}', s => 'show_all_settings' },
{ oid => '3329', descr => 'show config file settings',
  n => 'pg_show_all_file_settings', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'record', at => '', proallargtypes => '{text,int4,int4,text,text,bool,text}', proargmodes => '{o,o,o,o,o,o,o}', proargnames => '{sourcefile,sourceline,seqno,name,setting,applied,error}', s => 'show_all_file_settings' },
{ oid => '3401', descr => 'show pg_hba.conf rules',
  n => 'pg_hba_file_rules', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'record', at => '', proallargtypes => '{int4,text,_text,_text,text,text,text,_text,text}', proargmodes => '{o,o,o,o,o,o,o,o,o}', proargnames => '{line_number,type,database,user_name,address,netmask,auth_method,options,error}' },
{ oid => '1371', descr => 'view system lock information',
  n => 'pg_lock_status', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'record', at => '', proallargtypes => '{text,oid,oid,int4,int2,text,xid,oid,oid,int2,text,int4,text,bool,bool}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{locktype,database,relation,page,tuple,virtualxid,transactionid,classid,objid,objsubid,virtualtransaction,pid,mode,granted,fastpath}' },
{ oid => '2561', descr => 'get array of PIDs of sessions blocking specified backend PID from acquiring a heavyweight lock',
  n => 'pg_blocking_pids', is => 't', p => 's', rt => '_int4', at => 'int4' },
{ oid => '3376', descr => 'get array of PIDs of sessions blocking specified backend PID from acquiring a safe snapshot',
  n => 'pg_safe_snapshot_blocking_pids', is => 't', p => 's', rt => '_int4', at => 'int4' },
{ oid => '3378', descr => 'isolationtester support function',
  n => 'pg_isolation_test_session_is_blocked', is => 't', p => 's', rt => 'bool', at => 'int4 _int4' },
{ oid => '1065', descr => 'view two-phase transactions',
  n => 'pg_prepared_xact', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'record', at => '', proallargtypes => '{xid,text,timestamptz,oid,oid}', proargmodes => '{o,o,o,o,o}', proargnames => '{transaction,gid,prepared,ownerid,dbid}' },
{ oid => '3819', descr => 'view members of a multixactid',
  n => 'pg_get_multixact_members', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'record', at => 'xid', proallargtypes => '{xid,xid,text}', proargmodes => '{i,o,o}', proargnames => '{multixid,xid,mode}' },

{ oid => '3581', descr => 'get commit timestamp of a transaction',
  n => 'pg_xact_commit_timestamp', is => 't', p => 's', rt => 'timestamptz', at => 'xid' },

{ oid => '3583', descr => 'get transaction Id and commit timestamp of latest transaction commit',
  n => 'pg_last_committed_xact', is => 't', p => 's', rt => 'record', at => '', proallargtypes => '{xid,timestamptz}', proargmodes => '{o,o}', proargnames => '{xid,timestamp}' },

{ oid => '3537', descr => 'get identification of SQL object',
  n => 'pg_describe_object', is => 't', v => 's', p => 's', rt => 'text', at => 'oid oid int4' },

{ oid => '3839', descr => 'get machine-parseable identification of SQL object',
  n => 'pg_identify_object', is => 't', v => 's', p => 's', rt => 'record', at => 'oid oid int4', proallargtypes => '{oid,oid,int4,text,text,text,text}', proargmodes => '{i,i,i,o,o,o,o}', proargnames => '{classid,objid,objsubid,type,schema,name,identity}' },

{ oid => '3382', descr => 'get identification of SQL object for pg_get_object_address()',
  n => 'pg_identify_object_as_address', is => 't', v => 's', p => 's', rt => 'record', at => 'oid oid int4', proallargtypes => '{oid,oid,int4,text,_text,_text}', proargmodes => '{i,i,i,o,o,o}', proargnames => '{classid,objid,objsubid,type,object_names,object_args}' },

{ oid => '3954', descr => 'get OID-based object address from name/args arrays',
  n => 'pg_get_object_address', is => 't', v => 's', p => 's', rt => 'record', at => 'text _text _text', proallargtypes => '{text,_text,_text,oid,oid,int4}', proargmodes => '{i,i,i,o,o,o}', proargnames => '{type,name,args,classid,objid,objsubid}' },

{ oid => '2079', descr => 'is table visible in search path?',
  n => 'pg_table_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '2080', descr => 'is type visible in search path?',
  n => 'pg_type_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '2081', descr => 'is function visible in search path?',
  n => 'pg_function_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '2082', descr => 'is operator visible in search path?',
  n => 'pg_operator_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '2083', descr => 'is opclass visible in search path?',
  n => 'pg_opclass_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3829', descr => 'is opfamily visible in search path?',
  n => 'pg_opfamily_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '2093', descr => 'is conversion visible in search path?',
  n => 'pg_conversion_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3403', descr => 'is statistics object visible in search path?',
  n => 'pg_statistics_obj_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3756', descr => 'is text search parser visible in search path?',
  n => 'pg_ts_parser_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3757', descr => 'is text search dictionary visible in search path?',
  n => 'pg_ts_dict_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3768', descr => 'is text search template visible in search path?',
  n => 'pg_ts_template_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3758', descr => 'is text search configuration visible in search path?',
  n => 'pg_ts_config_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3815', descr => 'is collation visible in search path?',
  n => 'pg_collation_is_visible', procost => '10', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },

{ oid => '2854', descr => 'get OID of current session\'s temp schema, if any',
  n => 'pg_my_temp_schema', is => 't', v => 's', p => 'r', rt => 'oid', at => '' },
{ oid => '2855', descr => 'is schema another session\'s temp schema?',
  n => 'pg_is_other_temp_schema', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },

{ oid => '2171', descr => 'cancel a server process\' current query',
  n => 'pg_cancel_backend', is => 't', p => 's', rt => 'bool', at => 'int4' },
{ oid => '2096', descr => 'terminate a server process',
  n => 'pg_terminate_backend', is => 't', p => 's', rt => 'bool', at => 'int4' },
{ oid => '2172', descr => 'prepare for taking an online backup',
  n => 'pg_start_backup', is => 't', p => 'r', rt => 'pg_lsn', at => 'text bool bool' },
{ oid => '2173', descr => 'finish taking an online backup',
  n => 'pg_stop_backup', is => 't', p => 'r', rt => 'pg_lsn', at => '' },
{ oid => '2739', descr => 'finish taking an online backup',
  n => 'pg_stop_backup', prorows => '1', is => 't', proretset => 't', p => 'r', rt => 'record', at => 'bool bool', proallargtypes => '{bool,bool,pg_lsn,text,text}', proargmodes => '{i,i,o,o,o}', proargnames => '{exclusive,wait_for_archive,lsn,labelfile,spcmapfile}', s => 'pg_stop_backup_v2' },
{ oid => '3813', descr => 'true if server is in online backup',
  n => 'pg_is_in_backup', is => 't', p => 's', rt => 'bool', at => '' },
{ oid => '3814', descr => 'start time of an online backup',
  n => 'pg_backup_start_time', is => 't', v => 's', p => 's', rt => 'timestamptz', at => '' },
{ oid => '2848', descr => 'switch to new wal file',
  n => 'pg_switch_wal', is => 't', p => 's', rt => 'pg_lsn', at => '' },
{ oid => '3098', descr => 'create a named restore point',
  n => 'pg_create_restore_point', is => 't', p => 's', rt => 'pg_lsn', at => 'text' },
{ oid => '2849', descr => 'current wal write location',
  n => 'pg_current_wal_lsn', is => 't', p => 's', rt => 'pg_lsn', at => '' },
{ oid => '2852', descr => 'current wal insert location',
  n => 'pg_current_wal_insert_lsn', is => 't', p => 's', rt => 'pg_lsn', at => '' },
{ oid => '3330', descr => 'current wal flush location',
  n => 'pg_current_wal_flush_lsn', is => 't', p => 's', rt => 'pg_lsn', at => '' },
{ oid => '2850', descr => 'wal filename and byte offset, given a wal location',
  n => 'pg_walfile_name_offset', is => 't', v => 'i', p => 's', rt => 'record', at => 'pg_lsn', proallargtypes => '{pg_lsn,text,int4}', proargmodes => '{i,o,o}', proargnames => '{lsn,file_name,file_offset}' },
{ oid => '2851', descr => 'wal filename, given a wal location',
  n => 'pg_walfile_name', is => 't', v => 'i', p => 's', rt => 'text', at => 'pg_lsn' },

{ oid => '3165', descr => 'difference in bytes, given two wal locations',
  n => 'pg_wal_lsn_diff', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'pg_lsn pg_lsn' },

{ oid => '3809', descr => 'export a snapshot',
  n => 'pg_export_snapshot', is => 't', rt => 'text', at => '' },

{ oid => '3810', descr => 'true if server is in recovery',
  n => 'pg_is_in_recovery', is => 't', p => 's', rt => 'bool', at => '' },

{ oid => '3820', descr => 'current wal flush location',
  n => 'pg_last_wal_receive_lsn', is => 't', p => 's', rt => 'pg_lsn', at => '' },
{ oid => '3821', descr => 'last wal replay location',
  n => 'pg_last_wal_replay_lsn', is => 't', p => 's', rt => 'pg_lsn', at => '' },
{ oid => '3830', descr => 'timestamp of last replay xact',
  n => 'pg_last_xact_replay_timestamp', is => 't', p => 's', rt => 'timestamptz', at => '' },

{ oid => '3071', descr => 'pause wal replay',
  n => 'pg_wal_replay_pause', is => 't', p => 's', rt => 'void', at => '' },
{ oid => '3072', descr => 'resume wal replay, if it was paused',
  n => 'pg_wal_replay_resume', is => 't', p => 's', rt => 'void', at => '' },
{ oid => '3073', descr => 'true if wal replay is paused',
  n => 'pg_is_wal_replay_paused', is => 't', p => 's', rt => 'bool', at => '' },

{ oid => '2621', descr => 'reload configuration files',
  n => 'pg_reload_conf', is => 't', p => 's', rt => 'bool', at => '' },
{ oid => '2622', descr => 'rotate log file',
  n => 'pg_rotate_logfile', is => 't', p => 's', rt => 'bool', at => '' },
{ oid => '3800', descr => 'current logging collector file location',
  n => 'pg_current_logfile', p => 's', rt => 'text', at => '' },
{ oid => '3801', descr => 'current logging collector file location',
  n => 'pg_current_logfile', p => 's', rt => 'text', at => 'text', s => 'pg_current_logfile_1arg' },

{ oid => '2623', descr => 'get information about file',
  n => 'pg_stat_file', is => 't', p => 's', rt => 'record', at => 'text', proallargtypes => '{text,int8,timestamptz,timestamptz,timestamptz,timestamptz,bool}', proargmodes => '{i,o,o,o,o,o,o}', proargnames => '{filename,size,access,modification,change,creation,isdir}', s => 'pg_stat_file_1arg' },
{ oid => '3307', descr => 'get information about file',
  n => 'pg_stat_file', is => 't', p => 's', rt => 'record', at => 'text bool', proallargtypes => '{text,bool,int8,timestamptz,timestamptz,timestamptz,timestamptz,bool}', proargmodes => '{i,i,o,o,o,o,o,o}', proargnames => '{filename,missing_ok,size,access,modification,change,creation,isdir}' },
{ oid => '2624', descr => 'read text from a file',
  n => 'pg_read_file', is => 't', p => 's', rt => 'text', at => 'text int8 int8', s => 'pg_read_file_off_len' },
{ oid => '3293', descr => 'read text from a file',
  n => 'pg_read_file', is => 't', p => 's', rt => 'text', at => 'text int8 int8 bool' },
{ oid => '3826', descr => 'read text from a file',
  n => 'pg_read_file', is => 't', p => 's', rt => 'text', at => 'text', s => 'pg_read_file_all' },
{ oid => '3827', descr => 'read bytea from a file',
  n => 'pg_read_binary_file', is => 't', p => 's', rt => 'bytea', at => 'text int8 int8', s => 'pg_read_binary_file_off_len' },
{ oid => '3295', descr => 'read bytea from a file',
  n => 'pg_read_binary_file', is => 't', p => 's', rt => 'bytea', at => 'text int8 int8 bool' },
{ oid => '3828', descr => 'read bytea from a file',
  n => 'pg_read_binary_file', is => 't', p => 's', rt => 'bytea', at => 'text', s => 'pg_read_binary_file_all' },
{ oid => '2625', descr => 'list all files in a directory',
  n => 'pg_ls_dir', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'text', at => 'text', s => 'pg_ls_dir_1arg' },
{ oid => '3297', descr => 'list all files in a directory',
  n => 'pg_ls_dir', prorows => '1000', is => 't', proretset => 't', p => 's', rt => 'text', at => 'text bool bool' },
{ oid => '2626', descr => 'sleep for the specified time in seconds',
  n => 'pg_sleep', is => 't', p => 's', rt => 'void', at => 'float8' },
{ oid => '3935', descr => 'sleep for the specified interval',
  n => 'pg_sleep_for', prolang => '14', is => 't', p => 's', rt => 'void', at => 'interval', s => 'select pg_catalog.pg_sleep(extract(epoch from pg_catalog.clock_timestamp() operator(pg_catalog.+) $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))' },
{ oid => '3936', descr => 'sleep until the specified time',
  n => 'pg_sleep_until', prolang => '14', is => 't', p => 's', rt => 'void', at => 'timestamptz', s => 'select pg_catalog.pg_sleep(extract(epoch from $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))' },

{ oid => '2971', descr => 'convert boolean to text',
  n => 'text', is => 't', v => 'i', p => 's', rt => 'text', at => 'bool', s => 'booltext' },

# Aggregates (moved here from pg_aggregate for 7.3)

{ oid => '2100', descr => 'the average (arithmetic mean) as numeric of all bigint values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2101', descr => 'the average (arithmetic mean) as numeric of all integer values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2102', descr => 'the average (arithmetic mean) as numeric of all smallint values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2103', descr => 'the average (arithmetic mean) as numeric of all numeric values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },
{ oid => '2104', descr => 'the average (arithmetic mean) as float8 of all float4 values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2105', descr => 'the average (arithmetic mean) as float8 of all float8 values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2106', descr => 'the average (arithmetic mean) as interval of all interval values',
  n => 'avg', proisagg => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'aggregate_dummy' },

{ oid => '2107', descr => 'sum as numeric across all bigint input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2108', descr => 'sum as bigint across all integer input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2109', descr => 'sum as bigint across all smallint input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2110', descr => 'sum as float4 across all float4 input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'float4', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2111', descr => 'sum as float8 across all float8 input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2112', descr => 'sum as money across all money input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'money', at => 'money', s => 'aggregate_dummy' },
{ oid => '2113', descr => 'sum as interval across all interval input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'aggregate_dummy' },
{ oid => '2114', descr => 'sum as numeric across all numeric input values',
  n => 'sum', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2115', descr => 'maximum value of all bigint input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2116', descr => 'maximum value of all integer input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2117', descr => 'maximum value of all smallint input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'int2', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2118', descr => 'maximum value of all oid input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'oid', at => 'oid', s => 'aggregate_dummy' },
{ oid => '2119', descr => 'maximum value of all float4 input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'float4', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2120', descr => 'maximum value of all float8 input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2121', descr => 'maximum value of all abstime input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'abstime', at => 'abstime', s => 'aggregate_dummy' },
{ oid => '2122', descr => 'maximum value of all date input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'date', at => 'date', s => 'aggregate_dummy' },
{ oid => '2123', descr => 'maximum value of all time input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'time', at => 'time', s => 'aggregate_dummy' },
{ oid => '2124', descr => 'maximum value of all time with time zone input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz', s => 'aggregate_dummy' },
{ oid => '2125', descr => 'maximum value of all money input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'money', at => 'money', s => 'aggregate_dummy' },
{ oid => '2126', descr => 'maximum value of all timestamp input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp', s => 'aggregate_dummy' },
{ oid => '2127', descr => 'maximum value of all timestamp with time zone input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'timestamptz', s => 'aggregate_dummy' },
{ oid => '2128', descr => 'maximum value of all interval input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'aggregate_dummy' },
{ oid => '2129', descr => 'maximum value of all text input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'aggregate_dummy' },
{ oid => '2130', descr => 'maximum value of all numeric input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },
{ oid => '2050', descr => 'maximum value of all anyarray input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray', s => 'aggregate_dummy' },
{ oid => '2244', descr => 'maximum value of all bpchar input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'bpchar', at => 'bpchar', s => 'aggregate_dummy' },
{ oid => '2797', descr => 'maximum value of all tid input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'tid', at => 'tid', s => 'aggregate_dummy' },
{ oid => '3564', descr => 'maximum value of all inet input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'inet', at => 'inet', s => 'aggregate_dummy' },

{ oid => '2131', descr => 'minimum value of all bigint input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2132', descr => 'minimum value of all integer input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2133', descr => 'minimum value of all smallint input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'int2', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2134', descr => 'minimum value of all oid input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'oid', at => 'oid', s => 'aggregate_dummy' },
{ oid => '2135', descr => 'minimum value of all float4 input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'float4', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2136', descr => 'minimum value of all float8 input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2137', descr => 'minimum value of all abstime input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'abstime', at => 'abstime', s => 'aggregate_dummy' },
{ oid => '2138', descr => 'minimum value of all date input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'date', at => 'date', s => 'aggregate_dummy' },
{ oid => '2139', descr => 'minimum value of all time input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'time', at => 'time', s => 'aggregate_dummy' },
{ oid => '2140', descr => 'minimum value of all time with time zone input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'timetz', at => 'timetz', s => 'aggregate_dummy' },
{ oid => '2141', descr => 'minimum value of all money input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'money', at => 'money', s => 'aggregate_dummy' },
{ oid => '2142', descr => 'minimum value of all timestamp input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp', s => 'aggregate_dummy' },
{ oid => '2143', descr => 'minimum value of all timestamp with time zone input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'timestamptz', s => 'aggregate_dummy' },
{ oid => '2144', descr => 'minimum value of all interval input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'interval', at => 'interval', s => 'aggregate_dummy' },
{ oid => '2145', descr => 'minimum value of all text values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'aggregate_dummy' },
{ oid => '2146', descr => 'minimum value of all numeric input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },
{ oid => '2051', descr => 'minimum value of all anyarray input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'anyarray', at => 'anyarray', s => 'aggregate_dummy' },
{ oid => '2245', descr => 'minimum value of all bpchar input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'bpchar', at => 'bpchar', s => 'aggregate_dummy' },
{ oid => '2798', descr => 'minimum value of all tid input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'tid', at => 'tid', s => 'aggregate_dummy' },
{ oid => '3565', descr => 'minimum value of all inet input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'inet', at => 'inet', s => 'aggregate_dummy' },

# count has two forms: count(any) and count(*)
{ oid => '2147', descr => 'number of input rows for which the input expression is not null',
  n => 'count', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'any', s => 'aggregate_dummy' },
{ oid => '2803', descr => 'number of input rows',
  n => 'count', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => '', s => 'aggregate_dummy' },

{ oid => '2718', descr => 'population variance of bigint input values (square of the population standard deviation)',
  n => 'var_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2719', descr => 'population variance of integer input values (square of the population standard deviation)',
  n => 'var_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2720', descr => 'population variance of smallint input values (square of the population standard deviation)',
  n => 'var_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2721', descr => 'population variance of float4 input values (square of the population standard deviation)',
  n => 'var_pop', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2722', descr => 'population variance of float8 input values (square of the population standard deviation)',
  n => 'var_pop', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2723', descr => 'population variance of numeric input values (square of the population standard deviation)',
  n => 'var_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2641', descr => 'sample variance of bigint input values (square of the sample standard deviation)',
  n => 'var_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2642', descr => 'sample variance of integer input values (square of the sample standard deviation)',
  n => 'var_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2643', descr => 'sample variance of smallint input values (square of the sample standard deviation)',
  n => 'var_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2644', descr => 'sample variance of float4 input values (square of the sample standard deviation)',
  n => 'var_samp', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },

{ oid => '2645', descr => 'sample variance of float8 input values (square of the sample standard deviation)',
  n => 'var_samp', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2646', descr => 'sample variance of numeric input values (square of the sample standard deviation)',
  n => 'var_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2148', descr => 'historical alias for var_samp',
  n => 'variance', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2149', descr => 'historical alias for var_samp',
  n => 'variance', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2150', descr => 'historical alias for var_samp',
  n => 'variance', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2151', descr => 'historical alias for var_samp',
  n => 'variance', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2152', descr => 'historical alias for var_samp',
  n => 'variance', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2153', descr => 'historical alias for var_samp',
  n => 'variance', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2724', descr => 'population standard deviation of bigint input values',
  n => 'stddev_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2725', descr => 'population standard deviation of integer input values',
  n => 'stddev_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2726', descr => 'population standard deviation of smallint input values',
  n => 'stddev_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2727', descr => 'population standard deviation of float4 input values',
  n => 'stddev_pop', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2728', descr => 'population standard deviation of float8 input values',
  n => 'stddev_pop', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2729', descr => 'population standard deviation of numeric input values',
  n => 'stddev_pop', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2712', descr => 'sample standard deviation of bigint input values',
  n => 'stddev_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2713', descr => 'sample standard deviation of integer input values',
  n => 'stddev_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2714', descr => 'sample standard deviation of smallint input values',
  n => 'stddev_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2715', descr => 'sample standard deviation of float4 input values',
  n => 'stddev_samp', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2716', descr => 'sample standard deviation of float8 input values',
  n => 'stddev_samp', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2717', descr => 'sample standard deviation of numeric input values',
  n => 'stddev_samp', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2154', descr => 'historical alias for stddev_samp',
  n => 'stddev', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2155', descr => 'historical alias for stddev_samp',
  n => 'stddev', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2156', descr => 'historical alias for stddev_samp',
  n => 'stddev', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2157', descr => 'historical alias for stddev_samp',
  n => 'stddev', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float4', s => 'aggregate_dummy' },
{ oid => '2158', descr => 'historical alias for stddev_samp',
  n => 'stddev', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8', s => 'aggregate_dummy' },
{ oid => '2159', descr => 'historical alias for stddev_samp',
  n => 'stddev', proisagg => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric', s => 'aggregate_dummy' },

{ oid => '2818', descr => 'number of input rows in which both expressions are not null',
  n => 'regr_count', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2819', descr => 'sum of squares of the independent variable (sum(X^2) - sum(X)^2/N)',
  n => 'regr_sxx', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2820', descr => 'sum of squares of the dependent variable (sum(Y^2) - sum(Y)^2/N)',
  n => 'regr_syy', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2821', descr => 'sum of products of independent times dependent variable (sum(X*Y) - sum(X) * sum(Y)/N)',
  n => 'regr_sxy', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2822', descr => 'average of the independent variable (sum(X)/N)',
  n => 'regr_avgx', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2823', descr => 'average of the dependent variable (sum(Y)/N)',
  n => 'regr_avgy', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2824', descr => 'square of the correlation coefficient',
  n => 'regr_r2', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2825', descr => 'slope of the least-squares-fit linear equation determined by the (X, Y) pairs',
  n => 'regr_slope', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2826', descr => 'y-intercept of the least-squares-fit linear equation determined by the (X, Y) pairs',
  n => 'regr_intercept', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },

{ oid => '2827', descr => 'population covariance',
  n => 'covar_pop', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2828', descr => 'sample covariance',
  n => 'covar_samp', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '2829', descr => 'correlation coefficient',
  n => 'corr', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },

{ oid => '2160',
  n => 'text_pattern_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '2161',
  n => 'text_pattern_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '2163',
  n => 'text_pattern_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '2164',
  n => 'text_pattern_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text text' },
{ oid => '2166', descr => 'less-equal-greater',
  n => 'bttext_pattern_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text' },
{ oid => '3332', descr => 'sort support',
  n => 'bttext_pattern_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },

{ oid => '2174',
  n => 'bpchar_pattern_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '2175',
  n => 'bpchar_pattern_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '2177',
  n => 'bpchar_pattern_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '2178',
  n => 'bpchar_pattern_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bpchar bpchar' },
{ oid => '2180', descr => 'less-equal-greater',
  n => 'btbpchar_pattern_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bpchar bpchar' },
{ oid => '3333', descr => 'sort support',
  n => 'btbpchar_pattern_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },

{ oid => '2188', descr => 'less-equal-greater',
  n => 'btint48cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int8' },
{ oid => '2189', descr => 'less-equal-greater',
  n => 'btint84cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int8 int4' },
{ oid => '2190', descr => 'less-equal-greater',
  n => 'btint24cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int4' },
{ oid => '2191', descr => 'less-equal-greater',
  n => 'btint42cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int2' },
{ oid => '2192', descr => 'less-equal-greater',
  n => 'btint28cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int2 int8' },
{ oid => '2193', descr => 'less-equal-greater',
  n => 'btint82cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int8 int2' },
{ oid => '2194', descr => 'less-equal-greater',
  n => 'btfloat48cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float4 float8' },
{ oid => '2195', descr => 'less-equal-greater',
  n => 'btfloat84cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'float8 float4' },

{ oid => '2212', descr => 'I/O',
  n => 'regprocedurein', is => 't', v => 's', p => 's', rt => 'regprocedure', at => 'cstring' },
{ oid => '2213', descr => 'I/O',
  n => 'regprocedureout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regprocedure' },
{ oid => '2214', descr => 'I/O',
  n => 'regoperin', is => 't', v => 's', p => 's', rt => 'regoper', at => 'cstring' },
{ oid => '2215', descr => 'I/O',
  n => 'regoperout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regoper' },
{ oid => '3492', descr => 'convert operator name to regoper',
  n => 'to_regoper', is => 't', v => 's', p => 's', rt => 'regoper', at => 'text' },
{ oid => '3476', descr => 'convert operator name to regoperator',
  n => 'to_regoperator', is => 't', v => 's', p => 's', rt => 'regoperator', at => 'text' },
{ oid => '2216', descr => 'I/O',
  n => 'regoperatorin', is => 't', v => 's', p => 's', rt => 'regoperator', at => 'cstring' },
{ oid => '2217', descr => 'I/O',
  n => 'regoperatorout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regoperator' },
{ oid => '2218', descr => 'I/O',
  n => 'regclassin', is => 't', v => 's', p => 's', rt => 'regclass', at => 'cstring' },
{ oid => '2219', descr => 'I/O',
  n => 'regclassout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regclass' },
{ oid => '3495', descr => 'convert classname to regclass',
  n => 'to_regclass', is => 't', v => 's', p => 's', rt => 'regclass', at => 'text' },
{ oid => '2220', descr => 'I/O',
  n => 'regtypein', is => 't', v => 's', p => 's', rt => 'regtype', at => 'cstring' },
{ oid => '2221', descr => 'I/O',
  n => 'regtypeout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regtype' },
{ oid => '3493', descr => 'convert type name to regtype',
  n => 'to_regtype', is => 't', v => 's', p => 's', rt => 'regtype', at => 'text' },
{ oid => '1079', descr => 'convert text to regclass',
  n => 'regclass', is => 't', v => 's', p => 's', rt => 'regclass', at => 'text', s => 'text_regclass' },

{ oid => '4098', descr => 'I/O',
  n => 'regrolein', is => 't', v => 's', p => 's', rt => 'regrole', at => 'cstring' },
{ oid => '4092', descr => 'I/O',
  n => 'regroleout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regrole' },
{ oid => '4093', descr => 'convert role name to regrole',
  n => 'to_regrole', is => 't', v => 's', p => 's', rt => 'regrole', at => 'text' },

{ oid => '4084', descr => 'I/O',
  n => 'regnamespacein', is => 't', v => 's', p => 's', rt => 'regnamespace', at => 'cstring' },
{ oid => '4085', descr => 'I/O',
  n => 'regnamespaceout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regnamespace' },
{ oid => '4086', descr => 'convert namespace name to regnamespace',
  n => 'to_regnamespace', is => 't', v => 's', p => 's', rt => 'regnamespace', at => 'text' },

{ oid => '1268', descr => 'parse qualified identifier to array of identifiers',
  n => 'parse_ident', is => 't', v => 'i', p => 's', rt => '_text', at => 'text bool', proargnames => '{str,strict}' },

{ oid => '2246', descr => '(internal)',
  n => 'fmgr_internal_validator', is => 't', v => 's', p => 's', rt => 'void', at => 'oid' },
{ oid => '2247', descr => '(internal)',
  n => 'fmgr_c_validator', is => 't', v => 's', p => 's', rt => 'void', at => 'oid' },
{ oid => '2248', descr => '(internal)',
  n => 'fmgr_sql_validator', is => 't', v => 's', p => 's', rt => 'void', at => 'oid' },

{ oid => '2250', descr => 'user privilege on database by username, database name',
  n => 'has_database_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_database_privilege_name_name' },
{ oid => '2251', descr => 'user privilege on database by username, database oid',
  n => 'has_database_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_database_privilege_name_id' },
{ oid => '2252', descr => 'user privilege on database by user oid, database name',
  n => 'has_database_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_database_privilege_id_name' },
{ oid => '2253', descr => 'user privilege on database by user oid, database oid',
  n => 'has_database_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_database_privilege_id_id' },
{ oid => '2254', descr => 'current user privilege on database by database name',
  n => 'has_database_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_database_privilege_name' },
{ oid => '2255', descr => 'current user privilege on database by database oid',
  n => 'has_database_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_database_privilege_id' },

{ oid => '2256', descr => 'user privilege on function by username, function name',
  n => 'has_function_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_function_privilege_name_name' },
{ oid => '2257', descr => 'user privilege on function by username, function oid',
  n => 'has_function_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_function_privilege_name_id' },
{ oid => '2258', descr => 'user privilege on function by user oid, function name',
  n => 'has_function_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_function_privilege_id_name' },
{ oid => '2259', descr => 'user privilege on function by user oid, function oid',
  n => 'has_function_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_function_privilege_id_id' },
{ oid => '2260', descr => 'current user privilege on function by function name',
  n => 'has_function_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_function_privilege_name' },
{ oid => '2261', descr => 'current user privilege on function by function oid',
  n => 'has_function_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_function_privilege_id' },

{ oid => '2262', descr => 'user privilege on language by username, language name',
  n => 'has_language_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_language_privilege_name_name' },
{ oid => '2263', descr => 'user privilege on language by username, language oid',
  n => 'has_language_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_language_privilege_name_id' },
{ oid => '2264', descr => 'user privilege on language by user oid, language name',
  n => 'has_language_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_language_privilege_id_name' },
{ oid => '2265', descr => 'user privilege on language by user oid, language oid',
  n => 'has_language_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_language_privilege_id_id' },
{ oid => '2266', descr => 'current user privilege on language by language name',
  n => 'has_language_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_language_privilege_name' },
{ oid => '2267', descr => 'current user privilege on language by language oid',
  n => 'has_language_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_language_privilege_id' },

{ oid => '2268', descr => 'user privilege on schema by username, schema name',
  n => 'has_schema_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_schema_privilege_name_name' },
{ oid => '2269', descr => 'user privilege on schema by username, schema oid',
  n => 'has_schema_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_schema_privilege_name_id' },
{ oid => '2270', descr => 'user privilege on schema by user oid, schema name',
  n => 'has_schema_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_schema_privilege_id_name' },
{ oid => '2271', descr => 'user privilege on schema by user oid, schema oid',
  n => 'has_schema_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_schema_privilege_id_id' },
{ oid => '2272', descr => 'current user privilege on schema by schema name',
  n => 'has_schema_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_schema_privilege_name' },
{ oid => '2273', descr => 'current user privilege on schema by schema oid',
  n => 'has_schema_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_schema_privilege_id' },

{ oid => '2390', descr => 'user privilege on tablespace by username, tablespace name',
  n => 'has_tablespace_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_tablespace_privilege_name_name' },
{ oid => '2391', descr => 'user privilege on tablespace by username, tablespace oid',
  n => 'has_tablespace_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_tablespace_privilege_name_id' },
{ oid => '2392', descr => 'user privilege on tablespace by user oid, tablespace name',
  n => 'has_tablespace_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_tablespace_privilege_id_name' },
{ oid => '2393', descr => 'user privilege on tablespace by user oid, tablespace oid',
  n => 'has_tablespace_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_tablespace_privilege_id_id' },
{ oid => '2394', descr => 'current user privilege on tablespace by tablespace name',
  n => 'has_tablespace_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_tablespace_privilege_name' },
{ oid => '2395', descr => 'current user privilege on tablespace by tablespace oid',
  n => 'has_tablespace_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_tablespace_privilege_id' },

{ oid => '3000', descr => 'user privilege on foreign data wrapper by username, foreign data wrapper name',
  n => 'has_foreign_data_wrapper_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_foreign_data_wrapper_privilege_name_name' },
{ oid => '3001', descr => 'user privilege on foreign data wrapper by username, foreign data wrapper oid',
  n => 'has_foreign_data_wrapper_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_foreign_data_wrapper_privilege_name_id' },
{ oid => '3002', descr => 'user privilege on foreign data wrapper by user oid, foreign data wrapper name',
  n => 'has_foreign_data_wrapper_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_foreign_data_wrapper_privilege_id_name' },
{ oid => '3003', descr => 'user privilege on foreign data wrapper by user oid, foreign data wrapper oid',
  n => 'has_foreign_data_wrapper_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_foreign_data_wrapper_privilege_id_id' },
{ oid => '3004', descr => 'current user privilege on foreign data wrapper by foreign data wrapper name',
  n => 'has_foreign_data_wrapper_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_foreign_data_wrapper_privilege_name' },
{ oid => '3005', descr => 'current user privilege on foreign data wrapper by foreign data wrapper oid',
  n => 'has_foreign_data_wrapper_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_foreign_data_wrapper_privilege_id' },

{ oid => '3006', descr => 'user privilege on server by username, server name',
  n => 'has_server_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_server_privilege_name_name' },
{ oid => '3007', descr => 'user privilege on server by username, server oid',
  n => 'has_server_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_server_privilege_name_id' },
{ oid => '3008', descr => 'user privilege on server by user oid, server name',
  n => 'has_server_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_server_privilege_id_name' },
{ oid => '3009', descr => 'user privilege on server by user oid, server oid',
  n => 'has_server_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_server_privilege_id_id' },
{ oid => '3010', descr => 'current user privilege on server by server name',
  n => 'has_server_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_server_privilege_name' },
{ oid => '3011', descr => 'current user privilege on server by server oid',
  n => 'has_server_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_server_privilege_id' },

{ oid => '3138', descr => 'user privilege on type by username, type name',
  n => 'has_type_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text text', s => 'has_type_privilege_name_name' },
{ oid => '3139', descr => 'user privilege on type by username, type oid',
  n => 'has_type_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'has_type_privilege_name_id' },
{ oid => '3140', descr => 'user privilege on type by user oid, type name',
  n => 'has_type_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text text', s => 'has_type_privilege_id_name' },
{ oid => '3141', descr => 'user privilege on type by user oid, type oid',
  n => 'has_type_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'has_type_privilege_id_id' },
{ oid => '3142', descr => 'current user privilege on type by type name',
  n => 'has_type_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text', s => 'has_type_privilege_name' },
{ oid => '3143', descr => 'current user privilege on type by type oid',
  n => 'has_type_privilege', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'has_type_privilege_id' },

{ oid => '2705', descr => 'user privilege on role by username, role name',
  n => 'pg_has_role', is => 't', v => 's', p => 's', rt => 'bool', at => 'name name text', s => 'pg_has_role_name_name' },
{ oid => '2706', descr => 'user privilege on role by username, role oid',
  n => 'pg_has_role', is => 't', v => 's', p => 's', rt => 'bool', at => 'name oid text', s => 'pg_has_role_name_id' },
{ oid => '2707', descr => 'user privilege on role by user oid, role name',
  n => 'pg_has_role', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid name text', s => 'pg_has_role_id_name' },
{ oid => '2708', descr => 'user privilege on role by user oid, role oid',
  n => 'pg_has_role', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid oid text', s => 'pg_has_role_id_id' },
{ oid => '2709', descr => 'current user privilege on role by role name',
  n => 'pg_has_role', is => 't', v => 's', p => 's', rt => 'bool', at => 'name text', s => 'pg_has_role_name' },
{ oid => '2710', descr => 'current user privilege on role by role oid',
  n => 'pg_has_role', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid text', s => 'pg_has_role_id' },

{ oid => '1269', descr => 'bytes required to store the value, perhaps with compression',
  n => 'pg_column_size', is => 't', v => 's', p => 's', rt => 'int4', at => 'any' },
{ oid => '2322', descr => 'total disk space usage for the specified tablespace',
  n => 'pg_tablespace_size', is => 't', p => 's', rt => 'int8', at => 'oid', s => 'pg_tablespace_size_oid' },
{ oid => '2323', descr => 'total disk space usage for the specified tablespace',
  n => 'pg_tablespace_size', is => 't', p => 's', rt => 'int8', at => 'name', s => 'pg_tablespace_size_name' },
{ oid => '2324', descr => 'total disk space usage for the specified database',
  n => 'pg_database_size', is => 't', p => 's', rt => 'int8', at => 'oid', s => 'pg_database_size_oid' },
{ oid => '2168', descr => 'total disk space usage for the specified database',
  n => 'pg_database_size', is => 't', p => 's', rt => 'int8', at => 'name', s => 'pg_database_size_name' },
{ oid => '2325', descr => 'disk space usage for the main fork of the specified table or index',
  n => 'pg_relation_size', prolang => '14', is => 't', p => 's', rt => 'int8', at => 'regclass', s => 'select pg_catalog.pg_relation_size($1, \'\'main\'\')' },
{ oid => '2332', descr => 'disk space usage for the specified fork of a table or index',
  n => 'pg_relation_size', is => 't', p => 's', rt => 'int8', at => 'regclass text' },
{ oid => '2286', descr => 'total disk space usage for the specified table and associated indexes',
  n => 'pg_total_relation_size', is => 't', p => 's', rt => 'int8', at => 'regclass' },
{ oid => '2288', descr => 'convert a long int to a human readable text using size units',
  n => 'pg_size_pretty', is => 't', v => 'i', p => 's', rt => 'text', at => 'int8' },
{ oid => '3166', descr => 'convert a numeric to a human readable text using size units',
  n => 'pg_size_pretty', is => 't', v => 'i', p => 's', rt => 'text', at => 'numeric', s => 'pg_size_pretty_numeric' },
{ oid => '3334', descr => 'convert a size in human-readable format with size units into bytes',
  n => 'pg_size_bytes', is => 't', v => 'i', p => 's', rt => 'int8', at => 'text' },
{ oid => '2997', descr => 'disk space usage for the specified table, including TOAST, free space and visibility map',
  n => 'pg_table_size', is => 't', p => 's', rt => 'int8', at => 'regclass' },
{ oid => '2998', descr => 'disk space usage for all indexes attached to the specified table',
  n => 'pg_indexes_size', is => 't', p => 's', rt => 'int8', at => 'regclass' },
{ oid => '2999', descr => 'filenode identifier of relation',
  n => 'pg_relation_filenode', is => 't', v => 's', p => 's', rt => 'oid', at => 'regclass' },
{ oid => '3454', descr => 'relation OID for filenode and tablespace',
  n => 'pg_filenode_relation', is => 't', v => 's', p => 's', rt => 'regclass', at => 'oid oid' },
{ oid => '3034', descr => 'file path of relation',
  n => 'pg_relation_filepath', is => 't', v => 's', p => 's', rt => 'text', at => 'regclass' },

{ oid => '2316', descr => '(internal)',
  n => 'postgresql_fdw_validator', is => 't', v => 'i', p => 's', rt => 'bool', at => '_text oid' },

{ oid => '2290', descr => 'I/O',
  n => 'record_in', is => 't', v => 's', p => 's', rt => 'record', at => 'cstring oid int4' },
{ oid => '2291', descr => 'I/O',
  n => 'record_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'record' },
{ oid => '2292', descr => 'I/O',
  n => 'cstring_in', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'cstring' },
{ oid => '2293', descr => 'I/O',
  n => 'cstring_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'cstring' },
{ oid => '2294', descr => 'I/O',
  n => 'any_in', is => 't', v => 'i', p => 's', rt => 'any', at => 'cstring' },
{ oid => '2295', descr => 'I/O',
  n => 'any_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'any' },
{ oid => '2296', descr => 'I/O',
  n => 'anyarray_in', is => 't', v => 'i', p => 's', rt => 'anyarray', at => 'cstring' },
{ oid => '2297', descr => 'I/O',
  n => 'anyarray_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'anyarray' },
{ oid => '2298', descr => 'I/O',
  n => 'void_in', is => 't', v => 'i', p => 's', rt => 'void', at => 'cstring' },
{ oid => '2299', descr => 'I/O',
  n => 'void_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'void' },
{ oid => '2300', descr => 'I/O',
  n => 'trigger_in', v => 'i', p => 's', rt => 'trigger', at => 'cstring' },
{ oid => '2301', descr => 'I/O',
  n => 'trigger_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'trigger' },
{ oid => '3594', descr => 'I/O',
  n => 'event_trigger_in', v => 'i', p => 's', rt => 'event_trigger', at => 'cstring' },
{ oid => '3595', descr => 'I/O',
  n => 'event_trigger_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'event_trigger' },
{ oid => '2302', descr => 'I/O',
  n => 'language_handler_in', v => 'i', p => 's', rt => 'language_handler', at => 'cstring' },
{ oid => '2303', descr => 'I/O',
  n => 'language_handler_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'language_handler' },
{ oid => '2304', descr => 'I/O',
  n => 'internal_in', v => 'i', p => 's', rt => 'internal', at => 'cstring' },
{ oid => '2305', descr => 'I/O',
  n => 'internal_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'internal' },
{ oid => '2306', descr => 'I/O',
  n => 'opaque_in', v => 'i', p => 's', rt => 'opaque', at => 'cstring' },
{ oid => '2307', descr => 'I/O',
  n => 'opaque_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'opaque' },
{ oid => '2312', descr => 'I/O',
  n => 'anyelement_in', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'cstring' },
{ oid => '2313', descr => 'I/O',
  n => 'anyelement_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'anyelement' },
{ oid => '2398', descr => 'I/O',
  n => 'shell_in', v => 'i', p => 's', rt => 'opaque', at => 'cstring' },
{ oid => '2399', descr => 'I/O',
  n => 'shell_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'opaque' },
{ oid => '2597', descr => 'I/O',
  n => 'domain_in', v => 's', p => 's', rt => 'any', at => 'cstring oid int4' },
{ oid => '2598', descr => 'I/O',
  n => 'domain_recv', v => 's', p => 's', rt => 'any', at => 'internal oid int4' },
{ oid => '2777', descr => 'I/O',
  n => 'anynonarray_in', is => 't', v => 'i', p => 's', rt => 'anynonarray', at => 'cstring' },
{ oid => '2778', descr => 'I/O',
  n => 'anynonarray_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'anynonarray' },
{ oid => '3116', descr => 'I/O',
  n => 'fdw_handler_in', v => 'i', p => 's', rt => 'fdw_handler', at => 'cstring' },
{ oid => '3117', descr => 'I/O',
  n => 'fdw_handler_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'fdw_handler' },
{ oid => '326', descr => 'I/O',
  n => 'index_am_handler_in', v => 'i', p => 's', rt => 'index_am_handler', at => 'cstring' },
{ oid => '327', descr => 'I/O',
  n => 'index_am_handler_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'index_am_handler' },
{ oid => '3311', descr => 'I/O',
  n => 'tsm_handler_in', v => 'i', p => 's', rt => 'tsm_handler', at => 'cstring' },
{ oid => '3312', descr => 'I/O',
  n => 'tsm_handler_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'tsm_handler' },

# tablesample method handlers
{ oid => '3313', descr => 'BERNOULLI tablesample method handler',
  n => 'bernoulli', is => 't', p => 's', rt => 'tsm_handler', at => 'internal', s => 'tsm_bernoulli_handler' },
{ oid => '3314', descr => 'SYSTEM tablesample method handler',
  n => 'system', is => 't', p => 's', rt => 'tsm_handler', at => 'internal', s => 'tsm_system_handler' },

# cryptographic
{ oid => '2311', descr => 'MD5 hash',
  n => 'md5', is => 't', v => 'i', p => 's', rt => 'text', at => 'text', s => 'md5_text' },
{ oid => '2321', descr => 'MD5 hash',
  n => 'md5', is => 't', v => 'i', p => 's', rt => 'text', at => 'bytea', s => 'md5_bytea' },

# crosstype operations for date vs. timestamp and timestamptz
{ oid => '2338',
  n => 'date_lt_timestamp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date timestamp' },
{ oid => '2339',
  n => 'date_le_timestamp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date timestamp' },
{ oid => '2340',
  n => 'date_eq_timestamp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date timestamp' },
{ oid => '2341',
  n => 'date_gt_timestamp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date timestamp' },
{ oid => '2342',
  n => 'date_ge_timestamp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date timestamp' },
{ oid => '2343',
  n => 'date_ne_timestamp', is => 't', v => 'i', p => 's', rt => 'bool', at => 'date timestamp' },
{ oid => '2344', descr => 'less-equal-greater',
  n => 'date_cmp_timestamp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'date timestamp' },

{ oid => '2351',
  n => 'date_lt_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'date timestamptz' },
{ oid => '2352',
  n => 'date_le_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'date timestamptz' },
{ oid => '2353',
  n => 'date_eq_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'date timestamptz' },
{ oid => '2354',
  n => 'date_gt_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'date timestamptz' },
{ oid => '2355',
  n => 'date_ge_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'date timestamptz' },
{ oid => '2356',
  n => 'date_ne_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'date timestamptz' },
{ oid => '2357', descr => 'less-equal-greater',
  n => 'date_cmp_timestamptz', is => 't', v => 's', p => 's', rt => 'int4', at => 'date timestamptz' },

{ oid => '2364',
  n => 'timestamp_lt_date', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp date' },
{ oid => '2365',
  n => 'timestamp_le_date', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp date' },
{ oid => '2366',
  n => 'timestamp_eq_date', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp date' },
{ oid => '2367',
  n => 'timestamp_gt_date', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp date' },
{ oid => '2368',
  n => 'timestamp_ge_date', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp date' },
{ oid => '2369',
  n => 'timestamp_ne_date', is => 't', v => 'i', p => 's', rt => 'bool', at => 'timestamp date' },
{ oid => '2370', descr => 'less-equal-greater',
  n => 'timestamp_cmp_date', is => 't', v => 'i', p => 's', rt => 'int4', at => 'timestamp date' },

{ oid => '2377',
  n => 'timestamptz_lt_date', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz date' },
{ oid => '2378',
  n => 'timestamptz_le_date', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz date' },
{ oid => '2379',
  n => 'timestamptz_eq_date', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz date' },
{ oid => '2380',
  n => 'timestamptz_gt_date', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz date' },
{ oid => '2381',
  n => 'timestamptz_ge_date', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz date' },
{ oid => '2382',
  n => 'timestamptz_ne_date', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz date' },
{ oid => '2383', descr => 'less-equal-greater',
  n => 'timestamptz_cmp_date', is => 't', v => 's', p => 's', rt => 'int4', at => 'timestamptz date' },

# crosstype operations for timestamp vs. timestamptz
{ oid => '2520',
  n => 'timestamp_lt_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamp timestamptz' },
{ oid => '2521',
  n => 'timestamp_le_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamp timestamptz' },
{ oid => '2522',
  n => 'timestamp_eq_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamp timestamptz' },
{ oid => '2523',
  n => 'timestamp_gt_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamp timestamptz' },
{ oid => '2524',
  n => 'timestamp_ge_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamp timestamptz' },
{ oid => '2525',
  n => 'timestamp_ne_timestamptz', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamp timestamptz' },
{ oid => '2526', descr => 'less-equal-greater',
  n => 'timestamp_cmp_timestamptz', is => 't', v => 's', p => 's', rt => 'int4', at => 'timestamp timestamptz' },

{ oid => '2527',
  n => 'timestamptz_lt_timestamp', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamp' },
{ oid => '2528',
  n => 'timestamptz_le_timestamp', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamp' },
{ oid => '2529',
  n => 'timestamptz_eq_timestamp', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamp' },
{ oid => '2530',
  n => 'timestamptz_gt_timestamp', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamp' },
{ oid => '2531',
  n => 'timestamptz_ge_timestamp', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamp' },
{ oid => '2532',
  n => 'timestamptz_ne_timestamp', is => 't', v => 's', p => 's', rt => 'bool', at => 'timestamptz timestamp' },
{ oid => '2533', descr => 'less-equal-greater',
  n => 'timestamptz_cmp_timestamp', is => 't', v => 's', p => 's', rt => 'int4', at => 'timestamptz timestamp' },

# send/receive functions
{ oid => '2400', descr => 'I/O',
  n => 'array_recv', is => 't', v => 's', p => 's', rt => 'anyarray', at => 'internal oid int4' },
{ oid => '2401', descr => 'I/O',
  n => 'array_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'anyarray' },
{ oid => '2402', descr => 'I/O',
  n => 'record_recv', is => 't', v => 's', p => 's', rt => 'record', at => 'internal oid int4' },
{ oid => '2403', descr => 'I/O',
  n => 'record_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'record' },
{ oid => '2404', descr => 'I/O',
  n => 'int2recv', is => 't', v => 'i', p => 's', rt => 'int2', at => 'internal' },
{ oid => '2405', descr => 'I/O',
  n => 'int2send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'int2' },
{ oid => '2406', descr => 'I/O',
  n => 'int4recv', is => 't', v => 'i', p => 's', rt => 'int4', at => 'internal' },
{ oid => '2407', descr => 'I/O',
  n => 'int4send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'int4' },
{ oid => '2408', descr => 'I/O',
  n => 'int8recv', is => 't', v => 'i', p => 's', rt => 'int8', at => 'internal' },
{ oid => '2409', descr => 'I/O',
  n => 'int8send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'int8' },
{ oid => '2410', descr => 'I/O',
  n => 'int2vectorrecv', is => 't', v => 'i', p => 's', rt => 'int2vector', at => 'internal' },
{ oid => '2411', descr => 'I/O',
  n => 'int2vectorsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'int2vector' },
{ oid => '2412', descr => 'I/O',
  n => 'bytearecv', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'internal' },
{ oid => '2413', descr => 'I/O',
  n => 'byteasend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bytea' },
{ oid => '2414', descr => 'I/O',
  n => 'textrecv', is => 't', v => 's', p => 's', rt => 'text', at => 'internal' },
{ oid => '2415', descr => 'I/O',
  n => 'textsend', is => 't', v => 's', p => 's', rt => 'bytea', at => 'text' },
{ oid => '2416', descr => 'I/O',
  n => 'unknownrecv', is => 't', v => 'i', p => 's', rt => 'unknown', at => 'internal' },
{ oid => '2417', descr => 'I/O',
  n => 'unknownsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'unknown' },
{ oid => '2418', descr => 'I/O',
  n => 'oidrecv', is => 't', v => 'i', p => 's', rt => 'oid', at => 'internal' },
{ oid => '2419', descr => 'I/O',
  n => 'oidsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'oid' },
{ oid => '2420', descr => 'I/O',
  n => 'oidvectorrecv', is => 't', v => 'i', p => 's', rt => 'oidvector', at => 'internal' },
{ oid => '2421', descr => 'I/O',
  n => 'oidvectorsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'oidvector' },
{ oid => '2422', descr => 'I/O',
  n => 'namerecv', is => 't', v => 's', p => 's', rt => 'name', at => 'internal' },
{ oid => '2423', descr => 'I/O',
  n => 'namesend', is => 't', v => 's', p => 's', rt => 'bytea', at => 'name' },
{ oid => '2424', descr => 'I/O',
  n => 'float4recv', is => 't', v => 'i', p => 's', rt => 'float4', at => 'internal' },
{ oid => '2425', descr => 'I/O',
  n => 'float4send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'float4' },
{ oid => '2426', descr => 'I/O',
  n => 'float8recv', is => 't', v => 'i', p => 's', rt => 'float8', at => 'internal' },
{ oid => '2427', descr => 'I/O',
  n => 'float8send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'float8' },
{ oid => '2428', descr => 'I/O',
  n => 'point_recv', is => 't', v => 'i', p => 's', rt => 'point', at => 'internal' },
{ oid => '2429', descr => 'I/O',
  n => 'point_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'point' },
{ oid => '2430', descr => 'I/O',
  n => 'bpcharrecv', is => 't', v => 's', p => 's', rt => 'bpchar', at => 'internal oid int4' },
{ oid => '2431', descr => 'I/O',
  n => 'bpcharsend', is => 't', v => 's', p => 's', rt => 'bytea', at => 'bpchar' },
{ oid => '2432', descr => 'I/O',
  n => 'varcharrecv', is => 't', v => 's', p => 's', rt => 'varchar', at => 'internal oid int4' },
{ oid => '2433', descr => 'I/O',
  n => 'varcharsend', is => 't', v => 's', p => 's', rt => 'bytea', at => 'varchar' },
{ oid => '2434', descr => 'I/O',
  n => 'charrecv', is => 't', v => 'i', p => 's', rt => 'char', at => 'internal' },
{ oid => '2435', descr => 'I/O',
  n => 'charsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'char' },
{ oid => '2436', descr => 'I/O',
  n => 'boolrecv', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal' },
{ oid => '2437', descr => 'I/O',
  n => 'boolsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bool' },
{ oid => '2438', descr => 'I/O',
  n => 'tidrecv', is => 't', v => 'i', p => 's', rt => 'tid', at => 'internal' },
{ oid => '2439', descr => 'I/O',
  n => 'tidsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'tid' },
{ oid => '2440', descr => 'I/O',
  n => 'xidrecv', is => 't', v => 'i', p => 's', rt => 'xid', at => 'internal' },
{ oid => '2441', descr => 'I/O',
  n => 'xidsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'xid' },
{ oid => '2442', descr => 'I/O',
  n => 'cidrecv', is => 't', v => 'i', p => 's', rt => 'cid', at => 'internal' },
{ oid => '2443', descr => 'I/O',
  n => 'cidsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'cid' },
{ oid => '2444', descr => 'I/O',
  n => 'regprocrecv', is => 't', v => 'i', p => 's', rt => 'regproc', at => 'internal' },
{ oid => '2445', descr => 'I/O',
  n => 'regprocsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regproc' },
{ oid => '2446', descr => 'I/O',
  n => 'regprocedurerecv', is => 't', v => 'i', p => 's', rt => 'regprocedure', at => 'internal' },
{ oid => '2447', descr => 'I/O',
  n => 'regproceduresend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regprocedure' },
{ oid => '2448', descr => 'I/O',
  n => 'regoperrecv', is => 't', v => 'i', p => 's', rt => 'regoper', at => 'internal' },
{ oid => '2449', descr => 'I/O',
  n => 'regopersend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regoper' },
{ oid => '2450', descr => 'I/O',
  n => 'regoperatorrecv', is => 't', v => 'i', p => 's', rt => 'regoperator', at => 'internal' },
{ oid => '2451', descr => 'I/O',
  n => 'regoperatorsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regoperator' },
{ oid => '2452', descr => 'I/O',
  n => 'regclassrecv', is => 't', v => 'i', p => 's', rt => 'regclass', at => 'internal' },
{ oid => '2453', descr => 'I/O',
  n => 'regclasssend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regclass' },
{ oid => '2454', descr => 'I/O',
  n => 'regtyperecv', is => 't', v => 'i', p => 's', rt => 'regtype', at => 'internal' },
{ oid => '2455', descr => 'I/O',
  n => 'regtypesend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regtype' },

{ oid => '4094', descr => 'I/O',
  n => 'regrolerecv', is => 't', v => 'i', p => 's', rt => 'regrole', at => 'internal' },
{ oid => '4095', descr => 'I/O',
  n => 'regrolesend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regrole' },
{ oid => '4087', descr => 'I/O',
  n => 'regnamespacerecv', is => 't', v => 'i', p => 's', rt => 'regnamespace', at => 'internal' },
{ oid => '4088', descr => 'I/O',
  n => 'regnamespacesend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regnamespace' },
{ oid => '2456', descr => 'I/O',
  n => 'bit_recv', is => 't', v => 'i', p => 's', rt => 'bit', at => 'internal oid int4' },
{ oid => '2457', descr => 'I/O',
  n => 'bit_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'bit' },
{ oid => '2458', descr => 'I/O',
  n => 'varbit_recv', is => 't', v => 'i', p => 's', rt => 'varbit', at => 'internal oid int4' },
{ oid => '2459', descr => 'I/O',
  n => 'varbit_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'varbit' },
{ oid => '2460', descr => 'I/O',
  n => 'numeric_recv', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'internal oid int4' },
{ oid => '2461', descr => 'I/O',
  n => 'numeric_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'numeric' },
{ oid => '2462', descr => 'I/O',
  n => 'abstimerecv', is => 't', v => 'i', p => 's', rt => 'abstime', at => 'internal' },
{ oid => '2463', descr => 'I/O',
  n => 'abstimesend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'abstime' },
{ oid => '2464', descr => 'I/O',
  n => 'reltimerecv', is => 't', v => 'i', p => 's', rt => 'reltime', at => 'internal' },
{ oid => '2465', descr => 'I/O',
  n => 'reltimesend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'reltime' },
{ oid => '2466', descr => 'I/O',
  n => 'tintervalrecv', is => 't', v => 'i', p => 's', rt => 'tinterval', at => 'internal' },
{ oid => '2467', descr => 'I/O',
  n => 'tintervalsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'tinterval' },
{ oid => '2468', descr => 'I/O',
  n => 'date_recv', is => 't', v => 'i', p => 's', rt => 'date', at => 'internal' },
{ oid => '2469', descr => 'I/O',
  n => 'date_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'date' },
{ oid => '2470', descr => 'I/O',
  n => 'time_recv', is => 't', v => 'i', p => 's', rt => 'time', at => 'internal oid int4' },
{ oid => '2471', descr => 'I/O',
  n => 'time_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'time' },
{ oid => '2472', descr => 'I/O',
  n => 'timetz_recv', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'internal oid int4' },
{ oid => '2473', descr => 'I/O',
  n => 'timetz_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'timetz' },
{ oid => '2474', descr => 'I/O',
  n => 'timestamp_recv', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'internal oid int4' },
{ oid => '2475', descr => 'I/O',
  n => 'timestamp_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'timestamp' },
{ oid => '2476', descr => 'I/O',
  n => 'timestamptz_recv', is => 't', v => 'i', p => 's', rt => 'timestamptz', at => 'internal oid int4' },
{ oid => '2477', descr => 'I/O',
  n => 'timestamptz_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'timestamptz' },
{ oid => '2478', descr => 'I/O',
  n => 'interval_recv', is => 't', v => 'i', p => 's', rt => 'interval', at => 'internal oid int4' },
{ oid => '2479', descr => 'I/O',
  n => 'interval_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'interval' },
{ oid => '2480', descr => 'I/O',
  n => 'lseg_recv', is => 't', v => 'i', p => 's', rt => 'lseg', at => 'internal' },
{ oid => '2481', descr => 'I/O',
  n => 'lseg_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'lseg' },
{ oid => '2482', descr => 'I/O',
  n => 'path_recv', is => 't', v => 'i', p => 's', rt => 'path', at => 'internal' },
{ oid => '2483', descr => 'I/O',
  n => 'path_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'path' },
{ oid => '2484', descr => 'I/O',
  n => 'box_recv', is => 't', v => 'i', p => 's', rt => 'box', at => 'internal' },
{ oid => '2485', descr => 'I/O',
  n => 'box_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'box' },
{ oid => '2486', descr => 'I/O',
  n => 'poly_recv', is => 't', v => 'i', p => 's', rt => 'polygon', at => 'internal' },
{ oid => '2487', descr => 'I/O',
  n => 'poly_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'polygon' },
{ oid => '2488', descr => 'I/O',
  n => 'line_recv', is => 't', v => 'i', p => 's', rt => 'line', at => 'internal' },
{ oid => '2489', descr => 'I/O',
  n => 'line_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'line' },
{ oid => '2490', descr => 'I/O',
  n => 'circle_recv', is => 't', v => 'i', p => 's', rt => 'circle', at => 'internal' },
{ oid => '2491', descr => 'I/O',
  n => 'circle_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'circle' },
{ oid => '2492', descr => 'I/O',
  n => 'cash_recv', is => 't', v => 'i', p => 's', rt => 'money', at => 'internal' },
{ oid => '2493', descr => 'I/O',
  n => 'cash_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'money' },
{ oid => '2494', descr => 'I/O',
  n => 'macaddr_recv', is => 't', v => 'i', p => 's', rt => 'macaddr', at => 'internal' },
{ oid => '2495', descr => 'I/O',
  n => 'macaddr_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'macaddr' },
{ oid => '2496', descr => 'I/O',
  n => 'inet_recv', is => 't', v => 'i', p => 's', rt => 'inet', at => 'internal' },
{ oid => '2497', descr => 'I/O',
  n => 'inet_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'inet' },
{ oid => '2498', descr => 'I/O',
  n => 'cidr_recv', is => 't', v => 'i', p => 's', rt => 'cidr', at => 'internal' },
{ oid => '2499', descr => 'I/O',
  n => 'cidr_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'cidr' },
{ oid => '2500', descr => 'I/O',
  n => 'cstring_recv', is => 't', v => 's', p => 's', rt => 'cstring', at => 'internal' },
{ oid => '2501', descr => 'I/O',
  n => 'cstring_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'cstring' },
{ oid => '2502', descr => 'I/O',
  n => 'anyarray_recv', is => 't', v => 's', p => 's', rt => 'anyarray', at => 'internal' },
{ oid => '2503', descr => 'I/O',
  n => 'anyarray_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'anyarray' },
{ oid => '3120', descr => 'I/O',
  n => 'void_recv', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '3121', descr => 'I/O',
  n => 'void_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'void' },
{ oid => '3446', descr => 'I/O',
  n => 'macaddr8_recv', is => 't', v => 'i', p => 's', rt => 'macaddr8', at => 'internal' },
{ oid => '3447', descr => 'I/O',
  n => 'macaddr8_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'macaddr8' },

# System-view support functions with pretty-print option
{ oid => '2504', descr => 'source text of a rule with pretty-print option',
  n => 'pg_get_ruledef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid bool', s => 'pg_get_ruledef_ext' },
{ oid => '2505', descr => 'select statement of a view with pretty-print option',
  n => 'pg_get_viewdef', is => 't', v => 's', p => 'r', rt => 'text', at => 'text bool', s => 'pg_get_viewdef_name_ext' },
{ oid => '2506', descr => 'select statement of a view with pretty-print option',
  n => 'pg_get_viewdef', is => 't', v => 's', p => 'r', rt => 'text', at => 'oid bool', s => 'pg_get_viewdef_ext' },
{ oid => '3159', descr => 'select statement of a view with pretty-printing and specified line wrapping',
  n => 'pg_get_viewdef', is => 't', v => 's', p => 'r', rt => 'text', at => 'oid int4', s => 'pg_get_viewdef_wrap' },
{ oid => '2507', descr => 'index description (full create statement or single expression) with pretty-print option',
  n => 'pg_get_indexdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid int4 bool', s => 'pg_get_indexdef_ext' },
{ oid => '2508', descr => 'constraint description with pretty-print option',
  n => 'pg_get_constraintdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid bool', s => 'pg_get_constraintdef_ext' },
{ oid => '2509', descr => 'deparse an encoded expression with pretty-print option',
  n => 'pg_get_expr', is => 't', v => 's', p => 's', rt => 'text', at => 'pg_node_tree oid bool', s => 'pg_get_expr_ext' },
{ oid => '2510', descr => 'get the prepared statements for this session',
  n => 'pg_prepared_statement', prorows => '1000', is => 't', proretset => 't', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{text,text,timestamptz,_regtype,bool}', proargmodes => '{o,o,o,o,o}', proargnames => '{name,statement,prepare_time,parameter_types,from_sql}' },
{ oid => '2511', descr => 'get the open cursors for this session',
  n => 'pg_cursor', prorows => '1000', is => 't', proretset => 't', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{text,text,bool,bool,bool,timestamptz}', proargmodes => '{o,o,o,o,o,o}', proargnames => '{name,statement,is_holdable,is_binary,is_scrollable,creation_time}' },
{ oid => '2599', descr => 'get the available time zone abbreviations',
  n => 'pg_timezone_abbrevs', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{text,interval,bool}', proargmodes => '{o,o,o}', proargnames => '{abbrev,utc_offset,is_dst}' },
{ oid => '2856', descr => 'get the available time zone names',
  n => 'pg_timezone_names', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{text,text,interval,bool}', proargmodes => '{o,o,o,o}', proargnames => '{name,abbrev,utc_offset,is_dst}' },
{ oid => '2730', descr => 'trigger description with pretty-print option',
  n => 'pg_get_triggerdef', is => 't', v => 's', p => 's', rt => 'text', at => 'oid bool', s => 'pg_get_triggerdef_ext' },

# asynchronous notifications
{ oid => '3035', descr => 'get the channels that the current backend listens to',
  n => 'pg_listening_channels', prorows => '10', is => 't', proretset => 't', v => 's', p => 'r', rt => 'text', at => '' },
{ oid => '3036', descr => 'send a notification event',
  n => 'pg_notify', p => 'r', rt => 'void', at => 'text text' },
{ oid => '3296', descr => 'get the fraction of the asynchronous notification queue currently in use',
  n => 'pg_notification_queue_usage', is => 't', p => 's', rt => 'float8', at => '' },

# non-persistent series generator
{ oid => '1066', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4 int4', s => 'generate_series_step_int4' },
{ oid => '1067', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int4', at => 'int4 int4', s => 'generate_series_int4' },
{ oid => '1068', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8 int8', s => 'generate_series_step_int8' },
{ oid => '1069', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int8', at => 'int8 int8', s => 'generate_series_int8' },
{ oid => '3259', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric numeric', s => 'generate_series_step_numeric' },
{ oid => '3260', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'numeric', at => 'numeric numeric', s => 'generate_series_numeric' },
{ oid => '938', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'timestamp', at => 'timestamp timestamp interval', s => 'generate_series_timestamp' },
{ oid => '939', descr => 'non-persistent series generator',
  n => 'generate_series', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'timestamptz', at => 'timestamptz timestamptz interval', s => 'generate_series_timestamptz' },

# boolean aggregates
{ oid => '2515', descr => 'aggregate transition function',
  n => 'booland_statefunc', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '2516', descr => 'aggregate transition function',
  n => 'boolor_statefunc', is => 't', v => 'i', p => 's', rt => 'bool', at => 'bool bool' },
{ oid => '3496', descr => 'aggregate transition function',
  n => 'bool_accum', v => 'i', p => 's', rt => 'internal', at => 'internal bool' },
{ oid => '3497', descr => 'aggregate transition function',
  n => 'bool_accum_inv', v => 'i', p => 's', rt => 'internal', at => 'internal bool' },
{ oid => '3498', descr => 'aggregate final function',
  n => 'bool_alltrue', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal' },
{ oid => '3499', descr => 'aggregate final function',
  n => 'bool_anytrue', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal' },
{ oid => '2517', descr => 'boolean-and aggregate',
  n => 'bool_and', proisagg => 't', v => 'i', p => 's', rt => 'bool', at => 'bool', s => 'aggregate_dummy' },

# ANY, SOME? These names conflict with subquery operators. See doc.
{ oid => '2518', descr => 'boolean-or aggregate',
  n => 'bool_or', proisagg => 't', v => 'i', p => 's', rt => 'bool', at => 'bool', s => 'aggregate_dummy' },
{ oid => '2519', descr => 'boolean-and aggregate',
  n => 'every', proisagg => 't', v => 'i', p => 's', rt => 'bool', at => 'bool', s => 'aggregate_dummy' },

# bitwise integer aggregates
{ oid => '2236', descr => 'bitwise-and smallint aggregate',
  n => 'bit_and', proisagg => 't', v => 'i', p => 's', rt => 'int2', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2237', descr => 'bitwise-or smallint aggregate',
  n => 'bit_or', proisagg => 't', v => 'i', p => 's', rt => 'int2', at => 'int2', s => 'aggregate_dummy' },
{ oid => '2238', descr => 'bitwise-and integer aggregate',
  n => 'bit_and', proisagg => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2239', descr => 'bitwise-or integer aggregate',
  n => 'bit_or', proisagg => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'aggregate_dummy' },
{ oid => '2240', descr => 'bitwise-and bigint aggregate',
  n => 'bit_and', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2241', descr => 'bitwise-or bigint aggregate',
  n => 'bit_or', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'int8', s => 'aggregate_dummy' },
{ oid => '2242', descr => 'bitwise-and bit aggregate',
  n => 'bit_and', proisagg => 't', v => 'i', p => 's', rt => 'bit', at => 'bit', s => 'aggregate_dummy' },
{ oid => '2243', descr => 'bitwise-or bit aggregate',
  n => 'bit_or', proisagg => 't', v => 'i', p => 's', rt => 'bit', at => 'bit', s => 'aggregate_dummy' },

# formerly-missing interval + datetime operators
{ oid => '2546',
  n => 'interval_pl_date', prolang => '14', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'interval date', s => 'select $2 + $1' },
{ oid => '2547',
  n => 'interval_pl_timetz', prolang => '14', is => 't', v => 'i', p => 's', rt => 'timetz', at => 'interval timetz', s => 'select $2 + $1' },
{ oid => '2548',
  n => 'interval_pl_timestamp', prolang => '14', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'interval timestamp', s => 'select $2 + $1' },
{ oid => '2549',
  n => 'interval_pl_timestamptz', prolang => '14', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'interval timestamptz', s => 'select $2 + $1' },
{ oid => '2550',
  n => 'integer_pl_date', prolang => '14', is => 't', v => 'i', p => 's', rt => 'date', at => 'int4 date', s => 'select $2 + $1' },

{ oid => '2556', descr => 'get OIDs of databases in a tablespace',
  n => 'pg_tablespace_databases', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'oid', at => 'oid' },

{ oid => '2557', descr => 'convert int4 to boolean',
  n => 'bool', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int4', s => 'int4_bool' },
{ oid => '2558', descr => 'convert boolean to int4',
  n => 'int4', is => 't', v => 'i', p => 's', rt => 'int4', at => 'bool', s => 'bool_int4' },
{ oid => '2559', descr => 'current value from last used sequence',
  n => 'lastval', is => 't', rt => 'int8', at => '' },

# start time function
{ oid => '2560', descr => 'postmaster start time',
  n => 'pg_postmaster_start_time', is => 't', v => 's', p => 's', rt => 'timestamptz', at => '' },

# config reload time function
{ oid => '2034', descr => 'configuration load time',
  n => 'pg_conf_load_time', is => 't', v => 's', p => 'r', rt => 'timestamptz', at => '' },

# new functions for Y-direction rtree opclasses
{ oid => '2562',
  n => 'box_below', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '2563',
  n => 'box_overbelow', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '2564',
  n => 'box_overabove', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '2565',
  n => 'box_above', is => 't', v => 'i', p => 's', rt => 'bool', at => 'box box' },
{ oid => '2566',
  n => 'poly_below', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '2567',
  n => 'poly_overbelow', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '2568',
  n => 'poly_overabove', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '2569',
  n => 'poly_above', is => 't', v => 'i', p => 's', rt => 'bool', at => 'polygon polygon' },
{ oid => '2587',
  n => 'circle_overbelow', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },
{ oid => '2588',
  n => 'circle_overabove', is => 't', v => 'i', p => 's', rt => 'bool', at => 'circle circle' },

# support functions for GiST r-tree emulation
{ oid => '2578', descr => 'GiST support',
  n => 'gist_box_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal box int2 oid internal' },
{ oid => '2581', descr => 'GiST support',
  n => 'gist_box_penalty', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal' },
{ oid => '2582', descr => 'GiST support',
  n => 'gist_box_picksplit', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '2583', descr => 'GiST support',
  n => 'gist_box_union', is => 't', v => 'i', p => 's', rt => 'box', at => 'internal internal' },
{ oid => '2584', descr => 'GiST support',
  n => 'gist_box_same', is => 't', v => 'i', p => 's', rt => 'internal', at => 'box box internal' },
{ oid => '2585', descr => 'GiST support',
  n => 'gist_poly_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal polygon int2 oid internal' },
{ oid => '2586', descr => 'GiST support',
  n => 'gist_poly_compress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '2591', descr => 'GiST support',
  n => 'gist_circle_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal circle int2 oid internal' },
{ oid => '2592', descr => 'GiST support',
  n => 'gist_circle_compress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '1030', descr => 'GiST support',
  n => 'gist_point_compress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3282', descr => 'GiST support',
  n => 'gist_point_fetch', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '2179', descr => 'GiST support',
  n => 'gist_point_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal point int2 oid internal' },
{ oid => '3064', descr => 'GiST support',
  n => 'gist_point_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'internal point int2 oid internal' },
{ oid => '3280', descr => 'GiST support',
  n => 'gist_circle_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'internal circle int2 oid internal' },
{ oid => '3288', descr => 'GiST support',
  n => 'gist_poly_distance', is => 't', v => 'i', p => 's', rt => 'float8', at => 'internal polygon int2 oid internal' },

# GIN array support
{ oid => '2743', descr => 'GIN array support',
  n => 'ginarrayextract', is => 't', v => 'i', p => 's', rt => 'internal', at => 'anyarray internal internal' },
{ oid => '2774', descr => 'GIN array support',
  n => 'ginqueryarrayextract', is => 't', v => 'i', p => 's', rt => 'internal', at => 'anyarray internal int2 internal internal internal internal' },
{ oid => '2744', descr => 'GIN array support',
  n => 'ginarrayconsistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal int2 anyarray int4 internal internal internal internal' },
{ oid => '3920', descr => 'GIN array support',
  n => 'ginarraytriconsistent', is => 't', v => 'i', p => 's', rt => 'char', at => 'internal int2 anyarray int4 internal internal internal' },
{ oid => '3076', descr => 'GIN array support (obsolete)',
  n => 'ginarrayextract', is => 't', v => 'i', p => 's', rt => 'internal', at => 'anyarray internal', s => 'ginarrayextract_2args' },

# overlap/contains/contained
{ oid => '2747',
  n => 'arrayoverlap', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '2748',
  n => 'arraycontains', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },
{ oid => '2749',
  n => 'arraycontained', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyarray anyarray' },

# BRIN minmax
{ oid => '3383', descr => 'BRIN minmax support',
  n => 'brin_minmax_opcinfo', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3384', descr => 'BRIN minmax support',
  n => 'brin_minmax_add_value', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal internal internal' },
{ oid => '3385', descr => 'BRIN minmax support',
  n => 'brin_minmax_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal internal' },
{ oid => '3386', descr => 'BRIN minmax support',
  n => 'brin_minmax_union', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal internal' },

# BRIN inclusion
{ oid => '4105', descr => 'BRIN inclusion support',
  n => 'brin_inclusion_opcinfo', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '4106', descr => 'BRIN inclusion support',
  n => 'brin_inclusion_add_value', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal internal internal' },
{ oid => '4107', descr => 'BRIN inclusion support',
  n => 'brin_inclusion_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal internal' },
{ oid => '4108', descr => 'BRIN inclusion support',
  n => 'brin_inclusion_union', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal internal' },

# userlock replacements
{ oid => '2880', descr => 'obtain exclusive advisory lock',
  n => 'pg_advisory_lock', is => 't', rt => 'void', at => 'int8', s => 'pg_advisory_lock_int8' },
{ oid => '3089', descr => 'obtain exclusive advisory lock',
  n => 'pg_advisory_xact_lock', is => 't', rt => 'void', at => 'int8', s => 'pg_advisory_xact_lock_int8' },
{ oid => '2881', descr => 'obtain shared advisory lock',
  n => 'pg_advisory_lock_shared', is => 't', rt => 'void', at => 'int8', s => 'pg_advisory_lock_shared_int8' },
{ oid => '3090', descr => 'obtain shared advisory lock',
  n => 'pg_advisory_xact_lock_shared', is => 't', rt => 'void', at => 'int8', s => 'pg_advisory_xact_lock_shared_int8' },
{ oid => '2882', descr => 'obtain exclusive advisory lock if available',
  n => 'pg_try_advisory_lock', is => 't', rt => 'bool', at => 'int8', s => 'pg_try_advisory_lock_int8' },
{ oid => '3091', descr => 'obtain exclusive advisory lock if available',
  n => 'pg_try_advisory_xact_lock', is => 't', rt => 'bool', at => 'int8', s => 'pg_try_advisory_xact_lock_int8' },
{ oid => '2883', descr => 'obtain shared advisory lock if available',
  n => 'pg_try_advisory_lock_shared', is => 't', rt => 'bool', at => 'int8', s => 'pg_try_advisory_lock_shared_int8' },
{ oid => '3092', descr => 'obtain shared advisory lock if available',
  n => 'pg_try_advisory_xact_lock_shared', is => 't', rt => 'bool', at => 'int8', s => 'pg_try_advisory_xact_lock_shared_int8' },
{ oid => '2884', descr => 'release exclusive advisory lock',
  n => 'pg_advisory_unlock', is => 't', rt => 'bool', at => 'int8', s => 'pg_advisory_unlock_int8' },
{ oid => '2885', descr => 'release shared advisory lock',
  n => 'pg_advisory_unlock_shared', is => 't', rt => 'bool', at => 'int8', s => 'pg_advisory_unlock_shared_int8' },
{ oid => '2886', descr => 'obtain exclusive advisory lock',
  n => 'pg_advisory_lock', is => 't', rt => 'void', at => 'int4 int4', s => 'pg_advisory_lock_int4' },
{ oid => '3093', descr => 'obtain exclusive advisory lock',
  n => 'pg_advisory_xact_lock', is => 't', rt => 'void', at => 'int4 int4', s => 'pg_advisory_xact_lock_int4' },
{ oid => '2887', descr => 'obtain shared advisory lock',
  n => 'pg_advisory_lock_shared', is => 't', rt => 'void', at => 'int4 int4', s => 'pg_advisory_lock_shared_int4' },
{ oid => '3094', descr => 'obtain shared advisory lock',
  n => 'pg_advisory_xact_lock_shared', is => 't', rt => 'void', at => 'int4 int4', s => 'pg_advisory_xact_lock_shared_int4' },
{ oid => '2888', descr => 'obtain exclusive advisory lock if available',
  n => 'pg_try_advisory_lock', is => 't', rt => 'bool', at => 'int4 int4', s => 'pg_try_advisory_lock_int4' },
{ oid => '3095', descr => 'obtain exclusive advisory lock if available',
  n => 'pg_try_advisory_xact_lock', is => 't', rt => 'bool', at => 'int4 int4', s => 'pg_try_advisory_xact_lock_int4' },
{ oid => '2889', descr => 'obtain shared advisory lock if available',
  n => 'pg_try_advisory_lock_shared', is => 't', rt => 'bool', at => 'int4 int4', s => 'pg_try_advisory_lock_shared_int4' },
{ oid => '3096', descr => 'obtain shared advisory lock if available',
  n => 'pg_try_advisory_xact_lock_shared', is => 't', rt => 'bool', at => 'int4 int4', s => 'pg_try_advisory_xact_lock_shared_int4' },
{ oid => '2890', descr => 'release exclusive advisory lock',
  n => 'pg_advisory_unlock', is => 't', rt => 'bool', at => 'int4 int4', s => 'pg_advisory_unlock_int4' },
{ oid => '2891', descr => 'release shared advisory lock',
  n => 'pg_advisory_unlock_shared', is => 't', rt => 'bool', at => 'int4 int4', s => 'pg_advisory_unlock_shared_int4' },
{ oid => '2892', descr => 'release all advisory locks',
  n => 'pg_advisory_unlock_all', is => 't', rt => 'void', at => '' },

# XML support
{ oid => '2893', descr => 'I/O',
  n => 'xml_in', is => 't', v => 's', p => 's', rt => 'xml', at => 'cstring' },
{ oid => '2894', descr => 'I/O',
  n => 'xml_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'xml' },
{ oid => '2895', descr => 'generate XML comment',
  n => 'xmlcomment', is => 't', v => 'i', p => 's', rt => 'xml', at => 'text' },
{ oid => '2896', descr => 'perform a non-validating parse of a character string to produce an XML value',
  n => 'xml', is => 't', v => 's', p => 's', rt => 'xml', at => 'text', s => 'texttoxml' },
{ oid => '2897', descr => 'validate an XML value',
  n => 'xmlvalidate', is => 't', v => 'i', p => 's', rt => 'bool', at => 'xml text' },
{ oid => '2898', descr => 'I/O',
  n => 'xml_recv', is => 't', v => 's', p => 's', rt => 'xml', at => 'internal' },
{ oid => '2899', descr => 'I/O',
  n => 'xml_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'xml' },
{ oid => '2900', descr => 'aggregate transition function',
  n => 'xmlconcat2', v => 'i', p => 's', rt => 'xml', at => 'xml xml' },
{ oid => '2901', descr => 'concatenate XML values',
  n => 'xmlagg', proisagg => 't', v => 'i', p => 's', rt => 'xml', at => 'xml', s => 'aggregate_dummy' },
{ oid => '2922', descr => 'serialize an XML value to a character string',
  n => 'text', is => 't', v => 'i', p => 's', rt => 'text', at => 'xml', s => 'xmltotext' },

{ oid => '2923', descr => 'map table contents to XML',
  n => 'table_to_xml', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'regclass bool bool text', proargnames => '{tbl,nulls,tableforest,targetns}' },
{ oid => '2924', descr => 'map query result to XML',
  n => 'query_to_xml', procost => '100', is => 't', v => 's', rt => 'xml', at => 'text bool bool text', proargnames => '{query,nulls,tableforest,targetns}' },
{ oid => '2925', descr => 'map rows from cursor to XML',
  n => 'cursor_to_xml', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'refcursor int4 bool bool text', proargnames => '{cursor,count,nulls,tableforest,targetns}' },
{ oid => '2926', descr => 'map table structure to XML Schema',
  n => 'table_to_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'regclass bool bool text', proargnames => '{tbl,nulls,tableforest,targetns}' },
{ oid => '2927', descr => 'map query result structure to XML Schema',
  n => 'query_to_xmlschema', procost => '100', is => 't', v => 's', rt => 'xml', at => 'text bool bool text', proargnames => '{query,nulls,tableforest,targetns}' },
{ oid => '2928', descr => 'map cursor structure to XML Schema',
  n => 'cursor_to_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'refcursor bool bool text', proargnames => '{cursor,nulls,tableforest,targetns}' },
{ oid => '2929', descr => 'map table contents and structure to XML and XML Schema',
  n => 'table_to_xml_and_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'regclass bool bool text', proargnames => '{tbl,nulls,tableforest,targetns}' },
{ oid => '2930', descr => 'map query result and structure to XML and XML Schema',
  n => 'query_to_xml_and_xmlschema', procost => '100', is => 't', v => 's', rt => 'xml', at => 'text bool bool text', proargnames => '{query,nulls,tableforest,targetns}' },

{ oid => '2933', descr => 'map schema contents to XML',
  n => 'schema_to_xml', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'name bool bool text', proargnames => '{schema,nulls,tableforest,targetns}' },
{ oid => '2934', descr => 'map schema structure to XML Schema',
  n => 'schema_to_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'name bool bool text', proargnames => '{schema,nulls,tableforest,targetns}' },
{ oid => '2935', descr => 'map schema contents and structure to XML and XML Schema',
  n => 'schema_to_xml_and_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'name bool bool text', proargnames => '{schema,nulls,tableforest,targetns}' },

{ oid => '2936', descr => 'map database contents to XML',
  n => 'database_to_xml', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'bool bool text', proargnames => '{nulls,tableforest,targetns}' },
{ oid => '2937', descr => 'map database structure to XML Schema',
  n => 'database_to_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'bool bool text', proargnames => '{nulls,tableforest,targetns}' },
{ oid => '2938', descr => 'map database contents and structure to XML and XML Schema',
  n => 'database_to_xml_and_xmlschema', procost => '100', is => 't', v => 's', p => 'r', rt => 'xml', at => 'bool bool text', proargnames => '{nulls,tableforest,targetns}' },

{ oid => '2931', descr => 'evaluate XPath expression, with namespaces support',
  n => 'xpath', is => 't', v => 'i', p => 's', rt => '_xml', at => 'text xml _text' },
{ oid => '2932', descr => 'evaluate XPath expression',
  n => 'xpath', prolang => '14', is => 't', v => 'i', p => 's', rt => '_xml', at => 'text xml', s => 'select pg_catalog.xpath($1, $2, \'\'{}\'\'::pg_catalog.text[])' },

{ oid => '2614', descr => 'test XML value against XPath expression',
  n => 'xmlexists', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text xml' },

{ oid => '3049', descr => 'test XML value against XPath expression, with namespace support',
  n => 'xpath_exists', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text xml _text' },
{ oid => '3050', descr => 'test XML value against XPath expression',
  n => 'xpath_exists', prolang => '14', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text xml', s => 'select pg_catalog.xpath_exists($1, $2, \'\'{}\'\'::pg_catalog.text[])' },
{ oid => '3051', descr => 'determine if a string is well formed XML',
  n => 'xml_is_well_formed', is => 't', v => 's', p => 's', rt => 'bool', at => 'text' },
{ oid => '3052', descr => 'determine if a string is well formed XML document',
  n => 'xml_is_well_formed_document', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text' },
{ oid => '3053', descr => 'determine if a string is well formed XML content',
  n => 'xml_is_well_formed_content', is => 't', v => 'i', p => 's', rt => 'bool', at => 'text' },

# json
{ oid => '321', descr => 'I/O',
  n => 'json_in', is => 't', v => 'i', p => 's', rt => 'json', at => 'cstring' },
{ oid => '322', descr => 'I/O',
  n => 'json_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'json' },
{ oid => '323', descr => 'I/O',
  n => 'json_recv', is => 't', v => 'i', p => 's', rt => 'json', at => 'internal' },
{ oid => '324', descr => 'I/O',
  n => 'json_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'json' },
{ oid => '3153', descr => 'map array to json',
  n => 'array_to_json', is => 't', v => 's', p => 's', rt => 'json', at => 'anyarray' },
{ oid => '3154', descr => 'map array to json with optional pretty printing',
  n => 'array_to_json', is => 't', v => 's', p => 's', rt => 'json', at => 'anyarray bool', s => 'array_to_json_pretty' },
{ oid => '3155', descr => 'map row to json',
  n => 'row_to_json', is => 't', v => 's', p => 's', rt => 'json', at => 'record' },
{ oid => '3156', descr => 'map row to json with optional pretty printing',
  n => 'row_to_json', is => 't', v => 's', p => 's', rt => 'json', at => 'record bool', s => 'row_to_json_pretty' },
{ oid => '3173', descr => 'json aggregate transition function',
  n => 'json_agg_transfn', v => 's', p => 's', rt => 'internal', at => 'internal anyelement' },
{ oid => '3174', descr => 'json aggregate final function',
  n => 'json_agg_finalfn', v => 'i', p => 's', rt => 'json', at => 'internal' },
{ oid => '3175', descr => 'aggregate input into json',
  n => 'json_agg', proisagg => 't', v => 's', p => 's', rt => 'json', at => 'anyelement', s => 'aggregate_dummy' },
{ oid => '3180', descr => 'json object aggregate transition function',
  n => 'json_object_agg_transfn', v => 's', p => 's', rt => 'internal', at => 'internal any any' },
{ oid => '3196', descr => 'json object aggregate final function',
  n => 'json_object_agg_finalfn', v => 'i', p => 's', rt => 'json', at => 'internal' },
{ oid => '3197', descr => 'aggregate input into a json object',
  n => 'json_object_agg', proisagg => 't', v => 's', p => 's', rt => 'json', at => 'any any', s => 'aggregate_dummy' },
{ oid => '3198', descr => 'build a json array from any inputs',
  n => 'json_build_array', provariadic => '2276', v => 's', p => 's', rt => 'json', at => 'any', proallargtypes => '{any}', proargmodes => '{v}' },
{ oid => '3199', descr => 'build an empty json array',
  n => 'json_build_array', v => 's', p => 's', rt => 'json', at => '', s => 'json_build_array_noargs' },
{ oid => '3200', descr => 'build a json object from pairwise key/value inputs',
  n => 'json_build_object', provariadic => '2276', v => 's', p => 's', rt => 'json', at => 'any', proallargtypes => '{any}', proargmodes => '{v}' },
{ oid => '3201', descr => 'build an empty json object',
  n => 'json_build_object', v => 's', p => 's', rt => 'json', at => '', s => 'json_build_object_noargs' },
{ oid => '3202', descr => 'map text array of key value pairs to json object',
  n => 'json_object', is => 't', v => 'i', p => 's', rt => 'json', at => '_text' },
{ oid => '3203', descr => 'map text arrays of keys and values to json object',
  n => 'json_object', is => 't', v => 'i', p => 's', rt => 'json', at => '_text _text', s => 'json_object_two_arg' },
{ oid => '3176', descr => 'map input to json',
  n => 'to_json', is => 't', v => 's', p => 's', rt => 'json', at => 'anyelement' },
{ oid => '3261', descr => 'remove object fields with null values from json',
  n => 'json_strip_nulls', is => 't', v => 'i', p => 's', rt => 'json', at => 'json' },

{ oid => '3947',
  n => 'json_object_field', is => 't', v => 'i', p => 's', rt => 'json', at => 'json text', proargnames => '{from_json, field_name}' },
{ oid => '3948',
  n => 'json_object_field_text', is => 't', v => 'i', p => 's', rt => 'text', at => 'json text', proargnames => '{from_json, field_name}' },
{ oid => '3949',
  n => 'json_array_element', is => 't', v => 'i', p => 's', rt => 'json', at => 'json int4', proargnames => '{from_json, element_index}' },
{ oid => '3950',
  n => 'json_array_element_text', is => 't', v => 'i', p => 's', rt => 'text', at => 'json int4', proargnames => '{from_json, element_index}' },
{ oid => '3951', descr => 'get value from json with path elements',
  n => 'json_extract_path', provariadic => '25', is => 't', v => 'i', p => 's', rt => 'json', at => 'json _text', proallargtypes => '{json,_text}', proargmodes => '{i,v}', proargnames => '{from_json,path_elems}' },
{ oid => '3953', descr => 'get value from json as text with path elements',
  n => 'json_extract_path_text', provariadic => '25', is => 't', v => 'i', p => 's', rt => 'text', at => 'json _text', proallargtypes => '{json,_text}', proargmodes => '{i,v}', proargnames => '{from_json,path_elems}' },
{ oid => '3955', descr => 'key value pairs of a json object',
  n => 'json_array_elements', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'json', at => 'json', proallargtypes => '{json,json}', proargmodes => '{i,o}', proargnames => '{from_json,value}' },
{ oid => '3969', descr => 'elements of json array',
  n => 'json_array_elements_text', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'text', at => 'json', proallargtypes => '{json,text}', proargmodes => '{i,o}', proargnames => '{from_json,value}' },
{ oid => '3956', descr => 'length of json array',
  n => 'json_array_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'json' },
{ oid => '3957', descr => 'get json object keys',
  n => 'json_object_keys', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'text', at => 'json' },
{ oid => '3958', descr => 'key value pairs of a json object',
  n => 'json_each', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'json', proallargtypes => '{json,text,json}', proargmodes => '{i,o,o}', proargnames => '{from_json,key,value}' },
{ oid => '3959', descr => 'key value pairs of a json object',
  n => 'json_each_text', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'json', proallargtypes => '{json,text,text}', proargmodes => '{i,o,o}', proargnames => '{from_json,key,value}' },
{ oid => '3960', descr => 'get record fields from a json object',
  n => 'json_populate_record', v => 's', p => 's', rt => 'anyelement', at => 'anyelement json bool' },
{ oid => '3961', descr => 'get set of records with fields from a json array of objects',
  n => 'json_populate_recordset', prorows => '100', proretset => 't', v => 's', p => 's', rt => 'anyelement', at => 'anyelement json bool' },
{ oid => '3204', descr => 'get record fields from a json object',
  n => 'json_to_record', is => 't', v => 's', p => 's', rt => 'record', at => 'json' },
{ oid => '3205', descr => 'get set of records with fields from a json array of objects',
  n => 'json_to_recordset', prorows => '100', proretset => 't', v => 's', p => 's', rt => 'record', at => 'json' },
{ oid => '3968', descr => 'get the type of a json value',
  n => 'json_typeof', is => 't', v => 'i', p => 's', rt => 'text', at => 'json' },

# uuid
{ oid => '2952', descr => 'I/O',
  n => 'uuid_in', is => 't', v => 'i', p => 's', rt => 'uuid', at => 'cstring' },
{ oid => '2953', descr => 'I/O',
  n => 'uuid_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'uuid' },
{ oid => '2954',
  n => 'uuid_lt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'uuid uuid' },
{ oid => '2955',
  n => 'uuid_le', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'uuid uuid' },
{ oid => '2956',
  n => 'uuid_eq', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'uuid uuid' },
{ oid => '2957',
  n => 'uuid_ge', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'uuid uuid' },
{ oid => '2958',
  n => 'uuid_gt', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'uuid uuid' },
{ oid => '2959',
  n => 'uuid_ne', lp => 't', is => 't', v => 'i', p => 's', rt => 'bool', at => 'uuid uuid' },
{ oid => '2960', descr => 'less-equal-greater',
  n => 'uuid_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'uuid uuid' },
{ oid => '3300', descr => 'sort support',
  n => 'uuid_sortsupport', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '2961', descr => 'I/O',
  n => 'uuid_recv', is => 't', v => 'i', p => 's', rt => 'uuid', at => 'internal' },
{ oid => '2962', descr => 'I/O',
  n => 'uuid_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'uuid' },
{ oid => '2963', descr => 'hash',
  n => 'uuid_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'uuid' },
{ oid => '3412', descr => 'hash',
  n => 'uuid_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'uuid int8' },

# pg_lsn
{ oid => '3229', descr => 'I/O',
  n => 'pg_lsn_in', is => 't', v => 'i', p => 's', rt => 'pg_lsn', at => 'cstring' },
{ oid => '3230', descr => 'I/O',
  n => 'pg_lsn_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'pg_lsn' },
{ oid => '3231',
  n => 'pg_lsn_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'pg_lsn pg_lsn' },
{ oid => '3232',
  n => 'pg_lsn_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'pg_lsn pg_lsn' },
{ oid => '3233',
  n => 'pg_lsn_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'pg_lsn pg_lsn' },
{ oid => '3234',
  n => 'pg_lsn_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'pg_lsn pg_lsn' },
{ oid => '3235',
  n => 'pg_lsn_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'pg_lsn pg_lsn' },
{ oid => '3236',
  n => 'pg_lsn_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'pg_lsn pg_lsn' },
{ oid => '3237',
  n => 'pg_lsn_mi', is => 't', v => 'i', p => 's', rt => 'numeric', at => 'pg_lsn pg_lsn' },
{ oid => '3238', descr => 'I/O',
  n => 'pg_lsn_recv', is => 't', v => 'i', p => 's', rt => 'pg_lsn', at => 'internal' },
{ oid => '3239', descr => 'I/O',
  n => 'pg_lsn_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'pg_lsn' },
{ oid => '3251', descr => 'less-equal-greater',
  n => 'pg_lsn_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'pg_lsn pg_lsn' },
{ oid => '3252', descr => 'hash',
  n => 'pg_lsn_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'pg_lsn' },
{ oid => '3413', descr => 'hash',
  n => 'pg_lsn_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'pg_lsn int8' },

# enum related procs
{ oid => '3504', descr => 'I/O',
  n => 'anyenum_in', is => 't', v => 'i', p => 's', rt => 'anyenum', at => 'cstring' },
{ oid => '3505', descr => 'I/O',
  n => 'anyenum_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'anyenum' },
{ oid => '3506', descr => 'I/O',
  n => 'enum_in', is => 't', v => 's', p => 's', rt => 'anyenum', at => 'cstring oid' },
{ oid => '3507', descr => 'I/O',
  n => 'enum_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'anyenum' },
{ oid => '3508',
  n => 'enum_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyenum anyenum' },
{ oid => '3509',
  n => 'enum_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyenum anyenum' },
{ oid => '3510',
  n => 'enum_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyenum anyenum' },
{ oid => '3511',
  n => 'enum_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyenum anyenum' },
{ oid => '3512',
  n => 'enum_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyenum anyenum' },
{ oid => '3513',
  n => 'enum_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyenum anyenum' },
{ oid => '3514', descr => 'less-equal-greater',
  n => 'enum_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyenum anyenum' },
{ oid => '3515', descr => 'hash',
  n => 'hashenum', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyenum' },
{ oid => '3414', descr => 'hash',
  n => 'hashenumextended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'anyenum int8' },
{ oid => '3524', descr => 'smaller of two',
  n => 'enum_smaller', is => 't', v => 'i', p => 's', rt => 'anyenum', at => 'anyenum anyenum' },
{ oid => '3525', descr => 'larger of two',
  n => 'enum_larger', is => 't', v => 'i', p => 's', rt => 'anyenum', at => 'anyenum anyenum' },
{ oid => '3526', descr => 'maximum value of all enum input values',
  n => 'max', proisagg => 't', v => 'i', p => 's', rt => 'anyenum', at => 'anyenum', s => 'aggregate_dummy' },
{ oid => '3527', descr => 'minimum value of all enum input values',
  n => 'min', proisagg => 't', v => 'i', p => 's', rt => 'anyenum', at => 'anyenum', s => 'aggregate_dummy' },
{ oid => '3528', descr => 'first value of the input enum type',
  n => 'enum_first', v => 's', p => 's', rt => 'anyenum', at => 'anyenum' },
{ oid => '3529', descr => 'last value of the input enum type',
  n => 'enum_last', v => 's', p => 's', rt => 'anyenum', at => 'anyenum' },
{ oid => '3530', descr => 'range between the two given enum values, as an ordered array',
  n => 'enum_range', v => 's', p => 's', rt => 'anyarray', at => 'anyenum anyenum', s => 'enum_range_bounds' },
{ oid => '3531', descr => 'range of the given enum type, as an ordered array',
  n => 'enum_range', v => 's', p => 's', rt => 'anyarray', at => 'anyenum', s => 'enum_range_all' },
{ oid => '3532', descr => 'I/O',
  n => 'enum_recv', is => 't', v => 's', p => 's', rt => 'anyenum', at => 'internal oid' },
{ oid => '3533', descr => 'I/O',
  n => 'enum_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'anyenum' },

# text search stuff
{ oid => '3610', descr => 'I/O',
  n => 'tsvectorin', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'cstring' },
{ oid => '3639', descr => 'I/O',
  n => 'tsvectorrecv', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'internal' },
{ oid => '3611', descr => 'I/O',
  n => 'tsvectorout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'tsvector' },
{ oid => '3638', descr => 'I/O',
  n => 'tsvectorsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'tsvector' },
{ oid => '3612', descr => 'I/O',
  n => 'tsqueryin', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'cstring' },
{ oid => '3641', descr => 'I/O',
  n => 'tsqueryrecv', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'internal' },
{ oid => '3613', descr => 'I/O',
  n => 'tsqueryout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'tsquery' },
{ oid => '3640', descr => 'I/O',
  n => 'tsquerysend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'tsquery' },
{ oid => '3646', descr => 'I/O',
  n => 'gtsvectorin', is => 't', v => 'i', p => 's', rt => 'gtsvector', at => 'cstring' },
{ oid => '3647', descr => 'I/O',
  n => 'gtsvectorout', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'gtsvector' },

{ oid => '3616',
  n => 'tsvector_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsvector' },
{ oid => '3617',
  n => 'tsvector_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsvector' },
{ oid => '3618',
  n => 'tsvector_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsvector' },
{ oid => '3619',
  n => 'tsvector_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsvector' },
{ oid => '3620',
  n => 'tsvector_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsvector' },
{ oid => '3621',
  n => 'tsvector_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsvector' },
{ oid => '3622', descr => 'less-equal-greater',
  n => 'tsvector_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'tsvector tsvector' },

{ oid => '3711', descr => 'number of lexemes',
  n => 'length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'tsvector', s => 'tsvector_length' },
{ oid => '3623', descr => 'strip position information',
  n => 'strip', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector', s => 'tsvector_strip' },
{ oid => '3624', descr => 'set given weight for whole tsvector',
  n => 'setweight', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector char', s => 'tsvector_setweight' },
{ oid => '3320', descr => 'set given weight for given lexemes',
  n => 'setweight', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector char _text', s => 'tsvector_setweight_by_filter' },
{ oid => '3625',
  n => 'tsvector_concat', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector tsvector' },
{ oid => '3321', descr => 'delete lexeme',
  n => 'ts_delete', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector text', s => 'tsvector_delete_str' },
{ oid => '3323', descr => 'delete given lexemes',
  n => 'ts_delete', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector _text', s => 'tsvector_delete_arr' },
{ oid => '3322', descr => 'expand tsvector to set of rows',
  n => 'unnest', prorows => '10', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'tsvector', proallargtypes => '{tsvector,text,_int2,_text}', proargmodes => '{i,o,o,o}', proargnames => '{tsvector,lexeme,positions,weights}', s => 'tsvector_unnest' },
{ oid => '3326', descr => 'convert tsvector to array of lexemes',
  n => 'tsvector_to_array', is => 't', v => 'i', p => 's', rt => '_text', at => 'tsvector' },
{ oid => '3327', descr => 'build tsvector from array of lexemes',
  n => 'array_to_tsvector', is => 't', v => 'i', p => 's', rt => 'tsvector', at => '_text' },
{ oid => '3319', descr => 'delete lexemes that do not have one of the given weights',
  n => 'ts_filter', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'tsvector _char', s => 'tsvector_filter' },

{ oid => '3634',
  n => 'ts_match_vq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsvector tsquery' },
{ oid => '3635',
  n => 'ts_match_qv', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsvector' },
{ oid => '3760',
  n => 'ts_match_tt', procost => '100', is => 't', v => 's', p => 's', rt => 'bool', at => 'text text' },
{ oid => '3761',
  n => 'ts_match_tq', procost => '100', is => 't', v => 's', p => 's', rt => 'bool', at => 'text tsquery' },

{ oid => '3648', descr => 'GiST tsvector support',
  n => 'gtsvector_compress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3649', descr => 'GiST tsvector support',
  n => 'gtsvector_decompress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3650', descr => 'GiST tsvector support',
  n => 'gtsvector_picksplit', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '3651', descr => 'GiST tsvector support',
  n => 'gtsvector_union', is => 't', v => 'i', p => 's', rt => 'gtsvector', at => 'internal internal' },
{ oid => '3652', descr => 'GiST tsvector support',
  n => 'gtsvector_same', is => 't', v => 'i', p => 's', rt => 'internal', at => 'gtsvector gtsvector internal' },
{ oid => '3653', descr => 'GiST tsvector support',
  n => 'gtsvector_penalty', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal' },
{ oid => '3654', descr => 'GiST tsvector support',
  n => 'gtsvector_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal tsvector int2 oid internal' },
{ oid => '3790', descr => 'GiST tsvector support (obsolete)',
  n => 'gtsvector_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal gtsvector int4 oid internal', s => 'gtsvector_consistent_oldsig' },

{ oid => '3656', descr => 'GIN tsvector support',
  n => 'gin_extract_tsvector', is => 't', v => 'i', p => 's', rt => 'internal', at => 'tsvector internal internal' },
{ oid => '3657', descr => 'GIN tsvector support',
  n => 'gin_extract_tsquery', is => 't', v => 'i', p => 's', rt => 'internal', at => 'tsvector internal int2 internal internal internal internal' },
{ oid => '3658', descr => 'GIN tsvector support',
  n => 'gin_tsquery_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal int2 tsvector int4 internal internal internal internal' },
{ oid => '3921', descr => 'GIN tsvector support',
  n => 'gin_tsquery_triconsistent', is => 't', v => 'i', p => 's', rt => 'char', at => 'internal int2 tsvector int4 internal internal internal' },
{ oid => '3724', descr => 'GIN tsvector support',
  n => 'gin_cmp_tslexeme', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text' },
{ oid => '2700', descr => 'GIN tsvector support',
  n => 'gin_cmp_prefix', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text int2 internal' },
{ oid => '3077', descr => 'GIN tsvector support (obsolete)',
  n => 'gin_extract_tsvector', is => 't', v => 'i', p => 's', rt => 'internal', at => 'tsvector internal', s => 'gin_extract_tsvector_2args' },
{ oid => '3087', descr => 'GIN tsvector support (obsolete)',
  n => 'gin_extract_tsquery', is => 't', v => 'i', p => 's', rt => 'internal', at => 'tsquery internal int2 internal internal', s => 'gin_extract_tsquery_5args' },
{ oid => '3088', descr => 'GIN tsvector support (obsolete)',
  n => 'gin_tsquery_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal int2 tsquery int4 internal internal', s => 'gin_tsquery_consistent_6args' },
{ oid => '3791', descr => 'GIN tsvector support (obsolete)',
  n => 'gin_extract_tsquery', is => 't', v => 'i', p => 's', rt => 'internal', at => 'tsquery internal int2 internal internal internal internal', s => 'gin_extract_tsquery_oldsig' },
{ oid => '3792', descr => 'GIN tsvector support (obsolete)',
  n => 'gin_tsquery_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal int2 tsquery int4 internal internal internal internal', s => 'gin_tsquery_consistent_oldsig' },

{ oid => '3789', descr => 'clean up GIN pending list',
  n => 'gin_clean_pending_list', is => 't', p => 's', rt => 'int8', at => 'regclass' },

{ oid => '3662',
  n => 'tsquery_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3663',
  n => 'tsquery_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3664',
  n => 'tsquery_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3665',
  n => 'tsquery_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3666',
  n => 'tsquery_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3667',
  n => 'tsquery_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3668', descr => 'less-equal-greater',
  n => 'tsquery_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'tsquery tsquery' },

{ oid => '3669',
  n => 'tsquery_and', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'tsquery tsquery' },
{ oid => '3670',
  n => 'tsquery_or', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'tsquery tsquery' },
{ oid => '5003',
  n => 'tsquery_phrase', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'tsquery tsquery' },
{ oid => '5004', descr => 'phrase-concatenate with distance',
  n => 'tsquery_phrase', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'tsquery tsquery int4', s => 'tsquery_phrase_distance' },
{ oid => '3671',
  n => 'tsquery_not', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'tsquery' },

{ oid => '3691',
  n => 'tsq_mcontains', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },
{ oid => '3692',
  n => 'tsq_mcontained', is => 't', v => 'i', p => 's', rt => 'bool', at => 'tsquery tsquery' },

{ oid => '3672', descr => 'number of nodes',
  n => 'numnode', is => 't', v => 'i', p => 's', rt => 'int4', at => 'tsquery', s => 'tsquery_numnode' },
{ oid => '3673', descr => 'show real useful query for GiST index',
  n => 'querytree', is => 't', v => 'i', p => 's', rt => 'text', at => 'tsquery', s => 'tsquerytree' },

{ oid => '3684', descr => 'rewrite tsquery',
  n => 'ts_rewrite', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'tsquery tsquery tsquery', s => 'tsquery_rewrite' },
{ oid => '3685', descr => 'rewrite tsquery',
  n => 'ts_rewrite', procost => '100', is => 't', p => 's', rt => 'tsquery', at => 'tsquery text', s => 'tsquery_rewrite_query' },

{ oid => '3695', descr => 'GiST tsquery support',
  n => 'gtsquery_compress', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3697', descr => 'GiST tsquery support',
  n => 'gtsquery_picksplit', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '3698', descr => 'GiST tsquery support',
  n => 'gtsquery_union', is => 't', v => 'i', p => 's', rt => 'int8', at => 'internal internal' },
{ oid => '3699', descr => 'GiST tsquery support',
  n => 'gtsquery_same', is => 't', v => 'i', p => 's', rt => 'internal', at => 'int8 int8 internal' },
{ oid => '3700', descr => 'GiST tsquery support',
  n => 'gtsquery_penalty', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal' },
{ oid => '3701', descr => 'GiST tsquery support',
  n => 'gtsquery_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal tsquery int2 oid internal' },
{ oid => '3793', descr => 'GiST tsquery support (obsolete)',
  n => 'gtsquery_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal int4 oid internal', s => 'gtsquery_consistent_oldsig' },

{ oid => '3686', descr => 'restriction selectivity of tsvector @@ tsquery',
  n => 'tsmatchsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },
{ oid => '3687', descr => 'join selectivity of tsvector @@ tsquery',
  n => 'tsmatchjoinsel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int2 internal' },
{ oid => '3688', descr => 'tsvector typanalyze',
  n => 'ts_typanalyze', is => 't', v => 's', p => 's', rt => 'bool', at => 'internal' },

{ oid => '3689', descr => 'statistics of tsvector column',
  n => 'ts_stat', procost => '10', prorows => '10000', is => 't', proretset => 't', p => 's', rt => 'record', at => 'text', proallargtypes => '{text,text,int4,int4}', proargmodes => '{i,o,o,o}', proargnames => '{query,word,ndoc,nentry}', s => 'ts_stat1' },
{ oid => '3690', descr => 'statistics of tsvector column',
  n => 'ts_stat', procost => '10', prorows => '10000', is => 't', proretset => 't', p => 's', rt => 'record', at => 'text text', proallargtypes => '{text,text,text,int4,int4}', proargmodes => '{i,i,o,o,o}', proargnames => '{query,weights,word,ndoc,nentry}', s => 'ts_stat2' },

{ oid => '3703', descr => 'relevance',
  n => 'ts_rank', is => 't', v => 'i', p => 's', rt => 'float4', at => '_float4 tsvector tsquery int4', s => 'ts_rank_wttf' },
{ oid => '3704', descr => 'relevance',
  n => 'ts_rank', is => 't', v => 'i', p => 's', rt => 'float4', at => '_float4 tsvector tsquery', s => 'ts_rank_wtt' },
{ oid => '3705', descr => 'relevance',
  n => 'ts_rank', is => 't', v => 'i', p => 's', rt => 'float4', at => 'tsvector tsquery int4', s => 'ts_rank_ttf' },
{ oid => '3706', descr => 'relevance',
  n => 'ts_rank', is => 't', v => 'i', p => 's', rt => 'float4', at => 'tsvector tsquery', s => 'ts_rank_tt' },
{ oid => '3707', descr => 'relevance',
  n => 'ts_rank_cd', is => 't', v => 'i', p => 's', rt => 'float4', at => '_float4 tsvector tsquery int4', s => 'ts_rankcd_wttf' },
{ oid => '3708', descr => 'relevance',
  n => 'ts_rank_cd', is => 't', v => 'i', p => 's', rt => 'float4', at => '_float4 tsvector tsquery', s => 'ts_rankcd_wtt' },
{ oid => '3709', descr => 'relevance',
  n => 'ts_rank_cd', is => 't', v => 'i', p => 's', rt => 'float4', at => 'tsvector tsquery int4', s => 'ts_rankcd_ttf' },
{ oid => '3710', descr => 'relevance',
  n => 'ts_rank_cd', is => 't', v => 'i', p => 's', rt => 'float4', at => 'tsvector tsquery', s => 'ts_rankcd_tt' },

{ oid => '3713', descr => 'get parser\'s token types',
  n => 'ts_token_type', prorows => '16', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'oid', proallargtypes => '{oid,int4,text,text}', proargmodes => '{i,o,o,o}', proargnames => '{parser_oid,tokid,alias,description}', s => 'ts_token_type_byid' },
{ oid => '3714', descr => 'get parser\'s token types',
  n => 'ts_token_type', prorows => '16', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => 'text', proallargtypes => '{text,int4,text,text}', proargmodes => '{i,o,o,o}', proargnames => '{parser_name,tokid,alias,description}', s => 'ts_token_type_byname' },
{ oid => '3715', descr => 'parse text to tokens',
  n => 'ts_parse', prorows => '1000', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'oid text', proallargtypes => '{oid,text,int4,text}', proargmodes => '{i,i,o,o}', proargnames => '{parser_oid,txt,tokid,token}', s => 'ts_parse_byid' },
{ oid => '3716', descr => 'parse text to tokens',
  n => 'ts_parse', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => 'text text', proallargtypes => '{text,text,int4,text}', proargmodes => '{i,i,o,o}', proargnames => '{parser_name,txt,tokid,token}', s => 'ts_parse_byname' },

{ oid => '3717', descr => '(internal)',
  n => 'prsd_start', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal int4' },
{ oid => '3718', descr => '(internal)',
  n => 'prsd_nexttoken', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal' },
{ oid => '3719', descr => '(internal)',
  n => 'prsd_end', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal' },
{ oid => '3720', descr => '(internal)',
  n => 'prsd_headline', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal tsquery' },
{ oid => '3721', descr => '(internal)',
  n => 'prsd_lextype', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },

{ oid => '3723', descr => 'normalize one word by dictionary',
  n => 'ts_lexize', is => 't', v => 'i', p => 's', rt => '_text', at => 'regdictionary text' },

{ oid => '3725', descr => '(internal)',
  n => 'dsimple_init', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3726', descr => '(internal)',
  n => 'dsimple_lexize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal internal' },

{ oid => '3728', descr => '(internal)',
  n => 'dsynonym_init', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3729', descr => '(internal)',
  n => 'dsynonym_lexize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal internal' },

{ oid => '3731', descr => '(internal)',
  n => 'dispell_init', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3732', descr => '(internal)',
  n => 'dispell_lexize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal internal' },

{ oid => '3740', descr => '(internal)',
  n => 'thesaurus_init', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal' },
{ oid => '3741', descr => '(internal)',
  n => 'thesaurus_lexize', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal internal' },

{ oid => '3743', descr => 'generate headline',
  n => 'ts_headline', procost => '100', is => 't', v => 'i', p => 's', rt => 'text', at => 'regconfig text tsquery text', s => 'ts_headline_byid_opt' },
{ oid => '3744', descr => 'generate headline',
  n => 'ts_headline', procost => '100', is => 't', v => 'i', p => 's', rt => 'text', at => 'regconfig text tsquery', s => 'ts_headline_byid' },
{ oid => '3754', descr => 'generate headline',
  n => 'ts_headline', procost => '100', is => 't', v => 's', p => 's', rt => 'text', at => 'text tsquery text', s => 'ts_headline_opt' },
{ oid => '3755', descr => 'generate headline',
  n => 'ts_headline', procost => '100', is => 't', v => 's', p => 's', rt => 'text', at => 'text tsquery' },

{ oid => '4201', descr => 'generate headline from jsonb',
  n => 'ts_headline', procost => '100', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'regconfig jsonb tsquery text', s => 'ts_headline_jsonb_byid_opt' },
{ oid => '4202', descr => 'generate headline from jsonb',
  n => 'ts_headline', procost => '100', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'regconfig jsonb tsquery', s => 'ts_headline_jsonb_byid' },
{ oid => '4203', descr => 'generate headline from jsonb',
  n => 'ts_headline', procost => '100', is => 't', v => 's', p => 's', rt => 'jsonb', at => 'jsonb tsquery text', s => 'ts_headline_jsonb_opt' },
{ oid => '4204', descr => 'generate headline from jsonb',
  n => 'ts_headline', procost => '100', is => 't', v => 's', p => 's', rt => 'jsonb', at => 'jsonb tsquery', s => 'ts_headline_jsonb' },

{ oid => '4205', descr => 'generate headline from json',
  n => 'ts_headline', procost => '100', is => 't', v => 'i', p => 's', rt => 'json', at => 'regconfig json tsquery text', s => 'ts_headline_json_byid_opt' },
{ oid => '4206', descr => 'generate headline from json',
  n => 'ts_headline', procost => '100', is => 't', v => 'i', p => 's', rt => 'json', at => 'regconfig json tsquery', s => 'ts_headline_json_byid' },
{ oid => '4207', descr => 'generate headline from json',
  n => 'ts_headline', procost => '100', is => 't', v => 's', p => 's', rt => 'json', at => 'json tsquery text', s => 'ts_headline_json_opt' },
{ oid => '4208', descr => 'generate headline from json',
  n => 'ts_headline', procost => '100', is => 't', v => 's', p => 's', rt => 'json', at => 'json tsquery', s => 'ts_headline_json' },

{ oid => '3745', descr => 'transform to tsvector',
  n => 'to_tsvector', procost => '100', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'regconfig text', s => 'to_tsvector_byid' },
{ oid => '3746', descr => 'make tsquery',
  n => 'to_tsquery', procost => '100', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'regconfig text', s => 'to_tsquery_byid' },
{ oid => '3747', descr => 'transform to tsquery',
  n => 'plainto_tsquery', procost => '100', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'regconfig text', s => 'plainto_tsquery_byid' },
{ oid => '5006', descr => 'transform to tsquery',
  n => 'phraseto_tsquery', procost => '100', is => 't', v => 'i', p => 's', rt => 'tsquery', at => 'regconfig text', s => 'phraseto_tsquery_byid' },
{ oid => '3749', descr => 'transform to tsvector',
  n => 'to_tsvector', procost => '100', is => 't', v => 's', p => 's', rt => 'tsvector', at => 'text' },
{ oid => '3750', descr => 'make tsquery',
  n => 'to_tsquery', procost => '100', is => 't', v => 's', p => 's', rt => 'tsquery', at => 'text' },
{ oid => '3751', descr => 'transform to tsquery',
  n => 'plainto_tsquery', procost => '100', is => 't', v => 's', p => 's', rt => 'tsquery', at => 'text' },
{ oid => '5001', descr => 'transform to tsquery',
  n => 'phraseto_tsquery', procost => '100', is => 't', v => 's', p => 's', rt => 'tsquery', at => 'text' },
{ oid => '4209', descr => 'transform jsonb to tsvector',
  n => 'to_tsvector', procost => '100', is => 't', v => 's', p => 's', rt => 'tsvector', at => 'jsonb', s => 'jsonb_to_tsvector' },
{ oid => '4210', descr => 'transform json to tsvector',
  n => 'to_tsvector', procost => '100', is => 't', v => 's', p => 's', rt => 'tsvector', at => 'json', s => 'json_to_tsvector' },
{ oid => '4211', descr => 'transform jsonb to tsvector',
  n => 'to_tsvector', procost => '100', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'regconfig jsonb', s => 'jsonb_to_tsvector_byid' },
{ oid => '4212', descr => 'transform json to tsvector',
  n => 'to_tsvector', procost => '100', is => 't', v => 'i', p => 's', rt => 'tsvector', at => 'regconfig json', s => 'json_to_tsvector_byid' },

{ oid => '3752', descr => 'trigger for automatic update of tsvector column',
  n => 'tsvector_update_trigger', p => 's', rt => 'trigger', at => '', s => 'tsvector_update_trigger_byid' },
{ oid => '3753', descr => 'trigger for automatic update of tsvector column',
  n => 'tsvector_update_trigger_column', p => 's', rt => 'trigger', at => '', s => 'tsvector_update_trigger_bycolumn' },

{ oid => '3759', descr => 'get current tsearch configuration',
  n => 'get_current_ts_config', is => 't', v => 's', p => 's', rt => 'regconfig', at => '' },

{ oid => '3736', descr => 'I/O',
  n => 'regconfigin', is => 't', v => 's', p => 's', rt => 'regconfig', at => 'cstring' },
{ oid => '3737', descr => 'I/O',
  n => 'regconfigout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regconfig' },
{ oid => '3738', descr => 'I/O',
  n => 'regconfigrecv', is => 't', v => 'i', p => 's', rt => 'regconfig', at => 'internal' },
{ oid => '3739', descr => 'I/O',
  n => 'regconfigsend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regconfig' },

{ oid => '3771', descr => 'I/O',
  n => 'regdictionaryin', is => 't', v => 's', p => 's', rt => 'regdictionary', at => 'cstring' },
{ oid => '3772', descr => 'I/O',
  n => 'regdictionaryout', is => 't', v => 's', p => 's', rt => 'cstring', at => 'regdictionary' },
{ oid => '3773', descr => 'I/O',
  n => 'regdictionaryrecv', is => 't', v => 'i', p => 's', rt => 'regdictionary', at => 'internal' },
{ oid => '3774', descr => 'I/O',
  n => 'regdictionarysend', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'regdictionary' },

# jsonb
{ oid => '3806', descr => 'I/O',
  n => 'jsonb_in', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'cstring' },
{ oid => '3805', descr => 'I/O',
  n => 'jsonb_recv', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'internal' },
{ oid => '3804', descr => 'I/O',
  n => 'jsonb_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'jsonb' },
{ oid => '3803', descr => 'I/O',
  n => 'jsonb_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'jsonb' },

{ oid => '3263', descr => 'map text array of key value pairs to jsonb object',
  n => 'jsonb_object', is => 't', v => 'i', p => 's', rt => 'jsonb', at => '_text' },
{ oid => '3264', descr => 'map text array of key value pairs to jsonb object',
  n => 'jsonb_object', is => 't', v => 'i', p => 's', rt => 'jsonb', at => '_text _text', s => 'jsonb_object_two_arg' },
{ oid => '3787', descr => 'map input to jsonb',
  n => 'to_jsonb', is => 't', v => 's', p => 's', rt => 'jsonb', at => 'anyelement' },
{ oid => '3265', descr => 'jsonb aggregate transition function',
  n => 'jsonb_agg_transfn', v => 's', p => 's', rt => 'internal', at => 'internal anyelement' },
{ oid => '3266', descr => 'jsonb aggregate final function',
  n => 'jsonb_agg_finalfn', v => 's', p => 's', rt => 'jsonb', at => 'internal' },
{ oid => '3267', descr => 'aggregate input into jsonb',
  n => 'jsonb_agg', proisagg => 't', v => 's', p => 's', rt => 'jsonb', at => 'anyelement', s => 'aggregate_dummy' },
{ oid => '3268', descr => 'jsonb object aggregate transition function',
  n => 'jsonb_object_agg_transfn', v => 's', p => 's', rt => 'internal', at => 'internal any any' },
{ oid => '3269', descr => 'jsonb object aggregate final function',
  n => 'jsonb_object_agg_finalfn', v => 's', p => 's', rt => 'jsonb', at => 'internal' },
{ oid => '3270', descr => 'aggregate inputs into jsonb object',
  n => 'jsonb_object_agg', proisagg => 't', v => 'i', p => 's', rt => 'jsonb', at => 'any any', s => 'aggregate_dummy' },
{ oid => '3271', descr => 'build a jsonb array from any inputs',
  n => 'jsonb_build_array', provariadic => '2276', v => 's', p => 's', rt => 'jsonb', at => 'any', proallargtypes => '{any}', proargmodes => '{v}' },
{ oid => '3272', descr => 'build an empty jsonb array',
  n => 'jsonb_build_array', v => 's', p => 's', rt => 'jsonb', at => '', s => 'jsonb_build_array_noargs' },
{ oid => '3273', descr => 'build a jsonb object from pairwise key/value inputs',
  n => 'jsonb_build_object', provariadic => '2276', v => 's', p => 's', rt => 'jsonb', at => 'any', proallargtypes => '{any}', proargmodes => '{v}' },
{ oid => '3274', descr => 'build an empty jsonb object',
  n => 'jsonb_build_object', v => 's', p => 's', rt => 'jsonb', at => '', s => 'jsonb_build_object_noargs' },
{ oid => '3262', descr => 'remove object fields with null values from jsonb',
  n => 'jsonb_strip_nulls', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb' },

{ oid => '3478',
  n => 'jsonb_object_field', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb text', proargnames => '{from_json, field_name}' },
{ oid => '3214',
  n => 'jsonb_object_field_text', is => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb text', proargnames => '{from_json, field_name}' },
{ oid => '3215',
  n => 'jsonb_array_element', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb int4', proargnames => '{from_json, element_index}' },
{ oid => '3216',
  n => 'jsonb_array_element_text', is => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb int4', proargnames => '{from_json, element_index}' },
{ oid => '3217', descr => 'get value from jsonb with path elements',
  n => 'jsonb_extract_path', provariadic => '25', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb _text', proallargtypes => '{jsonb,_text}', proargmodes => '{i,v}', proargnames => '{from_json,path_elems}' },
{ oid => '3940', descr => 'get value from jsonb as text with path elements',
  n => 'jsonb_extract_path_text', provariadic => '25', is => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb _text', proallargtypes => '{jsonb,_text}', proargmodes => '{i,v}', proargnames => '{from_json,path_elems}' },
{ oid => '3219', descr => 'elements of a jsonb array',
  n => 'jsonb_array_elements', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb', proallargtypes => '{jsonb,jsonb}', proargmodes => '{i,o}', proargnames => '{from_json,value}' },
{ oid => '3465', descr => 'elements of jsonb array',
  n => 'jsonb_array_elements_text', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb', proallargtypes => '{jsonb,text}', proargmodes => '{i,o}', proargnames => '{from_json,value}' },
{ oid => '3207', descr => 'length of jsonb array',
  n => 'jsonb_array_length', is => 't', v => 'i', p => 's', rt => 'int4', at => 'jsonb' },
{ oid => '3931', descr => 'get jsonb object keys',
  n => 'jsonb_object_keys', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb' },
{ oid => '3208', descr => 'key value pairs of a jsonb object',
  n => 'jsonb_each', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'jsonb', proallargtypes => '{jsonb,text,jsonb}', proargmodes => '{i,o,o}', proargnames => '{from_json,key,value}' },
{ oid => '3932', descr => 'key value pairs of a jsonb object',
  n => 'jsonb_each_text', prorows => '100', is => 't', proretset => 't', v => 'i', p => 's', rt => 'record', at => 'jsonb', proallargtypes => '{jsonb,text,text}', proargmodes => '{i,o,o}', proargnames => '{from_json,key,value}' },
{ oid => '3209', descr => 'get record fields from a jsonb object',
  n => 'jsonb_populate_record', v => 's', p => 's', rt => 'anyelement', at => 'anyelement jsonb' },
{ oid => '3475', descr => 'get set of records with fields from a jsonb array of objects',
  n => 'jsonb_populate_recordset', prorows => '100', proretset => 't', v => 's', p => 's', rt => 'anyelement', at => 'anyelement jsonb' },
{ oid => '3490', descr => 'get record fields from a jsonb object',
  n => 'jsonb_to_record', is => 't', v => 's', p => 's', rt => 'record', at => 'jsonb' },
{ oid => '3491', descr => 'get set of records with fields from a jsonb array of objects',
  n => 'jsonb_to_recordset', prorows => '100', proretset => 't', v => 's', p => 's', rt => 'record', at => 'jsonb' },
{ oid => '3210', descr => 'get the type of a jsonb value',
  n => 'jsonb_typeof', is => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb' },
{ oid => '4038',
  n => 'jsonb_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4039',
  n => 'jsonb_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4040',
  n => 'jsonb_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4041',
  n => 'jsonb_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4042',
  n => 'jsonb_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4043',
  n => 'jsonb_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4044', descr => 'less-equal-greater',
  n => 'jsonb_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'jsonb jsonb' },
{ oid => '4045', descr => 'hash',
  n => 'jsonb_hash', is => 't', v => 'i', p => 's', rt => 'int4', at => 'jsonb' },
{ oid => '3416', descr => 'hash',
  n => 'jsonb_hash_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'jsonb int8' },
{ oid => '4046',
  n => 'jsonb_contains', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '4047',
  n => 'jsonb_exists', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb text' },
{ oid => '4048',
  n => 'jsonb_exists_any', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb _text' },
{ oid => '4049',
  n => 'jsonb_exists_all', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb _text' },
{ oid => '4050',
  n => 'jsonb_contained', is => 't', v => 'i', p => 's', rt => 'bool', at => 'jsonb jsonb' },
{ oid => '3480', descr => 'GIN support',
  n => 'gin_compare_jsonb', is => 't', v => 'i', p => 's', rt => 'int4', at => 'text text' },
{ oid => '3482', descr => 'GIN support',
  n => 'gin_extract_jsonb', is => 't', v => 'i', p => 's', rt => 'internal', at => 'jsonb internal internal' },
{ oid => '3483', descr => 'GIN support',
  n => 'gin_extract_jsonb_query', is => 't', v => 'i', p => 's', rt => 'internal', at => 'jsonb internal int2 internal internal internal internal' },
{ oid => '3484', descr => 'GIN support',
  n => 'gin_consistent_jsonb', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal int2 jsonb int4 internal internal internal internal' },
{ oid => '3488', descr => 'GIN support',
  n => 'gin_triconsistent_jsonb', is => 't', v => 'i', p => 's', rt => 'char', at => 'internal int2 jsonb int4 internal internal internal' },
{ oid => '3485', descr => 'GIN support',
  n => 'gin_extract_jsonb_path', is => 't', v => 'i', p => 's', rt => 'internal', at => 'jsonb internal internal' },
{ oid => '3486', descr => 'GIN support',
  n => 'gin_extract_jsonb_query_path', is => 't', v => 'i', p => 's', rt => 'internal', at => 'jsonb internal int2 internal internal internal internal' },
{ oid => '3487', descr => 'GIN support',
  n => 'gin_consistent_jsonb_path', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal int2 jsonb int4 internal internal internal internal' },
{ oid => '3489', descr => 'GIN support',
  n => 'gin_triconsistent_jsonb_path', is => 't', v => 'i', p => 's', rt => 'char', at => 'internal int2 jsonb int4 internal internal internal' },
{ oid => '3301',
  n => 'jsonb_concat', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb jsonb' },
{ oid => '3302',
  n => 'jsonb_delete', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb text' },
{ oid => '3303',
  n => 'jsonb_delete', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb int4', s => 'jsonb_delete_idx' },
{ oid => '3343',
  n => 'jsonb_delete', provariadic => '25', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb _text', proallargtypes => '{jsonb,_text}', proargmodes => '{i,v}', proargnames => '{from_json,path_elems}', s => 'jsonb_delete_array' },
{ oid => '3304',
  n => 'jsonb_delete_path', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb _text' },
{ oid => '3305', descr => 'Set part of a jsonb',
  n => 'jsonb_set', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb _text jsonb bool' },
{ oid => '3306', descr => 'Indented text from jsonb',
  n => 'jsonb_pretty', is => 't', v => 'i', p => 's', rt => 'text', at => 'jsonb' },
{ oid => '3579', descr => 'Insert value into a jsonb',
  n => 'jsonb_insert', is => 't', v => 'i', p => 's', rt => 'jsonb', at => 'jsonb _text jsonb bool' },

# txid
{ oid => '2939', descr => 'I/O',
  n => 'txid_snapshot_in', is => 't', v => 'i', p => 's', rt => 'txid_snapshot', at => 'cstring' },
{ oid => '2940', descr => 'I/O',
  n => 'txid_snapshot_out', is => 't', v => 'i', p => 's', rt => 'cstring', at => 'txid_snapshot' },
{ oid => '2941', descr => 'I/O',
  n => 'txid_snapshot_recv', is => 't', v => 'i', p => 's', rt => 'txid_snapshot', at => 'internal' },
{ oid => '2942', descr => 'I/O',
  n => 'txid_snapshot_send', is => 't', v => 'i', p => 's', rt => 'bytea', at => 'txid_snapshot' },
{ oid => '2943', descr => 'get current transaction ID',
  n => 'txid_current', is => 't', v => 's', rt => 'int8', at => '' },
{ oid => '3348', descr => 'get current transaction ID',
  n => 'txid_current_if_assigned', is => 't', v => 's', rt => 'int8', at => '' },
{ oid => '2944', descr => 'get current snapshot',
  n => 'txid_current_snapshot', is => 't', v => 's', p => 's', rt => 'txid_snapshot', at => '' },
{ oid => '2945', descr => 'get xmin of snapshot',
  n => 'txid_snapshot_xmin', is => 't', v => 'i', p => 's', rt => 'int8', at => 'txid_snapshot' },
{ oid => '2946', descr => 'get xmax of snapshot',
  n => 'txid_snapshot_xmax', is => 't', v => 'i', p => 's', rt => 'int8', at => 'txid_snapshot' },
{ oid => '2947', descr => 'get set of in-progress txids in snapshot',
  n => 'txid_snapshot_xip', prorows => '50', is => 't', proretset => 't', v => 'i', p => 's', rt => 'int8', at => 'txid_snapshot' },
{ oid => '2948', descr => 'is txid visible in snapshot?',
  n => 'txid_visible_in_snapshot', is => 't', v => 'i', p => 's', rt => 'bool', at => 'int8 txid_snapshot' },
{ oid => '3360', descr => 'commit status of transaction',
  n => 'txid_status', is => 't', p => 's', rt => 'text', at => 'int8' },

# record comparison using normal comparison rules
{ oid => '2981',
  n => 'record_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '2982',
  n => 'record_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '2983',
  n => 'record_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '2984',
  n => 'record_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '2985',
  n => 'record_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '2986',
  n => 'record_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '2987', descr => 'less-equal-greater',
  n => 'btrecordcmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'record record' },

# record comparison using raw byte images
{ oid => '3181',
  n => 'record_image_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '3182',
  n => 'record_image_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '3183',
  n => 'record_image_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '3184',
  n => 'record_image_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '3185',
  n => 'record_image_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '3186',
  n => 'record_image_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'record record' },
{ oid => '3187', descr => 'less-equal-greater based on byte images',
  n => 'btrecordimagecmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'record record' },

# Extensions
{ oid => '3082', descr => 'list available extensions',
  n => 'pg_available_extensions', procost => '10', prorows => '100', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{name,text,text}', proargmodes => '{o,o,o}', proargnames => '{name,default_version,comment}' },
{ oid => '3083', descr => 'list available extension versions',
  n => 'pg_available_extension_versions', procost => '10', prorows => '100', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{name,text,bool,bool,name,_name,text}', proargmodes => '{o,o,o,o,o,o,o}', proargnames => '{name,version,superuser,relocatable,schema,requires,comment}' },
{ oid => '3084', descr => 'list an extension\'s version update paths',
  n => 'pg_extension_update_paths', procost => '10', prorows => '100', is => 't', proretset => 't', v => 's', p => 's', rt => 'record', at => 'name', proallargtypes => '{name,text,text,text}', proargmodes => '{i,o,o,o}', proargnames => '{name,source,target,path}' },
{ oid => '3086', descr => 'flag an extension\'s table contents to be emitted by pg_dump',
  n => 'pg_extension_config_dump', is => 't', rt => 'void', at => 'regclass text' },

# SQL-spec window functions
{ oid => '3100', descr => 'row number within partition',
  n => 'row_number', proiswindow => 't', v => 'i', p => 's', rt => 'int8', at => '', s => 'window_row_number' },
{ oid => '3101', descr => 'integer rank with gaps',
  n => 'rank', proiswindow => 't', v => 'i', p => 's', rt => 'int8', at => '', s => 'window_rank' },
{ oid => '3102', descr => 'integer rank without gaps',
  n => 'dense_rank', proiswindow => 't', v => 'i', p => 's', rt => 'int8', at => '', s => 'window_dense_rank' },
{ oid => '3103', descr => 'fractional rank within partition',
  n => 'percent_rank', proiswindow => 't', v => 'i', p => 's', rt => 'float8', at => '', s => 'window_percent_rank' },
{ oid => '3104', descr => 'fractional row number within partition',
  n => 'cume_dist', proiswindow => 't', v => 'i', p => 's', rt => 'float8', at => '', s => 'window_cume_dist' },
{ oid => '3105', descr => 'split rows into N groups',
  n => 'ntile', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'int4', at => 'int4', s => 'window_ntile' },
{ oid => '3106', descr => 'fetch the preceding row value',
  n => 'lag', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement', s => 'window_lag' },
{ oid => '3107', descr => 'fetch the Nth preceding row value',
  n => 'lag', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement int4', s => 'window_lag_with_offset' },
{ oid => '3108', descr => 'fetch the Nth preceding row value with default',
  n => 'lag', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement int4 anyelement', s => 'window_lag_with_offset_and_default' },
{ oid => '3109', descr => 'fetch the following row value',
  n => 'lead', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement', s => 'window_lead' },
{ oid => '3110', descr => 'fetch the Nth following row value',
  n => 'lead', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement int4', s => 'window_lead_with_offset' },
{ oid => '3111', descr => 'fetch the Nth following row value with default',
  n => 'lead', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement int4 anyelement', s => 'window_lead_with_offset_and_default' },
{ oid => '3112', descr => 'fetch the first row value',
  n => 'first_value', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement', s => 'window_first_value' },
{ oid => '3113', descr => 'fetch the last row value',
  n => 'last_value', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement', s => 'window_last_value' },
{ oid => '3114', descr => 'fetch the Nth row value',
  n => 'nth_value', proiswindow => 't', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement int4', s => 'window_nth_value' },

# functions for range types
{ oid => '3832', descr => 'I/O',
  n => 'anyrange_in', is => 't', v => 's', p => 's', rt => 'anyrange', at => 'cstring oid int4' },
{ oid => '3833', descr => 'I/O',
  n => 'anyrange_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'anyrange' },
{ oid => '3834', descr => 'I/O',
  n => 'range_in', is => 't', v => 's', p => 's', rt => 'anyrange', at => 'cstring oid int4' },
{ oid => '3835', descr => 'I/O',
  n => 'range_out', is => 't', v => 's', p => 's', rt => 'cstring', at => 'anyrange' },
{ oid => '3836', descr => 'I/O',
  n => 'range_recv', is => 't', v => 's', p => 's', rt => 'anyrange', at => 'internal oid int4' },
{ oid => '3837', descr => 'I/O',
  n => 'range_send', is => 't', v => 's', p => 's', rt => 'bytea', at => 'anyrange' },
{ oid => '3848', descr => 'lower bound of range',
  n => 'lower', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyrange', s => 'range_lower' },
{ oid => '3849', descr => 'upper bound of range',
  n => 'upper', is => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyrange', s => 'range_upper' },
{ oid => '3850', descr => 'is the range empty?',
  n => 'isempty', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange', s => 'range_empty' },
{ oid => '3851', descr => 'is the range\'s lower bound inclusive?',
  n => 'lower_inc', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange', s => 'range_lower_inc' },
{ oid => '3852', descr => 'is the range\'s upper bound inclusive?',
  n => 'upper_inc', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange', s => 'range_upper_inc' },
{ oid => '3853', descr => 'is the range\'s lower bound infinite?',
  n => 'lower_inf', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange', s => 'range_lower_inf' },
{ oid => '3854', descr => 'is the range\'s upper bound infinite?',
  n => 'upper_inf', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange', s => 'range_upper_inf' },
{ oid => '3855',
  n => 'range_eq', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3856',
  n => 'range_ne', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3857',
  n => 'range_overlaps', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3858',
  n => 'range_contains_elem', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyelement' },
{ oid => '3859',
  n => 'range_contains', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3860',
  n => 'elem_contained_by_range', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyelement anyrange' },
{ oid => '3861',
  n => 'range_contained_by', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3862',
  n => 'range_adjacent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3863',
  n => 'range_before', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3864',
  n => 'range_after', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3865',
  n => 'range_overleft', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3866',
  n => 'range_overright', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3867',
  n => 'range_union', is => 't', v => 'i', p => 's', rt => 'anyrange', at => 'anyrange anyrange' },
{ oid => '4057', descr => 'the smallest range which includes both of the given ranges',
  n => 'range_merge', is => 't', v => 'i', p => 's', rt => 'anyrange', at => 'anyrange anyrange' },
{ oid => '3868',
  n => 'range_intersect', is => 't', v => 'i', p => 's', rt => 'anyrange', at => 'anyrange anyrange' },
{ oid => '3869',
  n => 'range_minus', is => 't', v => 'i', p => 's', rt => 'anyrange', at => 'anyrange anyrange' },
{ oid => '3870', descr => 'less-equal-greater',
  n => 'range_cmp', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyrange anyrange' },
{ oid => '3871',
  n => 'range_lt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3872',
  n => 'range_le', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3873',
  n => 'range_ge', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3874',
  n => 'range_gt', is => 't', v => 'i', p => 's', rt => 'bool', at => 'anyrange anyrange' },
{ oid => '3875', descr => 'GiST support',
  n => 'range_gist_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal anyrange int2 oid internal' },
{ oid => '3876', descr => 'GiST support',
  n => 'range_gist_union', is => 't', v => 'i', p => 's', rt => 'anyrange', at => 'internal internal' },
{ oid => '3879', descr => 'GiST support',
  n => 'range_gist_penalty', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal internal' },
{ oid => '3880', descr => 'GiST support',
  n => 'range_gist_picksplit', is => 't', v => 'i', p => 's', rt => 'internal', at => 'internal internal' },
{ oid => '3881', descr => 'GiST support',
  n => 'range_gist_same', is => 't', v => 'i', p => 's', rt => 'internal', at => 'anyrange anyrange internal' },
{ oid => '3902', descr => 'hash a range',
  n => 'hash_range', is => 't', v => 'i', p => 's', rt => 'int4', at => 'anyrange' },
{ oid => '3417', descr => 'hash a range',
  n => 'hash_range_extended', is => 't', v => 'i', p => 's', rt => 'int8', at => 'anyrange int8' },
{ oid => '3916', descr => 'range typanalyze',
  n => 'range_typanalyze', is => 't', v => 's', p => 's', rt => 'bool', at => 'internal' },
{ oid => '3169', descr => 'restriction selectivity for range operators',
  n => 'rangesel', is => 't', v => 's', p => 's', rt => 'float8', at => 'internal oid internal int4' },

{ oid => '3914', descr => 'convert an int4 range to canonical form',
  n => 'int4range_canonical', is => 't', v => 'i', p => 's', rt => 'int4range', at => 'int4range' },
{ oid => '3928', descr => 'convert an int8 range to canonical form',
  n => 'int8range_canonical', is => 't', v => 'i', p => 's', rt => 'int8range', at => 'int8range' },
{ oid => '3915', descr => 'convert a date range to canonical form',
  n => 'daterange_canonical', is => 't', v => 'i', p => 's', rt => 'daterange', at => 'daterange' },
{ oid => '3922', descr => 'float8 difference of two int4 values',
  n => 'int4range_subdiff', is => 't', v => 'i', p => 's', rt => 'float8', at => 'int4 int4' },
{ oid => '3923', descr => 'float8 difference of two int8 values',
  n => 'int8range_subdiff', is => 't', v => 'i', p => 's', rt => 'float8', at => 'int8 int8' },
{ oid => '3924', descr => 'float8 difference of two numeric values',
  n => 'numrange_subdiff', is => 't', v => 'i', p => 's', rt => 'float8', at => 'numeric numeric' },
{ oid => '3925', descr => 'float8 difference of two date values',
  n => 'daterange_subdiff', is => 't', v => 'i', p => 's', rt => 'float8', at => 'date date' },
{ oid => '3929', descr => 'float8 difference of two timestamp values',
  n => 'tsrange_subdiff', is => 't', v => 'i', p => 's', rt => 'float8', at => 'timestamp timestamp' },
{ oid => '3930', descr => 'float8 difference of two timestamp with time zone values',
  n => 'tstzrange_subdiff', is => 't', v => 'i', p => 's', rt => 'float8', at => 'timestamptz timestamptz' },

{ oid => '3840', descr => 'int4range constructor',
  n => 'int4range', v => 'i', p => 's', rt => 'int4range', at => 'int4 int4', s => 'range_constructor2' },
{ oid => '3841', descr => 'int4range constructor',
  n => 'int4range', v => 'i', p => 's', rt => 'int4range', at => 'int4 int4 text', s => 'range_constructor3' },
{ oid => '3844', descr => 'numrange constructor',
  n => 'numrange', v => 'i', p => 's', rt => 'numrange', at => 'numeric numeric', s => 'range_constructor2' },
{ oid => '3845', descr => 'numrange constructor',
  n => 'numrange', v => 'i', p => 's', rt => 'numrange', at => 'numeric numeric text', s => 'range_constructor3' },
{ oid => '3933', descr => 'tsrange constructor',
  n => 'tsrange', v => 'i', p => 's', rt => 'tsrange', at => 'timestamp timestamp', s => 'range_constructor2' },
{ oid => '3934', descr => 'tsrange constructor',
  n => 'tsrange', v => 'i', p => 's', rt => 'tsrange', at => 'timestamp timestamp text', s => 'range_constructor3' },
{ oid => '3937', descr => 'tstzrange constructor',
  n => 'tstzrange', v => 'i', p => 's', rt => 'tstzrange', at => 'timestamptz timestamptz', s => 'range_constructor2' },
{ oid => '3938', descr => 'tstzrange constructor',
  n => 'tstzrange', v => 'i', p => 's', rt => 'tstzrange', at => 'timestamptz timestamptz text', s => 'range_constructor3' },
{ oid => '3941', descr => 'daterange constructor',
  n => 'daterange', v => 'i', p => 's', rt => 'daterange', at => 'date date', s => 'range_constructor2' },
{ oid => '3942', descr => 'daterange constructor',
  n => 'daterange', v => 'i', p => 's', rt => 'daterange', at => 'date date text', s => 'range_constructor3' },
{ oid => '3945', descr => 'int8range constructor',
  n => 'int8range', v => 'i', p => 's', rt => 'int8range', at => 'int8 int8', s => 'range_constructor2' },
{ oid => '3946', descr => 'int8range constructor',
  n => 'int8range', v => 'i', p => 's', rt => 'int8range', at => 'int8 int8 text', s => 'range_constructor3' },

# date, time, timestamp constructors
{ oid => '3846', descr => 'construct date',
  n => 'make_date', is => 't', v => 'i', p => 's', rt => 'date', at => 'int4 int4 int4', proargnames => '{year,month,day}' },
{ oid => '3847', descr => 'construct time',
  n => 'make_time', is => 't', v => 'i', p => 's', rt => 'time', at => 'int4 int4 float8', proargnames => '{hour,min,sec}' },
{ oid => '3461', descr => 'construct timestamp',
  n => 'make_timestamp', is => 't', v => 'i', p => 's', rt => 'timestamp', at => 'int4 int4 int4 int4 int4 float8', proargnames => '{year,month,mday,hour,min,sec}' },
{ oid => '3462', descr => 'construct timestamp with time zone',
  n => 'make_timestamptz', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'int4 int4 int4 int4 int4 float8', proargnames => '{year,month,mday,hour,min,sec}' },
{ oid => '3463', descr => 'construct timestamp with time zone',
  n => 'make_timestamptz', is => 't', v => 's', p => 's', rt => 'timestamptz', at => 'int4 int4 int4 int4 int4 float8 text', proargnames => '{year,month,mday,hour,min,sec,timezone}', s => 'make_timestamptz_at_timezone' },
{ oid => '3464', descr => 'construct interval',
  n => 'make_interval', is => 't', v => 'i', p => 's', rt => 'interval', at => 'int4 int4 int4 int4 int4 int4 float8', proargnames => '{years,months,weeks,days,hours,mins,secs}' },

# spgist opclasses
{ oid => '4018', descr => 'SP-GiST support for quad tree over point',
  n => 'spg_quad_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4019', descr => 'SP-GiST support for quad tree over point',
  n => 'spg_quad_choose', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4020', descr => 'SP-GiST support for quad tree over point',
  n => 'spg_quad_picksplit', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4021', descr => 'SP-GiST support for quad tree over point',
  n => 'spg_quad_inner_consistent', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4022', descr => 'SP-GiST support for quad tree and k-d tree over point',
  n => 'spg_quad_leaf_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal' },

{ oid => '4023', descr => 'SP-GiST support for k-d tree over point',
  n => 'spg_kd_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4024', descr => 'SP-GiST support for k-d tree over point',
  n => 'spg_kd_choose', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4025', descr => 'SP-GiST support for k-d tree over point',
  n => 'spg_kd_picksplit', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4026', descr => 'SP-GiST support for k-d tree over point',
  n => 'spg_kd_inner_consistent', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },

{ oid => '4027', descr => 'SP-GiST support for radix tree over text',
  n => 'spg_text_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4028', descr => 'SP-GiST support for radix tree over text',
  n => 'spg_text_choose', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4029', descr => 'SP-GiST support for radix tree over text',
  n => 'spg_text_picksplit', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4030', descr => 'SP-GiST support for radix tree over text',
  n => 'spg_text_inner_consistent', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '4031', descr => 'SP-GiST support for radix tree over text',
  n => 'spg_text_leaf_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal' },

{ oid => '3469', descr => 'SP-GiST support for quad tree over range',
  n => 'spg_range_quad_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3470', descr => 'SP-GiST support for quad tree over range',
  n => 'spg_range_quad_choose', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3471', descr => 'SP-GiST support for quad tree over range',
  n => 'spg_range_quad_picksplit', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3472', descr => 'SP-GiST support for quad tree over range',
  n => 'spg_range_quad_inner_consistent', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '3473', descr => 'SP-GiST support for quad tree over range',
  n => 'spg_range_quad_leaf_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal' },

{ oid => '5012', descr => 'SP-GiST support for quad tree over box',
  n => 'spg_box_quad_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '5013', descr => 'SP-GiST support for quad tree over box',
  n => 'spg_box_quad_choose', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '5014', descr => 'SP-GiST support for quad tree over box',
  n => 'spg_box_quad_picksplit', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '5015', descr => 'SP-GiST support for quad tree over box',
  n => 'spg_box_quad_inner_consistent', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '5016', descr => 'SP-GiST support for quad tree over box',
  n => 'spg_box_quad_leaf_consistent', is => 't', v => 'i', p => 's', rt => 'bool', at => 'internal internal' },

{ oid => '5010', descr => 'SP-GiST support for quad tree over 2-D types represented by their bounding boxes',
  n => 'spg_bbox_quad_config', is => 't', v => 'i', p => 's', rt => 'void', at => 'internal internal' },
{ oid => '5011', descr => 'SP-GiST support for quad tree over polygons',
  n => 'spg_poly_quad_compress', is => 't', v => 'i', p => 's', rt => 'box', at => 'polygon' },

# replication slots
{ oid => '3779', descr => 'create a physical replication slot',
  n => 'pg_create_physical_replication_slot', is => 't', rt => 'record', at => 'name bool bool', proallargtypes => '{name,bool,bool,name,pg_lsn}', proargmodes => '{i,i,i,o,o}', proargnames => '{slot_name,immediately_reserve,temporary,slot_name,lsn}' },
{ oid => '3780', descr => 'drop a replication slot',
  n => 'pg_drop_replication_slot', is => 't', rt => 'void', at => 'name' },
{ oid => '3781', descr => 'information about replication slots currently in use',
  n => 'pg_get_replication_slots', prorows => '10', proretset => 't', v => 's', p => 's', rt => 'record', at => '', proallargtypes => '{name,name,text,oid,bool,bool,int4,xid,xid,pg_lsn,pg_lsn}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{slot_name,plugin,slot_type,datoid,temporary,active,active_pid,xmin,catalog_xmin,restart_lsn,confirmed_flush_lsn}' },
{ oid => '3786', descr => 'set up a logical replication slot',
  n => 'pg_create_logical_replication_slot', is => 't', rt => 'record', at => 'name name bool', proallargtypes => '{name,name,bool,text,pg_lsn}', proargmodes => '{i,i,i,o,o}', proargnames => '{slot_name,plugin,temporary,slot_name,lsn}' },
{ oid => '3782', descr => 'get changes from replication slot',
  n => 'pg_logical_slot_get_changes', procost => '1000', prorows => '1000', provariadic => '25', proretset => 't', rt => 'record', at => 'name pg_lsn int4 _text', proallargtypes => '{name,pg_lsn,int4,_text,pg_lsn,xid,text}', proargmodes => '{i,i,i,v,o,o,o}', proargnames => '{slot_name,upto_lsn,upto_nchanges,options,lsn,xid,data}' },
{ oid => '3783', descr => 'get binary changes from replication slot',
  n => 'pg_logical_slot_get_binary_changes', procost => '1000', prorows => '1000', provariadic => '25', proretset => 't', rt => 'record', at => 'name pg_lsn int4 _text', proallargtypes => '{name,pg_lsn,int4,_text,pg_lsn,xid,bytea}', proargmodes => '{i,i,i,v,o,o,o}', proargnames => '{slot_name,upto_lsn,upto_nchanges,options,lsn,xid,data}' },
{ oid => '3784', descr => 'peek at changes from replication slot',
  n => 'pg_logical_slot_peek_changes', procost => '1000', prorows => '1000', provariadic => '25', proretset => 't', rt => 'record', at => 'name pg_lsn int4 _text', proallargtypes => '{name,pg_lsn,int4,_text,pg_lsn,xid,text}', proargmodes => '{i,i,i,v,o,o,o}', proargnames => '{slot_name,upto_lsn,upto_nchanges,options,lsn,xid,data}' },
{ oid => '3785', descr => 'peek at binary changes from replication slot',
  n => 'pg_logical_slot_peek_binary_changes', procost => '1000', prorows => '1000', provariadic => '25', proretset => 't', rt => 'record', at => 'name pg_lsn int4 _text', proallargtypes => '{name,pg_lsn,int4,_text,pg_lsn,xid,bytea}', proargmodes => '{i,i,i,v,o,o,o}', proargnames => '{slot_name,upto_lsn,upto_nchanges,options,lsn,xid,data}' },
{ oid => '3577', descr => 'emit a textual logical decoding message',
  n => 'pg_logical_emit_message', is => 't', rt => 'pg_lsn', at => 'bool text text', s => 'pg_logical_emit_message_text' },
{ oid => '3578', descr => 'emit a binary logical decoding message',
  n => 'pg_logical_emit_message', is => 't', rt => 'pg_lsn', at => 'bool text bytea', s => 'pg_logical_emit_message_bytea' },

# event triggers
{ oid => '3566', descr => 'list objects dropped by the current command',
  n => 'pg_event_trigger_dropped_objects', procost => '10', prorows => '100', is => 't', proretset => 't', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{oid,oid,int4,bool,bool,bool,text,text,text,text,_text,_text}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{classid, objid, objsubid, original, normal, is_temporary, object_type, schema_name, object_name, object_identity, address_names, address_args}' },
{ oid => '4566', descr => 'return Oid of the table getting rewritten',
  n => 'pg_event_trigger_table_rewrite_oid', is => 't', v => 's', p => 'r', rt => 'oid', at => '', proallargtypes => '{oid}', proargmodes => '{o}', proargnames => '{oid}' },
{ oid => '4567', descr => 'return reason code for table getting rewritten',
  n => 'pg_event_trigger_table_rewrite_reason', is => 't', v => 's', p => 'r', rt => 'int4', at => '' },
{ oid => '4568', descr => 'list DDL actions being executed by the current command',
  n => 'pg_event_trigger_ddl_commands', procost => '10', prorows => '100', is => 't', proretset => 't', v => 's', p => 'r', rt => 'record', at => '', proallargtypes => '{oid,oid,int4,text,text,text,text,bool,pg_ddl_command}', proargmodes => '{o,o,o,o,o,o,o,o,o}', proargnames => '{classid, objid, objsubid, command_tag, object_type, schema_name, object_identity, in_extension, command}' },

# generic transition functions for ordered-set aggregates
{ oid => '3970', descr => 'aggregate transition function',
  n => 'ordered_set_transition', v => 'i', p => 's', rt => 'internal', at => 'internal any' },
{ oid => '3971', descr => 'aggregate transition function',
  n => 'ordered_set_transition_multi', provariadic => '2276', v => 'i', p => 's', rt => 'internal', at => 'internal any', proallargtypes => '{internal,any}', proargmodes => '{i,v}' },

# inverse distribution aggregates (and their support functions)
{ oid => '3972', descr => 'discrete percentile',
  n => 'percentile_disc', proisagg => 't', v => 'i', p => 's', rt => 'anyelement', at => 'float8 anyelement', s => 'aggregate_dummy' },
{ oid => '3973', descr => 'aggregate final function',
  n => 'percentile_disc_final', v => 'i', p => 's', rt => 'anyelement', at => 'internal float8 anyelement' },
{ oid => '3974', descr => 'continuous distribution percentile',
  n => 'percentile_cont', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'float8 float8', s => 'aggregate_dummy' },
{ oid => '3975', descr => 'aggregate final function',
  n => 'percentile_cont_float8_final', v => 'i', p => 's', rt => 'float8', at => 'internal float8' },
{ oid => '3976', descr => 'continuous distribution percentile',
  n => 'percentile_cont', proisagg => 't', v => 'i', p => 's', rt => 'interval', at => 'float8 interval', s => 'aggregate_dummy' },
{ oid => '3977', descr => 'aggregate final function',
  n => 'percentile_cont_interval_final', v => 'i', p => 's', rt => 'interval', at => 'internal float8' },
{ oid => '3978', descr => 'multiple discrete percentiles',
  n => 'percentile_disc', proisagg => 't', v => 'i', p => 's', rt => 'anyarray', at => '_float8 anyelement', s => 'aggregate_dummy' },
{ oid => '3979', descr => 'aggregate final function',
  n => 'percentile_disc_multi_final', v => 'i', p => 's', rt => 'anyarray', at => 'internal _float8 anyelement' },
{ oid => '3980', descr => 'multiple continuous percentiles',
  n => 'percentile_cont', proisagg => 't', v => 'i', p => 's', rt => '_float8', at => '_float8 float8', s => 'aggregate_dummy' },
{ oid => '3981', descr => 'aggregate final function',
  n => 'percentile_cont_float8_multi_final', v => 'i', p => 's', rt => '_float8', at => 'internal _float8' },
{ oid => '3982', descr => 'multiple continuous percentiles',
  n => 'percentile_cont', proisagg => 't', v => 'i', p => 's', rt => '_interval', at => '_float8 interval', s => 'aggregate_dummy' },
{ oid => '3983', descr => 'aggregate final function',
  n => 'percentile_cont_interval_multi_final', v => 'i', p => 's', rt => '_interval', at => 'internal _float8' },
{ oid => '3984', descr => 'most common value',
  n => 'mode', proisagg => 't', v => 'i', p => 's', rt => 'anyelement', at => 'anyelement', s => 'aggregate_dummy' },
{ oid => '3985', descr => 'aggregate final function',
  n => 'mode_final', v => 'i', p => 's', rt => 'anyelement', at => 'internal anyelement' },

# hypothetical-set aggregates (and their support functions)
{ oid => '3986', descr => 'rank of hypothetical row',
  n => 'rank', provariadic => '2276', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'aggregate_dummy' },
{ oid => '3987', descr => 'aggregate final function',
  n => 'rank_final', provariadic => '2276', v => 'i', p => 's', rt => 'int8', at => 'internal any', proallargtypes => '{internal,any}', proargmodes => '{i,v}', s => 'hypothetical_rank_final' },
{ oid => '3988', descr => 'fractional rank of hypothetical row',
  n => 'percent_rank', provariadic => '2276', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'aggregate_dummy' },
{ oid => '3989', descr => 'aggregate final function',
  n => 'percent_rank_final', provariadic => '2276', v => 'i', p => 's', rt => 'float8', at => 'internal any', proallargtypes => '{internal,any}', proargmodes => '{i,v}', s => 'hypothetical_percent_rank_final' },
{ oid => '3990', descr => 'cumulative distribution of hypothetical row',
  n => 'cume_dist', provariadic => '2276', proisagg => 't', v => 'i', p => 's', rt => 'float8', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'aggregate_dummy' },
{ oid => '3991', descr => 'aggregate final function',
  n => 'cume_dist_final', provariadic => '2276', v => 'i', p => 's', rt => 'float8', at => 'internal any', proallargtypes => '{internal,any}', proargmodes => '{i,v}', s => 'hypothetical_cume_dist_final' },
{ oid => '3992', descr => 'rank of hypothetical row without gaps',
  n => 'dense_rank', provariadic => '2276', proisagg => 't', v => 'i', p => 's', rt => 'int8', at => 'any', proallargtypes => '{any}', proargmodes => '{v}', s => 'aggregate_dummy' },
{ oid => '3993', descr => 'aggregate final function',
  n => 'dense_rank_final', provariadic => '2276', v => 'i', p => 's', rt => 'int8', at => 'internal any', proallargtypes => '{internal,any}', proargmodes => '{i,v}', s => 'hypothetical_dense_rank_final' },

# pg_upgrade support
{ oid => '3582', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_pg_type_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3584', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_array_pg_type_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3585', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_toast_pg_type_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3586', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_heap_pg_class_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3587', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_index_pg_class_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3588', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_toast_pg_class_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3589', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_pg_enum_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3590', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_next_pg_authid_oid', is => 't', p => 'r', rt => 'void', at => 'oid' },
{ oid => '3591', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_create_empty_extension', p => 'r', rt => 'void', at => 'text text bool text _oid _text _text' },
{ oid => '4083', descr => 'for use by pg_upgrade',
  n => 'binary_upgrade_set_record_init_privs', is => 't', p => 'r', rt => 'void', at => 'bool' },

# replication/origin.h
{ oid => '6003', descr => 'create a replication origin',
  n => 'pg_replication_origin_create', is => 't', rt => 'oid', at => 'text' },
{ oid => '6004', descr => 'drop replication origin identified by its name',
  n => 'pg_replication_origin_drop', is => 't', rt => 'void', at => 'text' },
{ oid => '6005', descr => 'translate the replication origin\'s name to its id',
  n => 'pg_replication_origin_oid', is => 't', v => 's', p => 's', rt => 'oid', at => 'text' },
{ oid => '6006', descr => 'configure session to maintain replication progress tracking for the passed in origin',
  n => 'pg_replication_origin_session_setup', is => 't', rt => 'void', at => 'text' },
{ oid => '6007', descr => 'teardown configured replication progress tracking',
  n => 'pg_replication_origin_session_reset', is => 't', rt => 'void', at => '' },
{ oid => '6008', descr => 'is a replication origin configured in this session',
  n => 'pg_replication_origin_session_is_setup', is => 't', p => 'r', rt => 'bool', at => '' },
{ oid => '6009', descr => 'get the replication progress of the current session',
  n => 'pg_replication_origin_session_progress', is => 't', rt => 'pg_lsn', at => 'bool' },
{ oid => '6010', descr => 'setup the transaction\'s origin lsn and timestamp',
  n => 'pg_replication_origin_xact_setup', is => 't', p => 'r', rt => 'void', at => 'pg_lsn timestamptz' },
{ oid => '6011', descr => 'reset the transaction\'s origin lsn and timestamp',
  n => 'pg_replication_origin_xact_reset', is => 't', p => 'r', rt => 'void', at => '' },
{ oid => '6012', descr => 'advance replication identifier to specific location',
  n => 'pg_replication_origin_advance', is => 't', rt => 'void', at => 'text pg_lsn' },
{ oid => '6013', descr => 'get an individual replication origin\'s replication progress',
  n => 'pg_replication_origin_progress', is => 't', rt => 'pg_lsn', at => 'text bool' },
{ oid => '6014', descr => 'get progress for all replication origins',
  n => 'pg_show_replication_origin_status', prorows => '100', proretset => 't', p => 'r', rt => 'record', at => '', proallargtypes => '{oid,text,pg_lsn,pg_lsn}', proargmodes => '{o,o,o,o}', proargnames => '{local_id, external_id, remote_lsn, local_lsn}' },

# publications
{ oid => '6119', descr => 'get OIDs of tables in a publication',
  n => 'pg_get_publication_tables', prorows => '1000', is => 't', proretset => 't', v => 's', p => 's', rt => 'oid', at => 'text', proallargtypes => '{text,oid}', proargmodes => '{i,o}', proargnames => '{pubname,relid}' },
{ oid => '6121', descr => 'returns whether a relation can be part of a publication',
  n => 'pg_relation_is_publishable', is => 't', v => 's', p => 's', rt => 'bool', at => 'regclass' },

# rls
{ oid => '3298', descr => 'row security for current context active on table by table oid',
  n => 'row_security_active', is => 't', v => 's', p => 's', rt => 'bool', at => 'oid' },
{ oid => '3299', descr => 'row security for current context active on table by table name',
  n => 'row_security_active', is => 't', v => 's', p => 's', rt => 'bool', at => 'text', s => 'row_security_active_name' },

# pg_config
{ oid => '3400', descr => 'pg_config binary as a function',
  n => 'pg_config', prorows => '23', is => 't', proretset => 't', v => 'i', p => 'r', rt => 'record', at => '', proallargtypes => '{text,text}', proargmodes => '{o,o}', proargnames => '{name,setting}' },

# pg_controldata related functions
{ oid => '3441', descr => 'pg_controldata general state information as a function',
  n => 'pg_control_system', is => 't', p => 's', rt => 'record', at => '', proallargtypes => '{int4,int4,int8,timestamptz}', proargmodes => '{o,o,o,o}', proargnames => '{pg_control_version,catalog_version_no,system_identifier,pg_control_last_modified}' },
{ oid => '3442', descr => 'pg_controldata checkpoint state information as a function',
  n => 'pg_control_checkpoint', is => 't', p => 's', rt => 'record', at => '', proallargtypes => '{pg_lsn,pg_lsn,text,int4,int4,bool,text,oid,xid,xid,xid,oid,xid,xid,oid,xid,xid,timestamptz}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{checkpoint_lsn,redo_lsn,redo_wal_file,timeline_id,prev_timeline_id,full_page_writes,next_xid,next_oid,next_multixact_id,next_multi_offset,oldest_xid,oldest_xid_dbid,oldest_active_xid,oldest_multi_xid,oldest_multi_dbid,oldest_commit_ts_xid,newest_commit_ts_xid,checkpoint_time}' },
{ oid => '3443', descr => 'pg_controldata recovery state information as a function',
  n => 'pg_control_recovery', is => 't', p => 's', rt => 'record', at => '', proallargtypes => '{pg_lsn,int4,pg_lsn,pg_lsn,bool}', proargmodes => '{o,o,o,o,o}', proargnames => '{min_recovery_end_lsn,min_recovery_end_timeline,backup_start_lsn,backup_end_lsn,end_of_backup_record_required}' },
{ oid => '3444', descr => 'pg_controldata init state information as a function',
  n => 'pg_control_init', is => 't', p => 's', rt => 'record', at => '', proallargtypes => '{int4,int4,int4,int4,int4,int4,int4,int4,int4,bool,bool,int4}', proargmodes => '{o,o,o,o,o,o,o,o,o,o,o,o}', proargnames => '{max_data_alignment,database_block_size,blocks_per_segment,wal_block_size,bytes_per_wal_segment,max_identifier_length,max_index_columns,max_toast_chunk_size,large_object_chunk_size,float4_pass_by_value,float8_pass_by_value,data_page_checksum_version}' },

# collation management functions
{ oid => '3445', descr => 'import collations from operating system',
  n => 'pg_import_system_collations', procost => '100', is => 't', p => 'r', rt => 'int4', at => 'regnamespace' },
{ oid => '3448', descr => 'get actual version of collation from operating system',
  n => 'pg_collation_actual_version', procost => '100', is => 't', p => 's', rt => 'text', at => 'oid' },

# system management/monitoring related functions
{ oid => '3353', descr => 'list files in the log directory',
  n => 'pg_ls_logdir', procost => '10', prorows => '20', is => 't', proretset => 't', p => 's', rt => 'record', at => '', proallargtypes => '{text,int8,timestamptz}', proargmodes => '{o,o,o}', proargnames => '{name,size,modification}' },
{ oid => '3354', descr => 'list of files in the WAL directory',
  n => 'pg_ls_waldir', procost => '10', prorows => '20', is => 't', proretset => 't', p => 's', rt => 'record', at => '', proallargtypes => '{text,int8,timestamptz}', proargmodes => '{o,o,o}', proargnames => '{name,size,modification}' },

# hash partitioning constraint function
{ oid => '5028', descr => 'hash partition CHECK constraint',
  n => 'satisfies_hash_partition', provariadic => '2276', v => 'i', p => 's', rt => 'bool', at => 'oid int4 int4 any', proargmodes => '{i,i,i,v}' },

]
