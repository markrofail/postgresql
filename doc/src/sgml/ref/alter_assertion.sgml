<!--
doc/src/sgml/ref/alter_assertion.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterassertion">

 <indexterm zone="sql-alterassertion">
  <primary>ALTER ASSERTION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER ASSERTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER ASSERTION</refname>
  <refpurpose>change the definition of an assertion</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER ASSERTION <replaceable>name</replaceable> RENAME TO <replaceable>new_name</replaceable>
ALTER ASSERTION <replaceable>name</replaceable> OWNER TO <replaceable>new_owner</replaceable>
ALTER ASSERTION <replaceable>name</replaceable> SET SCHEMA <replaceable>new_schema</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER ASSERTION</command> changes the definition of an
   assertion.
  </para>

  <para>
   You must own the assertion to use <command>ALTER ASSERTION</command>.  To
   change the schema of an assertion, you must also have
   <literal>CREATE</literal> privilege on the new schema.  To alter
   the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal>
   privilege on the assertion's schema.  (These restrictions enforce
   that altering the owner doesn't do anything you couldn't do by
   dropping and recreating the assertion.  However, a superuser can
   alter ownership of any assertion anyway.)
  </para>
 </refsect1>

 <refsect1>
  <title>Parameters</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      The name (optionally schema-qualified) of an existing assertion.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
     <para>
      The new name of the assertion.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_owner</replaceable></term>
    <listitem>
     <para>
      The new owner of the assertion.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
     <para>
      The new schema for the assertion.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Examples</title>

  <para>
   To rename the assertuib <literal>check_size</literal>
   to <literal>check_count</literal>:
<programlisting>
ALTER ASSERTION check_size RENAME TO check_count;
</programlisting>
  </para>

  <para>
   To change the owner of the assertion <literal>check_size</literal>
   to <literal>joe</literal>:
<programlisting>
ALTER ASSERTION check_size OWNER TO joe;
</programlisting>
  </para>

  <para>
   To move the assertion <literal>check_size</literal> into
   schema <literal>myschema</literal>:
<programlisting>
ALTER ASSERTION check_size SET SCHEMA myschema;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibility</title>

  <para>
   There is no <command>ALTER ASSERTION</command> statement in the SQL
   standard.
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createassertion"/></member>
   <member><xref linkend="sql-dropassertion"/></member>
  </simplelist>
 </refsect1>
</refentry>
